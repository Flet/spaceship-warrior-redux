package com.badlogic.gwtref.client;

import java.security.AccessControlException;
import java.util.*;
import com.badlogic.gwtref.client.*;

public class IReflectionCacheGenerated implements com.badlogic.gwtref.client.IReflectionCache {
  Map<String, Type> types = new HashMap<String, Type>();
  private void c0() {
  Type p = new Type("boolean", 0, boolean.class, null, null);
  p.isPrimitive = true;
  types.put("boolean", p);
  }
  private void c1() {
  Type t = new Type("boolean[]", 1, boolean[].class, null, null);
  t.isPrimitive = true;
  types.put("boolean[]", t);
  }
  private void c2() {
  Type p = new Type("byte", 2, byte.class, null, null);
  p.isPrimitive = true;
  types.put("byte", p);
  }
  private void c3() {
  Type t = new Type("byte[]", 3, byte[].class, null, null);
  t.isPrimitive = true;
  types.put("byte[]", t);
  }
  private void c4() {
  Type t = new Type("byte[][]", 4, byte[][].class, null, null);
  t.isPrimitive = true;
  types.put("byte[][]", t);
  }
  private void c5() {
  Type p = new Type("char", 5, char.class, null, null);
  p.isPrimitive = true;
  types.put("char", p);
  }
  private void c6() {
  Type t = new Type("char[]", 6, char[].class, null, null);
  t.isPrimitive = true;
  types.put("char[]", t);
  }
  private void c7() {
  Type t = new Type("com.badlogic.gdx.graphics.Color", 7, com.badlogic.gdx.graphics.Color.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("CLEAR", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 9, 8, null), 
      new Field("WHITE", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 11, 10, null), 
      new Field("BLACK", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 13, 12, null), 
      new Field("RED", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 15, 14, null), 
      new Field("GREEN", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 17, 16, null), 
      new Field("BLUE", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 19, 18, null), 
      new Field("LIGHT_GRAY", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 21, 20, null), 
      new Field("GRAY", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 23, 22, null), 
      new Field("DARK_GRAY", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 25, 24, null), 
      new Field("PINK", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 27, 26, null), 
      new Field("ORANGE", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 29, 28, null), 
      new Field("YELLOW", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 31, 30, null), 
      new Field("MAGENTA", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 33, 32, null), 
      new Field("CYAN", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, true, false, false, false, true, true, false, false, 35, 34, null), 
      new Field("tmp", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, true, false, false, 37, 36, null), 
      new Field("r", com.badlogic.gdx.graphics.Color.class, float.class, false, false, false, false, true, false, false, false, 39, 38, null), 
      new Field("g", com.badlogic.gdx.graphics.Color.class, float.class, false, false, false, false, true, false, false, false, 41, 40, null), 
      new Field("b", com.badlogic.gdx.graphics.Color.class, float.class, false, false, false, false, true, false, false, false, 43, 42, null), 
      new Field("a", com.badlogic.gdx.graphics.Color.class, float.class, false, false, false, false, true, false, false, false, 45, 44, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 46),
      new Method("set", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 47),
      new Method("set", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {rgba__I, }, false, false, false, false, false, false, true, false, false, true, false, 48),
      new Method("mul", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 49),
      new Method("mul", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 50),
      new Method("mul", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 51),
      new Method("add", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 52),
      new Method("add", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 53),
      new Method("sub", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 54),
      new Method("sub", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 55),
      new Method("clamp", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 56),
      new Method("lerp", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {target__Lcom_badlogic_gdx_graphics_Color_, t__F, }, false, false, false, false, false, false, true, false, false, true, false, 57),
      new Method("lerp", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, t__F, }, false, false, false, false, false, false, true, false, false, true, false, 58),
      new Method("premultiplyAlpha", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 59),
      new Method("equals", com.badlogic.gdx.graphics.Color.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 60),
      new Method("hashCode", com.badlogic.gdx.graphics.Color.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 61),
      new Method("toFloatBits", com.badlogic.gdx.graphics.Color.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 62),
      new Method("toFloatBits", com.badlogic.gdx.graphics.Color.class, float.class, new Parameter[] {r__I, g__I, b__I, a__I, }, false, false, true, false, false, false, true, false, false, true, false, 63),
      new Method("toFloatBits", com.badlogic.gdx.graphics.Color.class, float.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, true, false, false, false, true, false, false, true, false, 64),
      new Method("toIntBits", com.badlogic.gdx.graphics.Color.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 65),
      new Method("toIntBits", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {r__I, g__I, b__I, a__I, }, false, false, true, false, false, false, true, false, false, true, false, 66),
      new Method("toString", com.badlogic.gdx.graphics.Color.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 67),
      new Method("valueOf", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {hex__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 68),
      new Method("alpha", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {alpha__F, }, false, false, true, false, false, false, true, false, false, true, false, 69),
      new Method("luminanceAlpha", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {luminance__F, alpha__F, }, false, false, true, false, false, false, true, false, false, true, false, 70),
      new Method("rgb565", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {r__F, g__F, b__F, }, false, false, true, false, false, false, true, false, false, true, false, 71),
      new Method("rgb565", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, true, false, false, false, true, false, false, true, false, 72),
      new Method("rgba4444", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, true, false, false, false, true, false, false, true, false, 73),
      new Method("rgba4444", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, true, false, false, false, true, false, false, true, false, 74),
      new Method("rgb888", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {r__F, g__F, b__F, }, false, false, true, false, false, false, true, false, false, true, false, 75),
      new Method("rgb888", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, true, false, false, false, true, false, false, true, false, 76),
      new Method("rgba8888", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, true, false, false, false, true, false, false, true, false, 77),
      new Method("rgba8888", com.badlogic.gdx.graphics.Color.class, int.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, true, false, false, false, true, false, false, true, false, 78),
      new Method("rgb565ToColor", com.badlogic.gdx.graphics.Color.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, value__I, }, false, false, true, false, false, false, true, false, false, true, false, 79),
      new Method("rgba4444ToColor", com.badlogic.gdx.graphics.Color.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, value__I, }, false, false, true, false, false, false, true, false, false, true, false, 80),
      new Method("rgb888ToColor", com.badlogic.gdx.graphics.Color.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, value__I, }, false, false, true, false, false, false, true, false, false, true, false, 81),
      new Method("rgba8888ToColor", com.badlogic.gdx.graphics.Color.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, value__I, }, false, false, true, false, false, false, true, false, false, true, false, 82),
      new Method("tmp", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 83),
      new Method("cpy", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 84),
  };
  t.constructors = new Constructor[] {
      new Constructor("Color", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 85),
      new Constructor("Color", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {rgba8888__I, }, false, false, false, false, false, false, true, false, false, false, true, 86),
      new Constructor("Color", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, false, true, 87),
      new Constructor("Color", com.badlogic.gdx.graphics.Color.class, com.badlogic.gdx.graphics.Color.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, false, true, 88),
  };
  types.put("com.badlogic.gdx.graphics.Color", t);
  }
  private void c8() {
  Type t = new Type("com.badlogic.gdx.graphics.Texture", 89, com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.GLTexture.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.graphics.GLTexture.class, com.badlogic.gdx.utils.Disposable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("assetManager", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.assets.AssetManager.class, false, false, true, false, false, true, false, false, 91, 90, null), 
      new Field("managedTextures", com.badlogic.gdx.graphics.Texture.class, java.util.Map.class, true, true, false, false, false, true, false, false, 93, 92, new Class[] {com.badlogic.gdx.Application.class, com.badlogic.gdx.utils.Array.class, }), 
      new Field("data", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.TextureData.class, false, true, false, false, false, false, false, false, 95, 94, null), 
  };
  t.methods = new Method[] {
      new Method("load", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {data__Lcom_badlogic_gdx_graphics_TextureData_, }, false, false, false, false, false, false, true, false, false, true, false, 96),
      new Method("reload", com.badlogic.gdx.graphics.Texture.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 97),
      new Method("draw", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {pixmap__Lcom_badlogic_gdx_graphics_Pixmap_, x__I, y__I, }, false, false, false, false, false, false, true, false, false, true, false, 98),
      new Method("getWidth", com.badlogic.gdx.graphics.Texture.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 99),
      new Method("getHeight", com.badlogic.gdx.graphics.Texture.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 100),
      new Method("getDepth", com.badlogic.gdx.graphics.Texture.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 101),
      new Method("getTextureData", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.TextureData.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 102),
      new Method("isManaged", com.badlogic.gdx.graphics.Texture.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 103),
      new Method("dispose", com.badlogic.gdx.graphics.Texture.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 104),
      new Method("addManagedTexture", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {app__Lcom_badlogic_gdx_Application_, texture__Lcom_badlogic_gdx_graphics_Texture_, }, false, false, true, false, true, false, false, false, false, true, false, 105),
      new Method("clearAllTextures", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {app__Lcom_badlogic_gdx_Application_, }, false, false, true, false, false, false, true, false, false, true, false, 106),
      new Method("invalidateAllTextures", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {app__Lcom_badlogic_gdx_Application_, }, false, false, true, false, false, false, true, false, false, true, false, 107),
      new Method("setAssetManager", com.badlogic.gdx.graphics.Texture.class, void.class, new Parameter[] {manager__Lcom_badlogic_gdx_assets_AssetManager_, }, false, false, true, false, false, false, true, false, false, true, false, 108),
      new Method("getManagedStatus", com.badlogic.gdx.graphics.Texture.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 109),
      new Method("getNumManagedTextures", com.badlogic.gdx.graphics.Texture.class, int.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 110),
  };
  t.constructors = new Constructor[] {
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {internalPath__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 111),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {file__Lcom_badlogic_gdx_files_FileHandle_, }, false, false, false, false, false, false, true, false, false, false, true, 112),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {file__Lcom_badlogic_gdx_files_FileHandle_, useMipMaps__Z, }, false, false, false, false, false, false, true, false, false, false, true, 113),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {file__Lcom_badlogic_gdx_files_FileHandle_, format__Lcom_badlogic_gdx_graphics_Pixmap$Format_, useMipMaps__Z, }, false, false, false, false, false, false, true, false, false, false, true, 114),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {pixmap__Lcom_badlogic_gdx_graphics_Pixmap_, }, false, false, false, false, false, false, true, false, false, false, true, 115),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {pixmap__Lcom_badlogic_gdx_graphics_Pixmap_, useMipMaps__Z, }, false, false, false, false, false, false, true, false, false, false, true, 116),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {pixmap__Lcom_badlogic_gdx_graphics_Pixmap_, format__Lcom_badlogic_gdx_graphics_Pixmap$Format_, useMipMaps__Z, }, false, false, false, false, false, false, true, false, false, false, true, 117),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {width__I, height__I, format__Lcom_badlogic_gdx_graphics_Pixmap$Format_, }, false, false, false, false, false, false, true, false, false, false, true, 118),
      new Constructor("Texture", com.badlogic.gdx.graphics.Texture.class, com.badlogic.gdx.graphics.Texture.class, new Parameter[] {data__Lcom_badlogic_gdx_graphics_TextureData_, }, false, false, false, false, false, false, true, false, false, false, true, 119),
  };
  types.put("com.badlogic.gdx.graphics.Texture", t);
  }
  private void c9() {
  Type t = new Type("com.badlogic.gdx.graphics.Texture.TextureFilter", 120, com.badlogic.gdx.graphics.Texture.TextureFilter.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("Nearest", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 122, 121, null), 
      new Field("Linear", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 124, 123, null), 
      new Field("MipMap", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 126, 125, null), 
      new Field("MipMapNearestNearest", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 128, 127, null), 
      new Field("MipMapLinearNearest", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 130, 129, null), 
      new Field("MipMapNearestLinear", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 132, 131, null), 
      new Field("MipMapLinearLinear", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, true, false, false, false, true, true, false, false, 134, 133, null), 
      new Field("glEnum", com.badlogic.gdx.graphics.Texture.TextureFilter.class, int.class, true, true, false, false, false, false, false, false, 136, 135, null), 
  };
  t.methods = new Method[] {
      new Method("isMipMap", com.badlogic.gdx.graphics.Texture.TextureFilter.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 137),
      new Method("getGLEnum", com.badlogic.gdx.graphics.Texture.TextureFilter.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 138),
      new Method("values", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 139),
      new Method("valueOf", com.badlogic.gdx.graphics.Texture.TextureFilter.class, com.badlogic.gdx.graphics.Texture.TextureFilter.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 140),
  };
  t.enumConstants = new Object[7];
  t.enumConstants[0] = com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest;
  t.enumConstants[1] = com.badlogic.gdx.graphics.Texture.TextureFilter.Linear;
  t.enumConstants[2] = com.badlogic.gdx.graphics.Texture.TextureFilter.MipMap;
  t.enumConstants[3] = com.badlogic.gdx.graphics.Texture.TextureFilter.MipMapNearestNearest;
  t.enumConstants[4] = com.badlogic.gdx.graphics.Texture.TextureFilter.MipMapLinearNearest;
  t.enumConstants[5] = com.badlogic.gdx.graphics.Texture.TextureFilter.MipMapNearestLinear;
  t.enumConstants[6] = com.badlogic.gdx.graphics.Texture.TextureFilter.MipMapLinearLinear;
  types.put("com.badlogic.gdx.graphics.Texture.TextureFilter", t);
  }
  private void c10() {
  Type t = new Type("com.badlogic.gdx.graphics.Texture.TextureFilter[]", 141, com.badlogic.gdx.graphics.Texture.TextureFilter[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.Texture.TextureFilter[]", t);
  }
  private void c11() {
  Type t = new Type("com.badlogic.gdx.graphics.Texture.TextureWrap", 142, com.badlogic.gdx.graphics.Texture.TextureWrap.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MirroredRepeat", com.badlogic.gdx.graphics.Texture.TextureWrap.class, com.badlogic.gdx.graphics.Texture.TextureWrap.class, true, false, false, false, true, true, false, false, 144, 143, null), 
      new Field("ClampToEdge", com.badlogic.gdx.graphics.Texture.TextureWrap.class, com.badlogic.gdx.graphics.Texture.TextureWrap.class, true, false, false, false, true, true, false, false, 146, 145, null), 
      new Field("Repeat", com.badlogic.gdx.graphics.Texture.TextureWrap.class, com.badlogic.gdx.graphics.Texture.TextureWrap.class, true, false, false, false, true, true, false, false, 148, 147, null), 
      new Field("glEnum", com.badlogic.gdx.graphics.Texture.TextureWrap.class, int.class, true, true, false, false, false, false, false, false, 150, 149, null), 
  };
  t.methods = new Method[] {
      new Method("getGLEnum", com.badlogic.gdx.graphics.Texture.TextureWrap.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 151),
      new Method("values", com.badlogic.gdx.graphics.Texture.TextureWrap.class, com.badlogic.gdx.graphics.Texture.TextureWrap[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 152),
      new Method("valueOf", com.badlogic.gdx.graphics.Texture.TextureWrap.class, com.badlogic.gdx.graphics.Texture.TextureWrap.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 153),
  };
  t.enumConstants = new Object[3];
  t.enumConstants[0] = com.badlogic.gdx.graphics.Texture.TextureWrap.MirroredRepeat;
  t.enumConstants[1] = com.badlogic.gdx.graphics.Texture.TextureWrap.ClampToEdge;
  t.enumConstants[2] = com.badlogic.gdx.graphics.Texture.TextureWrap.Repeat;
  types.put("com.badlogic.gdx.graphics.Texture.TextureWrap", t);
  }
  private void c12() {
  Type t = new Type("com.badlogic.gdx.graphics.Texture.TextureWrap[]", 154, com.badlogic.gdx.graphics.Texture.TextureWrap[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.Texture.TextureWrap[]", t);
  }
  private void c13() {
  Type t = new Type("com.badlogic.gdx.graphics.TextureData", 155, com.badlogic.gdx.graphics.TextureData.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.TextureData", t);
  }
  private void c14() {
  Type t = new Type("com.badlogic.gdx.graphics.TextureData.TextureDataType", 156, com.badlogic.gdx.graphics.TextureData.TextureDataType.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("Pixmap", com.badlogic.gdx.graphics.TextureData.TextureDataType.class, com.badlogic.gdx.graphics.TextureData.TextureDataType.class, true, false, false, false, true, true, false, false, 158, 157, null), 
      new Field("Compressed", com.badlogic.gdx.graphics.TextureData.TextureDataType.class, com.badlogic.gdx.graphics.TextureData.TextureDataType.class, true, false, false, false, true, true, false, false, 160, 159, null), 
      new Field("Float", com.badlogic.gdx.graphics.TextureData.TextureDataType.class, com.badlogic.gdx.graphics.TextureData.TextureDataType.class, true, false, false, false, true, true, false, false, 162, 161, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.graphics.TextureData.TextureDataType.class, com.badlogic.gdx.graphics.TextureData.TextureDataType[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 163),
      new Method("valueOf", com.badlogic.gdx.graphics.TextureData.TextureDataType.class, com.badlogic.gdx.graphics.TextureData.TextureDataType.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 164),
  };
  t.enumConstants = new Object[3];
  t.enumConstants[0] = com.badlogic.gdx.graphics.TextureData.TextureDataType.Pixmap;
  t.enumConstants[1] = com.badlogic.gdx.graphics.TextureData.TextureDataType.Compressed;
  t.enumConstants[2] = com.badlogic.gdx.graphics.TextureData.TextureDataType.Float;
  types.put("com.badlogic.gdx.graphics.TextureData.TextureDataType", t);
  }
  private void c15() {
  Type t = new Type("com.badlogic.gdx.graphics.TextureData.TextureDataType[]", 165, com.badlogic.gdx.graphics.TextureData.TextureDataType[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.TextureData.TextureDataType[]", t);
  }
  private void c16() {
  Type t = new Type("com.badlogic.gdx.graphics.VertexAttribute", 166, com.badlogic.gdx.graphics.VertexAttribute.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("usage", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, true, false, false, false, true, false, false, false, 168, 167, null), 
      new Field("numComponents", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, true, false, false, false, true, false, false, false, 170, 169, null), 
      new Field("offset", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, false, false, false, false, true, false, false, false, 172, 171, null), 
      new Field("alias", com.badlogic.gdx.graphics.VertexAttribute.class, java.lang.String.class, false, false, false, false, true, false, false, false, 174, 173, null), 
      new Field("unit", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, false, false, false, false, true, false, false, false, 176, 175, null), 
      new Field("usageIndex", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, true, false, true, false, false, false, false, false, 178, 177, null), 
  };
  t.methods = new Method[] {
      new Method("Position", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 179),
      new Method("TexCoords", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {unit__I, }, false, false, true, false, false, false, true, false, false, true, false, 180),
      new Method("Normal", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 181),
      new Method("Color", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 182),
      new Method("ColorUnpacked", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 183),
      new Method("Tangent", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 184),
      new Method("Binormal", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 185),
      new Method("BoneWeight", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {unit__I, }, false, false, true, false, false, false, true, false, false, true, false, 186),
      new Method("equals", com.badlogic.gdx.graphics.VertexAttribute.class, boolean.class, new Parameter[] {obj__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 187),
      new Method("equals", com.badlogic.gdx.graphics.VertexAttribute.class, boolean.class, new Parameter[] {other__Lcom_badlogic_gdx_graphics_VertexAttribute_, }, false, false, false, false, false, false, true, false, false, true, false, 188),
      new Method("getKey", com.badlogic.gdx.graphics.VertexAttribute.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 189),
  };
  t.constructors = new Constructor[] {
      new Constructor("VertexAttribute", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {usage__I, numComponents__I, alias__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 190),
      new Constructor("VertexAttribute", com.badlogic.gdx.graphics.VertexAttribute.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {usage__I, numComponents__I, alias__Ljava_lang_String_, index__I, }, false, false, false, false, false, false, true, false, false, false, true, 191),
  };
  types.put("com.badlogic.gdx.graphics.VertexAttribute", t);
  }
  private void c17() {
  Type t = new Type("com.badlogic.gdx.graphics.VertexAttribute[]", 192, com.badlogic.gdx.graphics.VertexAttribute[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.VertexAttribute[]", t);
  }
  private void c18() {
  Type t = new Type("com.badlogic.gdx.graphics.VertexAttributes", 193, com.badlogic.gdx.graphics.VertexAttributes.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("attributes", com.badlogic.gdx.graphics.VertexAttributes.class, com.badlogic.gdx.graphics.VertexAttribute[].class, true, false, true, false, false, false, false, false, 195, 194, null), 
      new Field("vertexSize", com.badlogic.gdx.graphics.VertexAttributes.class, int.class, true, false, false, false, true, false, false, false, 197, 196, null), 
      new Field("mask", com.badlogic.gdx.graphics.VertexAttributes.class, long.class, false, false, true, false, false, false, false, false, 199, 198, null), 
      new Field("iterable", com.badlogic.gdx.graphics.VertexAttributes.class, null, false, false, true, false, false, false, false, false, 201, 200, new Class[] {com.badlogic.gdx.graphics.VertexAttribute.class, }), 
  };
  t.methods = new Method[] {
      new Method("getOffset", com.badlogic.gdx.graphics.VertexAttributes.class, int.class, new Parameter[] {usage__I, }, false, false, false, false, false, false, true, false, false, true, false, 202),
      new Method("findByUsage", com.badlogic.gdx.graphics.VertexAttributes.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {usage__I, }, false, false, false, false, false, false, true, false, false, true, false, 203),
      new Method("calculateOffsets", com.badlogic.gdx.graphics.VertexAttributes.class, int.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 204),
      new Method("checkGLES1Validity", com.badlogic.gdx.graphics.VertexAttributes.class, void.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 205),
      new Method("size", com.badlogic.gdx.graphics.VertexAttributes.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 206),
      new Method("get", com.badlogic.gdx.graphics.VertexAttributes.class, com.badlogic.gdx.graphics.VertexAttribute.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 207),
      new Method("toString", com.badlogic.gdx.graphics.VertexAttributes.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 208),
      new Method("equals", com.badlogic.gdx.graphics.VertexAttributes.class, boolean.class, new Parameter[] {obj__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 209),
      new Method("getMask", com.badlogic.gdx.graphics.VertexAttributes.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 210),
      new Method("iterator", com.badlogic.gdx.graphics.VertexAttributes.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 211),
  };
  t.constructors = new Constructor[] {
      new Constructor("VertexAttributes", com.badlogic.gdx.graphics.VertexAttributes.class, com.badlogic.gdx.graphics.VertexAttributes.class, new Parameter[] {attributes___Lcom_badlogic_gdx_graphics_VertexAttribute_, }, false, false, false, false, false, false, true, false, true, false, true, 212),
  };
  types.put("com.badlogic.gdx.graphics.VertexAttributes", t);
  }
  private void c19() {
  Type t = new Type("com.badlogic.gdx.graphics.VertexAttributes.Usage", 213, com.badlogic.gdx.graphics.VertexAttributes.Usage.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("Position", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 215, 214, null), 
      new Field("Color", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 217, 216, null), 
      new Field("ColorPacked", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 219, 218, null), 
      new Field("Normal", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 221, 220, null), 
      new Field("TextureCoordinates", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 223, 222, null), 
      new Field("Generic", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 225, 224, null), 
      new Field("BoneWeight", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 227, 226, null), 
      new Field("Tangent", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 229, 228, null), 
      new Field("BiNormal", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, int.class, true, false, false, false, true, true, false, false, 231, 230, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("Usage", com.badlogic.gdx.graphics.VertexAttributes.Usage.class, com.badlogic.gdx.graphics.VertexAttributes.Usage.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 232),
  };
  types.put("com.badlogic.gdx.graphics.VertexAttributes.Usage", t);
  }
  private void c20() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont", 233, com.badlogic.gdx.graphics.g2d.BitmapFont.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.Disposable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("LOG2_PAGE_SIZE", com.badlogic.gdx.graphics.g2d.BitmapFont.class, int.class, true, false, true, false, false, true, false, false, 235, 234, null), 
      new Field("PAGE_SIZE", com.badlogic.gdx.graphics.g2d.BitmapFont.class, int.class, true, false, true, false, false, true, false, false, 237, 236, null), 
      new Field("PAGES", com.badlogic.gdx.graphics.g2d.BitmapFont.class, int.class, true, false, true, false, false, true, false, false, 239, 238, null), 
      new Field("xChars", com.badlogic.gdx.graphics.g2d.BitmapFont.class, char[].class, true, false, false, false, true, true, false, false, 241, 240, null), 
      new Field("capChars", com.badlogic.gdx.graphics.g2d.BitmapFont.class, char[].class, true, false, false, false, true, true, false, false, 243, 242, null), 
      new Field("data", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, true, true, false, false, false, false, false, false, 245, 244, null), 
      new Field("regions", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.TextureRegion[].class, false, true, false, false, false, false, false, false, 247, 246, null), 
      new Field("cache", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, true, false, true, false, false, false, false, false, 249, 248, null), 
      new Field("flipped", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, false, false, true, false, false, false, false, false, 251, 250, null), 
      new Field("integer", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, false, false, true, false, false, false, false, false, 253, 252, null), 
      new Field("ownsTexture", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, false, false, true, false, false, false, false, false, 255, 254, null), 
  };
  t.methods = new Method[] {
      new Method("load", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {data__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$BitmapFontData_, }, false, false, false, false, true, false, false, false, false, true, false, 256),
      new Method("draw", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 257),
      new Method("draw", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 258),
      new Method("drawMultiLine", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 259),
      new Method("drawMultiLine", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, alignmentWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 260),
      new Method("drawWrapped", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 261),
      new Method("drawWrapped", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 262),
      new Method("getBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 263),
      new Method("getBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, true, false, 264),
      new Method("getBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 265),
      new Method("getBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, start__I, end__I, textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, true, false, 266),
      new Method("getMultiLineBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 267),
      new Method("getMultiLineBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, true, false, 268),
      new Method("getWrappedBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, wrapWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 269),
      new Method("getWrappedBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, wrapWidth__F, textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, true, false, 270),
      new Method("computeGlyphAdvancesAndPositions", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {str__Ljava_lang_CharSequence_, glyphAdvances__Lcom_badlogic_gdx_utils_FloatArray_, glyphPositions__Lcom_badlogic_gdx_utils_FloatArray_, }, false, false, false, false, false, false, true, false, false, true, false, 271),
      new Method("computeVisibleGlyphs", com.badlogic.gdx.graphics.g2d.BitmapFont.class, int.class, new Parameter[] {str__Ljava_lang_CharSequence_, start__I, end__I, availableWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 272),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {color__F, }, false, false, false, false, false, false, true, false, false, true, false, 273),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 274),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 275),
      new Method("getColor", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 276),
      new Method("setScale", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 277),
      new Method("setScale", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {scaleXY__F, }, false, false, false, false, false, false, true, false, false, true, false, 278),
      new Method("scale", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {amount__F, }, false, false, false, false, false, false, true, false, false, true, false, 279),
      new Method("getScaleX", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 280),
      new Method("getScaleY", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 281),
      new Method("getRegion", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 282),
      new Method("getRegion", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 283),
      new Method("getRegions", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.TextureRegion[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 284),
      new Method("getLineHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 285),
      new Method("getSpaceWidth", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 286),
      new Method("getXHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 287),
      new Method("getCapHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 288),
      new Method("getAscent", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 289),
      new Method("getDescent", com.badlogic.gdx.graphics.g2d.BitmapFont.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 290),
      new Method("isFlipped", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 291),
      new Method("dispose", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 292),
      new Method("setFixedWidthGlyphs", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {glyphs__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 293),
      new Method("containsCharacter", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, new Parameter[] {character__C, }, false, false, false, false, false, false, true, false, false, true, false, 294),
      new Method("setUseIntegerPositions", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {integer__Z, }, false, false, false, false, false, false, true, false, false, true, false, 295),
      new Method("usesIntegerPositions", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 296),
      new Method("getCache", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 297),
      new Method("getData", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 298),
      new Method("ownsTexture", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 299),
      new Method("setOwnsTexture", com.badlogic.gdx.graphics.g2d.BitmapFont.class, void.class, new Parameter[] {ownsTexture__Z, }, false, false, false, false, false, false, true, false, false, true, false, 300),
      new Method("indexOf", com.badlogic.gdx.graphics.g2d.BitmapFont.class, int.class, new Parameter[] {text__Ljava_lang_CharSequence_, ch__C, start__I, }, false, false, true, true, false, false, false, false, false, true, false, 301),
      new Method("isWhitespace", com.badlogic.gdx.graphics.g2d.BitmapFont.class, boolean.class, new Parameter[] {c__C, }, false, false, true, true, false, false, false, false, false, true, false, 302),
  };
  t.constructors = new Constructor[] {
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 303),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {flip__Z, }, false, false, false, false, false, false, true, false, false, false, true, 304),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, false, false, true, false, false, false, true, 305),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, flip__Z, }, false, false, false, false, false, false, true, false, false, false, true, 306),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, }, false, false, false, false, false, false, true, false, false, false, true, 307),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, flip__Z, }, false, false, false, false, false, false, true, false, false, false, true, 308),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, imageFile__Lcom_badlogic_gdx_files_FileHandle_, flip__Z, }, false, false, false, false, false, false, true, false, false, false, true, 309),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, imageFile__Lcom_badlogic_gdx_files_FileHandle_, flip__Z, integer__Z, }, false, false, false, false, false, false, true, false, false, false, true, 310),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {data__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$BitmapFontData_, region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, integer__Z, }, false, false, false, false, false, false, true, false, false, false, true, 311),
      new Constructor("BitmapFont", com.badlogic.gdx.graphics.g2d.BitmapFont.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, new Parameter[] {data__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$BitmapFontData_, regions___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, integer__Z, }, false, false, false, false, false, false, true, false, false, false, true, 312),
  };
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont", t);
  }
  private void c21() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", 313, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("imagePath", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.String.class, false, false, false, false, true, false, false, false, 315, 314, null), 
      new Field("imagePaths", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.String[].class, false, false, false, false, true, false, false, false, 317, 316, null), 
      new Field("fontFile", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.files.FileHandle.class, false, false, false, false, true, false, false, false, 319, 318, null), 
      new Field("flipped", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, boolean.class, false, false, false, false, true, false, false, false, 321, 320, null), 
      new Field("lineHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 323, 322, null), 
      new Field("capHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 325, 324, null), 
      new Field("ascent", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 327, 326, null), 
      new Field("descent", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 329, 328, null), 
      new Field("down", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 331, 330, null), 
      new Field("scaleX", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 333, 332, null), 
      new Field("scaleY", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 335, 334, null), 
      new Field("glyphs", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][].class, true, false, false, false, true, false, false, false, 337, 336, null), 
      new Field("spaceWidth", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 339, 338, null), 
      new Field("xHeight", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, float.class, false, false, false, false, true, false, false, false, 341, 340, null), 
  };
  t.methods = new Method[] {
      new Method("setGlyph", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, void.class, new Parameter[] {ch__I, glyph__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$Glyph_, }, false, false, false, false, false, false, true, false, false, true, false, 342),
      new Method("getFirstGlyph", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 343),
      new Method("getGlyph", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, new Parameter[] {ch__C, }, false, false, false, false, false, false, true, false, false, true, false, 344),
      new Method("getImagePath", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 345),
      new Method("getImagePath", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.String.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 346),
      new Method("getImagePaths", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, java.lang.String[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 347),
      new Method("getFontFile", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.files.FileHandle.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 348),
  };
  t.constructors = new Constructor[] {
      new Constructor("BitmapFontData", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 349),
      new Constructor("BitmapFontData", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, new Parameter[] {fontFile__Lcom_badlogic_gdx_files_FileHandle_, flip__Z, }, false, false, false, false, false, false, true, false, false, false, true, 350),
  };
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", t);
  }
  private void c22() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph", 351, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 353, 352, null), 
      new Field("srcX", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 355, 354, null), 
      new Field("srcY", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 357, 356, null), 
      new Field("width", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 359, 358, null), 
      new Field("height", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 361, 360, null), 
      new Field("u", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, float.class, false, false, false, false, true, false, false, false, 363, 362, null), 
      new Field("v", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, float.class, false, false, false, false, true, false, false, false, 365, 364, null), 
      new Field("u2", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, float.class, false, false, false, false, true, false, false, false, 367, 366, null), 
      new Field("v2", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, float.class, false, false, false, false, true, false, false, false, 369, 368, null), 
      new Field("xoffset", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 371, 370, null), 
      new Field("yoffset", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 373, 372, null), 
      new Field("xadvance", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 375, 374, null), 
      new Field("kerning", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, byte[][].class, false, false, false, false, true, false, false, false, 377, 376, null), 
      new Field("page", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, false, false, false, false, true, false, false, false, 379, 378, null), 
  };
  t.methods = new Method[] {
      new Method("getKerning", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, int.class, new Parameter[] {ch__C, }, false, false, false, false, false, false, true, false, false, true, false, 380),
      new Method("setKerning", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, void.class, new Parameter[] {ch__I, value__I, }, false, false, false, false, false, false, true, false, false, true, false, 381),
  };
  t.constructors = new Constructor[] {
      new Constructor("Glyph", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 382),
  };
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph", t);
  }
  private void c23() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][]", 383, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][]", t);
  }
  private void c24() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment", 384, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("LEFT", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, true, false, false, false, true, true, false, false, 386, 385, null), 
      new Field("CENTER", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, true, false, false, false, true, true, false, false, 388, 387, null), 
      new Field("RIGHT", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, true, false, false, false, true, true, false, false, 390, 389, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 391),
      new Method("valueOf", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 392),
  };
  t.enumConstants = new Object[3];
  t.enumConstants[0] = com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.LEFT;
  t.enumConstants[1] = com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.CENTER;
  t.enumConstants[2] = com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.RIGHT;
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment", t);
  }
  private void c25() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[]", 393, com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[]", t);
  }
  private void c26() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds", 394, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("width", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, float.class, false, false, false, false, true, false, false, false, 396, 395, null), 
      new Field("height", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, float.class, false, false, false, false, true, false, false, false, 398, 397, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, void.class, new Parameter[] {bounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, true, false, 399),
  };
  t.constructors = new Constructor[] {
      new Constructor("TextBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 400),
      new Constructor("TextBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {bounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_, }, false, false, false, false, false, false, true, false, false, false, true, 401),
  };
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds", t);
  }
  private void c27() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.BitmapFontCache", 402, com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("font", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, true, false, true, false, false, false, false, false, 404, 403, null), 
      new Field("vertexData", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float[][].class, false, false, true, false, false, false, false, false, 406, 405, null), 
      new Field("idx", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, int[].class, false, false, true, false, false, false, false, false, 408, 407, null), 
      new Field("tmpGlyphCount", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, int[].class, false, false, true, false, false, false, false, false, 410, 409, null), 
      new Field("x", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, false, false, true, false, false, false, false, false, 412, 411, null), 
      new Field("y", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, false, false, true, false, false, false, false, false, 414, 413, null), 
      new Field("color", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, false, false, true, false, false, false, false, false, 416, 415, null), 
      new Field("tempColor", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.Color.class, true, false, true, false, false, false, false, false, 418, 417, null), 
      new Field("textBounds", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, true, false, true, false, false, false, false, false, 420, 419, null), 
      new Field("integer", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, boolean.class, false, false, true, false, false, false, false, false, 422, 421, null), 
      new Field("glyphCount", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, int.class, false, false, true, false, false, false, false, false, 424, 423, null), 
      new Field("glyphIndices", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.utils.IntArray[].class, false, false, true, false, false, false, false, false, 426, 425, null), 
  };
  t.methods = new Method[] {
      new Method("setPosition", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 427),
      new Method("translate", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {xAmount__F, yAmount__F, }, false, false, false, false, false, false, true, false, false, true, false, 428),
      new Method("setColors", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {color__F, }, false, false, false, false, false, false, true, false, false, true, false, 429),
      new Method("setColors", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {tint__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 430),
      new Method("setColors", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 431),
      new Method("setColors", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {tint__Lcom_badlogic_gdx_graphics_Color_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 432),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {tint__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 433),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 434),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {color__F, }, false, false, false, false, false, false, true, false, false, true, false, 435),
      new Method("getColor", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 436),
      new Method("draw", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {spriteBatch__Lcom_badlogic_gdx_graphics_g2d_Batch_, }, false, false, false, false, false, false, true, false, false, true, false, 437),
      new Method("draw", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {spriteBatch__Lcom_badlogic_gdx_graphics_g2d_Batch_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 438),
      new Method("draw", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {spriteBatch__Lcom_badlogic_gdx_graphics_g2d_Batch_, alphaModulation__F, }, false, false, false, false, false, false, true, false, false, true, false, 439),
      new Method("clear", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 440),
      new Method("requireSequence", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {seq__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, true, false, false, false, false, true, false, 441),
      new Method("require", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {page__I, glyphCount__I, }, false, false, false, false, true, false, false, false, false, true, false, 442),
      new Method("addToCache", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, start__I, end__I, }, false, false, false, false, true, false, false, false, false, true, false, 443),
      new Method("addGlyph", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {glyph__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$Glyph_, x__F, y__F, width__F, height__F, }, false, false, false, false, true, false, false, false, false, true, false, 444),
      new Method("setText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 445),
      new Method("setText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 446),
      new Method("addText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 447),
      new Method("addText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 448),
      new Method("setMultiLineText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 449),
      new Method("setMultiLineText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, alignmentWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 450),
      new Method("addMultiLineText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 451),
      new Method("addMultiLineText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, alignmentWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 452),
      new Method("setWrappedText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 453),
      new Method("setWrappedText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 454),
      new Method("addWrappedText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 455),
      new Method("addWrappedText", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, new Parameter[] {str__Ljava_lang_CharSequence_, x__F, y__F, wrapWidth__F, alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_, }, false, false, false, false, false, false, true, false, false, true, false, 456),
      new Method("getBounds", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 457),
      new Method("getX", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 458),
      new Method("getY", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 459),
      new Method("getFont", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFont.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 460),
      new Method("setUseIntegerPositions", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, void.class, new Parameter[] {use__Z, }, false, false, false, false, false, false, true, false, false, true, false, 461),
      new Method("usesIntegerPositions", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 462),
      new Method("getVertices", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 463),
      new Method("getVertices", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, float[].class, new Parameter[] {page__I, }, false, false, false, false, false, false, true, false, false, true, false, 464),
  };
  t.constructors = new Constructor[] {
      new Constructor("BitmapFontCache", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, new Parameter[] {font__Lcom_badlogic_gdx_graphics_g2d_BitmapFont_, }, false, false, false, false, false, false, true, false, false, false, true, 465),
      new Constructor("BitmapFontCache", com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, com.badlogic.gdx.graphics.g2d.BitmapFontCache.class, new Parameter[] {font__Lcom_badlogic_gdx_graphics_g2d_BitmapFont_, integer__Z, }, false, false, false, false, false, false, true, false, false, false, true, 466),
  };
  types.put("com.badlogic.gdx.graphics.g2d.BitmapFontCache", t);
  }
  private void c28() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.NinePatch", 467, com.badlogic.gdx.graphics.g2d.NinePatch.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("TOP_LEFT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 469, 468, null), 
      new Field("TOP_CENTER", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 471, 470, null), 
      new Field("TOP_RIGHT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 473, 472, null), 
      new Field("MIDDLE_LEFT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 475, 474, null), 
      new Field("MIDDLE_CENTER", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 477, 476, null), 
      new Field("MIDDLE_RIGHT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 479, 478, null), 
      new Field("BOTTOM_LEFT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 481, 480, null), 
      new Field("BOTTOM_CENTER", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 483, 482, null), 
      new Field("BOTTOM_RIGHT", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, true, false, false, false, true, true, false, false, 485, 484, null), 
      new Field("tmpDrawColor", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.Color.class, true, false, true, false, false, true, false, false, 487, 486, null), 
      new Field("texture", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.Texture.class, false, false, true, false, false, false, false, false, 489, 488, null), 
      new Field("bottomLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 491, 490, null), 
      new Field("bottomCenter", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 493, 492, null), 
      new Field("bottomRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 495, 494, null), 
      new Field("middleLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 497, 496, null), 
      new Field("middleCenter", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 499, 498, null), 
      new Field("middleRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 501, 500, null), 
      new Field("topLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 503, 502, null), 
      new Field("topCenter", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 505, 504, null), 
      new Field("topRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 507, 506, null), 
      new Field("leftWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 509, 508, null), 
      new Field("rightWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 511, 510, null), 
      new Field("middleWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 513, 512, null), 
      new Field("middleHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 515, 514, null), 
      new Field("topHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 517, 516, null), 
      new Field("bottomHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, false, false, true, false, false, false, false, false, 519, 518, null), 
      new Field("vertices", com.badlogic.gdx.graphics.g2d.NinePatch.class, float[].class, false, false, true, false, false, false, false, false, 521, 520, null), 
      new Field("idx", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 523, 522, null), 
      new Field("color", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.Color.class, true, false, true, false, false, false, false, false, 525, 524, null), 
      new Field("padLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 527, 526, null), 
      new Field("padRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 529, 528, null), 
      new Field("padTop", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 531, 530, null), 
      new Field("padBottom", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, false, false, true, false, false, false, false, false, 533, 532, null), 
  };
  t.methods = new Method[] {
      new Method("load", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {patches___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, true, false, false, false, false, true, false, 534),
      new Method("add", com.badlogic.gdx.graphics.g2d.NinePatch.class, int.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, color__F, isStretchW__Z, isStretchH__Z, }, false, false, false, false, true, false, false, false, false, true, false, 535),
      new Method("set", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {idx__I, x__F, y__F, width__F, height__F, color__F, }, false, false, false, false, true, false, false, false, false, true, false, 536),
      new Method("draw", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 537),
      new Method("setColor", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 538),
      new Method("getColor", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 539),
      new Method("getLeftWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 540),
      new Method("setLeftWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {leftWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 541),
      new Method("getRightWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 542),
      new Method("setRightWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {rightWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 543),
      new Method("getTopHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 544),
      new Method("setTopHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {topHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 545),
      new Method("getBottomHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 546),
      new Method("setBottomHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {bottomHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 547),
      new Method("getMiddleWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 548),
      new Method("setMiddleWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {middleWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 549),
      new Method("getMiddleHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 550),
      new Method("setMiddleHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {middleHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 551),
      new Method("getTotalWidth", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 552),
      new Method("getTotalHeight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 553),
      new Method("setPadding", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {left__I, right__I, top__I, bottom__I, }, false, false, false, false, false, false, true, false, false, true, false, 554),
      new Method("getPadLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 555),
      new Method("setPadLeft", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {left__I, }, false, false, false, false, false, false, true, false, false, true, false, 556),
      new Method("getPadRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 557),
      new Method("setPadRight", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {right__I, }, false, false, false, false, false, false, true, false, false, true, false, 558),
      new Method("getPadTop", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 559),
      new Method("setPadTop", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {top__I, }, false, false, false, false, false, false, true, false, false, true, false, 560),
      new Method("getPadBottom", com.badlogic.gdx.graphics.g2d.NinePatch.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 561),
      new Method("setPadBottom", com.badlogic.gdx.graphics.g2d.NinePatch.class, void.class, new Parameter[] {bottom__I, }, false, false, false, false, false, false, true, false, false, true, false, 562),
      new Method("getTexture", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.Texture.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 563),
  };
  t.constructors = new Constructor[] {
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, left__I, right__I, top__I, bottom__I, }, false, false, false, false, false, false, true, false, false, false, true, 564),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, left__I, right__I, top__I, bottom__I, }, false, false, false, false, false, false, true, false, false, false, true, 565),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, false, true, 566),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, }, false, false, false, false, false, false, true, false, false, false, true, 567),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, false, true, 568),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, false, false, true, false, false, false, true, 569),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {patches___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, false, false, true, false, true, false, true, 570),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {ninePatch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_, }, false, false, false, false, false, false, true, false, false, false, true, 571),
      new Constructor("NinePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, new Parameter[] {ninePatch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_, color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, false, true, 572),
  };
  types.put("com.badlogic.gdx.graphics.g2d.NinePatch", t);
  }
  private void c29() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.TextureRegion", 573, com.badlogic.gdx.graphics.g2d.TextureRegion.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("texture", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.Texture.class, false, true, false, false, false, false, false, false, 575, 574, null), 
      new Field("u", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, false, true, false, false, false, false, false, false, 577, 576, null), 
      new Field("v", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, false, true, false, false, false, false, false, false, 579, 578, null), 
      new Field("u2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, false, true, false, false, false, false, false, false, 581, 580, null), 
      new Field("v2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, false, true, false, false, false, false, false, false, 583, 582, null), 
      new Field("regionWidth", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, false, true, false, false, false, false, false, false, 585, 584, null), 
      new Field("regionHeight", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, false, true, false, false, false, false, false, false, 587, 586, null), 
  };
  t.methods = new Method[] {
      new Method("setRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, }, false, false, false, false, false, false, true, false, false, true, false, 588),
      new Method("setRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {x__I, y__I, width__I, height__I, }, false, false, false, false, false, false, true, false, false, true, false, 589),
      new Method("setRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {u__F, v__F, u2__F, v2__F, }, false, false, false, false, false, false, true, false, false, true, false, 590),
      new Method("setRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, false, false, true, false, false, true, false, 591),
      new Method("setRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, x__I, y__I, width__I, height__I, }, false, false, false, false, false, false, true, false, false, true, false, 592),
      new Method("getTexture", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.Texture.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 593),
      new Method("setTexture", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, }, false, false, false, false, false, false, true, false, false, true, false, 594),
      new Method("getU", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 595),
      new Method("setU", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {u__F, }, false, false, false, false, false, false, true, false, false, true, false, 596),
      new Method("getV", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 597),
      new Method("setV", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {v__F, }, false, false, false, false, false, false, true, false, false, true, false, 598),
      new Method("getU2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 599),
      new Method("setU2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {u2__F, }, false, false, false, false, false, false, true, false, false, true, false, 600),
      new Method("getV2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 601),
      new Method("setV2", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {v2__F, }, false, false, false, false, false, false, true, false, false, true, false, 602),
      new Method("getRegionX", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 603),
      new Method("setRegionX", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {x__I, }, false, false, false, false, false, false, true, false, false, true, false, 604),
      new Method("getRegionY", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 605),
      new Method("setRegionY", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {y__I, }, false, false, false, false, false, false, true, false, false, true, false, 606),
      new Method("getRegionWidth", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 607),
      new Method("setRegionWidth", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {width__I, }, false, false, false, false, false, false, true, false, false, true, false, 608),
      new Method("getRegionHeight", com.badlogic.gdx.graphics.g2d.TextureRegion.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 609),
      new Method("setRegionHeight", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {height__I, }, false, false, false, false, false, false, true, false, false, true, false, 610),
      new Method("flip", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {x__Z, y__Z, }, false, false, false, false, false, false, true, false, false, true, false, 611),
      new Method("isFlipX", com.badlogic.gdx.graphics.g2d.TextureRegion.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 612),
      new Method("isFlipY", com.badlogic.gdx.graphics.g2d.TextureRegion.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 613),
      new Method("scroll", com.badlogic.gdx.graphics.g2d.TextureRegion.class, void.class, new Parameter[] {xAmount__F, yAmount__F, }, false, false, false, false, false, false, true, false, false, true, false, 614),
      new Method("split", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion[][].class, new Parameter[] {tileWidth__I, tileHeight__I, }, false, false, false, false, false, false, true, false, false, true, false, 615),
      new Method("split", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion[][].class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, tileWidth__I, tileHeight__I, }, false, false, true, false, false, false, true, false, false, true, false, 616),
  };
  t.constructors = new Constructor[] {
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 617),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, }, false, false, false, false, false, false, true, false, false, false, true, 618),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, width__I, height__I, }, false, false, false, false, false, false, true, false, false, false, true, 619),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, x__I, y__I, width__I, height__I, }, false, false, false, false, false, false, true, false, false, false, true, 620),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {texture__Lcom_badlogic_gdx_graphics_Texture_, u__F, v__F, u2__F, v2__F, }, false, false, false, false, false, false, true, false, false, false, true, 621),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, }, false, false, false, false, false, false, true, false, false, false, true, 622),
      new Constructor("TextureRegion", com.badlogic.gdx.graphics.g2d.TextureRegion.class, com.badlogic.gdx.graphics.g2d.TextureRegion.class, new Parameter[] {region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_, x__I, y__I, width__I, height__I, }, false, false, false, false, false, false, true, false, false, false, true, 623),
  };
  types.put("com.badlogic.gdx.graphics.g2d.TextureRegion", t);
  }
  private void c30() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.TextureRegion[]", 624, com.badlogic.gdx.graphics.g2d.TextureRegion[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g2d.TextureRegion[]", t);
  }
  private void c31() {
  Type t = new Type("com.badlogic.gdx.graphics.g2d.TextureRegion[][]", 625, com.badlogic.gdx.graphics.g2d.TextureRegion[][].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g2d.TextureRegion[][]", t);
  }
  private void c32() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.Animation", 626, com.badlogic.gdx.graphics.g3d.model.Animation.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.Animation.class, java.lang.String.class, false, false, false, false, true, false, false, false, 628, 627, null), 
      new Field("duration", com.badlogic.gdx.graphics.g3d.model.Animation.class, float.class, false, false, false, false, true, false, false, false, 630, 629, null), 
      new Field("nodeAnimations", com.badlogic.gdx.graphics.g3d.model.Animation.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 632, 631, new Class[] {com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, }), 
  };
  t.constructors = new Constructor[] {
      new Constructor("Animation", com.badlogic.gdx.graphics.g3d.model.Animation.class, com.badlogic.gdx.graphics.g3d.model.Animation.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 633),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.Animation", t);
  }
  private void c33() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.MeshPart", 634, com.badlogic.gdx.graphics.g3d.model.MeshPart.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, java.lang.String.class, false, false, false, false, true, false, false, false, 636, 635, null), 
      new Field("primitiveType", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, int.class, false, false, false, false, true, false, false, false, 638, 637, null), 
      new Field("indexOffset", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, int.class, false, false, false, false, true, false, false, false, 640, 639, null), 
      new Field("numVertices", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, int.class, false, false, false, false, true, false, false, false, 642, 641, null), 
      new Field("mesh", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, com.badlogic.gdx.graphics.Mesh.class, false, false, false, false, true, false, false, false, 644, 643, null), 
  };
  t.methods = new Method[] {
      new Method("equals", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, boolean.class, new Parameter[] {other__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_, }, false, false, false, false, false, false, true, false, false, true, false, 645),
      new Method("equals", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 646),
  };
  t.constructors = new Constructor[] {
      new Constructor("MeshPart", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, com.badlogic.gdx.graphics.g3d.model.MeshPart.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 647),
      new Constructor("MeshPart", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, com.badlogic.gdx.graphics.g3d.model.MeshPart.class, new Parameter[] {id__Ljava_lang_String_, mesh__Lcom_badlogic_gdx_graphics_Mesh_, offset__I, size__I, type__I, }, false, false, false, false, false, false, true, false, false, false, true, 648),
      new Constructor("MeshPart", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, com.badlogic.gdx.graphics.g3d.model.MeshPart.class, new Parameter[] {copyFrom__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_, }, false, false, false, false, false, false, true, false, false, false, true, 649),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.MeshPart", t);
  }
  private void c34() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.Node", 650, com.badlogic.gdx.graphics.g3d.model.Node.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.Node.class, java.lang.String.class, false, false, false, false, true, false, false, false, 652, 651, null), 
      new Field("parent", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.graphics.g3d.model.Node.class, false, false, false, false, true, false, false, false, 654, 653, null), 
      new Field("children", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 656, 655, new Class[] {com.badlogic.gdx.graphics.g3d.model.Node.class, }), 
      new Field("isAnimated", com.badlogic.gdx.graphics.g3d.model.Node.class, boolean.class, false, false, false, false, true, false, false, false, 658, 657, null), 
      new Field("translation", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 660, 659, null), 
      new Field("rotation", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Quaternion.class, true, false, false, false, true, false, false, false, 662, 661, null), 
      new Field("scale", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 664, 663, null), 
      new Field("localTransform", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Matrix4.class, true, false, false, false, true, false, false, false, 666, 665, null), 
      new Field("globalTransform", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Matrix4.class, true, false, false, false, true, false, false, false, 668, 667, null), 
      new Field("parts", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 670, 669, new Class[] {com.badlogic.gdx.graphics.g3d.model.NodePart.class, }), 
  };
  t.methods = new Method[] {
      new Method("calculateLocalTransform", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 671),
      new Method("calculateWorldTransform", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 672),
      new Method("calculateTransforms", com.badlogic.gdx.graphics.g3d.model.Node.class, void.class, new Parameter[] {recursive__Z, }, false, false, false, false, false, false, true, false, false, true, false, 673),
      new Method("calculateBoneTransforms", com.badlogic.gdx.graphics.g3d.model.Node.class, void.class, new Parameter[] {recursive__Z, }, false, false, false, false, false, false, true, false, false, true, false, 674),
      new Method("calculateBoundingBox", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {out__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 675),
      new Method("calculateBoundingBox", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {out__Lcom_badlogic_gdx_math_collision_BoundingBox_, transform__Z, }, false, false, false, false, false, false, true, false, false, true, false, 676),
      new Method("extendBoundingBox", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {out__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 677),
      new Method("extendBoundingBox", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {out__Lcom_badlogic_gdx_math_collision_BoundingBox_, transform__Z, }, false, false, false, false, false, false, true, false, false, true, false, 678),
      new Method("getChild", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.graphics.g3d.model.Node.class, new Parameter[] {id__Ljava_lang_String_, recursive__Z, ignoreCase__Z, }, false, false, false, false, false, false, true, false, false, true, false, 679),
      new Method("getNode", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.graphics.g3d.model.Node.class, new Parameter[] {nodes__Lcom_badlogic_gdx_utils_Array_, id__Ljava_lang_String_, recursive__Z, ignoreCase__Z, }, false, false, true, false, false, false, true, false, false, true, false, 680),
  };
  t.constructors = new Constructor[] {
      new Constructor("Node", com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.graphics.g3d.model.Node.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 681),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.Node", t);
  }
  private void c35() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.NodeAnimation", 682, com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("node", com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, com.badlogic.gdx.graphics.g3d.model.Node.class, false, false, false, false, true, false, false, false, 684, 683, null), 
      new Field("keyframes", com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 686, 685, new Class[] {com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, }), 
  };
  t.constructors = new Constructor[] {
      new Constructor("NodeAnimation", com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, com.badlogic.gdx.graphics.g3d.model.NodeAnimation.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 687),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.NodeAnimation", t);
  }
  private void c36() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.NodeKeyframe", 688, com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("keytime", com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, float.class, false, false, false, false, true, false, false, false, 690, 689, null), 
      new Field("translation", com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 692, 691, null), 
      new Field("scale", com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 694, 693, null), 
      new Field("rotation", com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, com.badlogic.gdx.math.Quaternion.class, true, false, false, false, true, false, false, false, 696, 695, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("NodeKeyframe", com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, com.badlogic.gdx.graphics.g3d.model.NodeKeyframe.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 697),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.NodeKeyframe", t);
  }
  private void c37() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.NodePart", 698, com.badlogic.gdx.graphics.g3d.model.NodePart.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("meshPart", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.graphics.g3d.model.MeshPart.class, false, false, false, false, true, false, false, false, 700, 699, null), 
      new Field("material", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.graphics.g3d.Material.class, false, false, false, false, true, false, false, false, 702, 701, null), 
      new Field("invBoneBindTransforms", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.utils.ArrayMap.class, false, false, false, false, true, false, false, false, 704, 703, new Class[] {com.badlogic.gdx.graphics.g3d.model.Node.class, com.badlogic.gdx.math.Matrix4.class, }), 
      new Field("bones", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.math.Matrix4[].class, false, false, false, false, true, false, false, false, 706, 705, null), 
  };
  t.methods = new Method[] {
      new Method("setRenderable", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.graphics.g3d.Renderable.class, new Parameter[] {out__Lcom_badlogic_gdx_graphics_g3d_Renderable_, }, false, false, false, false, false, false, true, false, false, true, false, 707),
  };
  t.constructors = new Constructor[] {
      new Constructor("NodePart", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.graphics.g3d.model.NodePart.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 708),
      new Constructor("NodePart", com.badlogic.gdx.graphics.g3d.model.NodePart.class, com.badlogic.gdx.graphics.g3d.model.NodePart.class, new Parameter[] {meshPart__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_, material__Lcom_badlogic_gdx_graphics_g3d_Material_, }, false, false, false, false, false, false, true, false, false, false, true, 709),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.NodePart", t);
  }
  private void c38() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation", 710, com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, java.lang.String.class, false, false, false, false, true, false, false, false, 712, 711, null), 
      new Field("nodeAnimations", com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 714, 713, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, }), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelAnimation", com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 715),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation", t);
  }
  private void c39() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelData", 716, com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, java.lang.String.class, false, false, false, false, true, false, false, false, 718, 717, null), 
      new Field("version", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, short[].class, true, false, false, false, true, false, false, false, 720, 719, null), 
      new Field("meshes", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 722, 721, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, }), 
      new Field("materials", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 724, 723, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, }), 
      new Field("nodes", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 726, 725, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, }), 
      new Field("animations", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 728, 727, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation.class, }), 
  };
  t.methods = new Method[] {
      new Method("addMesh", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, void.class, new Parameter[] {mesh__Lcom_badlogic_gdx_graphics_g3d_model_data_ModelMesh_, }, false, false, false, false, false, false, true, false, false, true, false, 729),
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelData", com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, com.badlogic.gdx.graphics.g3d.model.data.ModelData.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 730),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelData", t);
  }
  private void c40() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", 731, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, java.lang.String.class, false, false, false, false, true, false, false, false, 733, 732, null), 
      new Field("type", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, false, false, false, false, true, false, false, false, 735, 734, null), 
      new Field("ambient", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, false, false, false, 737, 736, null), 
      new Field("diffuse", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, false, false, false, 739, 738, null), 
      new Field("specular", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, false, false, false, 741, 740, null), 
      new Field("emissive", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, false, false, false, 743, 742, null), 
      new Field("reflection", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.Color.class, false, false, false, false, true, false, false, false, 745, 744, null), 
      new Field("shininess", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, float.class, false, false, false, false, true, false, false, false, 747, 746, null), 
      new Field("opacity", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, float.class, false, false, false, false, true, false, false, false, 749, 748, null), 
      new Field("textures", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 751, 750, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, }), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelMaterial", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 752),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", t);
  }
  private void c41() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType", 753, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("Lambert", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, true, false, false, false, true, true, false, false, 755, 754, null), 
      new Field("Phong", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, true, false, false, false, true, true, false, false, 757, 756, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 758),
      new Method("valueOf", com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 759),
  };
  t.enumConstants = new Object[2];
  t.enumConstants[0] = com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.Lambert;
  t.enumConstants[1] = com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType.Phong;
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType", t);
  }
  private void c42() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[]", 760, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[]", t);
  }
  private void c43() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", 761, com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, java.lang.String.class, false, false, false, false, true, false, false, false, 763, 762, null), 
      new Field("attributes", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, com.badlogic.gdx.graphics.VertexAttribute[].class, false, false, false, false, true, false, false, false, 765, 764, null), 
      new Field("vertices", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, float[].class, false, false, false, false, true, false, false, false, 767, 766, null), 
      new Field("parts", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[].class, false, false, false, false, true, false, false, false, 769, 768, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelMesh", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 770),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", t);
  }
  private void c44() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart", 771, com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, java.lang.String.class, false, false, false, false, true, false, false, false, 773, 772, null), 
      new Field("indices", com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, short[].class, false, false, false, false, true, false, false, false, 775, 774, null), 
      new Field("primitiveType", com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, int.class, false, false, false, false, true, false, false, false, 777, 776, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelMeshPart", com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 778),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart", t);
  }
  private void c45() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[]", 779, com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[]", t);
  }
  private void c46() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNode", 780, com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, java.lang.String.class, false, false, false, false, true, false, false, false, 782, 781, null), 
      new Field("boneId", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, int.class, false, false, false, false, true, false, false, false, 784, 783, null), 
      new Field("translation", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.math.Vector3.class, false, false, false, false, true, false, false, false, 786, 785, null), 
      new Field("rotation", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.math.Quaternion.class, false, false, false, false, true, false, false, false, 788, 787, null), 
      new Field("scale", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.math.Vector3.class, false, false, false, false, true, false, false, false, 790, 789, null), 
      new Field("meshId", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, java.lang.String.class, false, false, false, false, true, false, false, false, 792, 791, null), 
      new Field("parts", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[].class, false, false, false, false, true, false, false, false, 794, 793, null), 
      new Field("children", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNode[].class, false, false, false, false, true, false, false, false, 796, 795, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelNode", com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNode.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 797),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNode", t);
  }
  private void c47() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", 798, com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("nodeId", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, java.lang.String.class, false, false, false, false, true, false, false, false, 800, 799, null), 
      new Field("keyframes", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, com.badlogic.gdx.utils.Array.class, true, false, false, false, true, false, false, false, 802, 801, new Class[] {com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, }), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelNodeAnimation", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 803),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", t);
  }
  private void c48() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe", 804, com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("keytime", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, float.class, false, false, false, false, true, false, false, false, 806, 805, null), 
      new Field("translation", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, com.badlogic.gdx.math.Vector3.class, false, false, false, false, true, false, false, false, 808, 807, null), 
      new Field("scale", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, com.badlogic.gdx.math.Vector3.class, false, false, false, false, true, false, false, false, 810, 809, null), 
      new Field("rotation", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, com.badlogic.gdx.math.Quaternion.class, false, false, false, false, true, false, false, false, 812, 811, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelNodeKeyframe", com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 813),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe", t);
  }
  private void c49() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", 814, com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("materialId", com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, java.lang.String.class, false, false, false, false, true, false, false, false, 816, 815, null), 
      new Field("meshPartId", com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, java.lang.String.class, false, false, false, false, true, false, false, false, 818, 817, null), 
      new Field("bones", com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, com.badlogic.gdx.utils.ArrayMap.class, false, false, false, false, true, false, false, false, 820, 819, new Class[] {java.lang.String.class, com.badlogic.gdx.math.Matrix4.class, }), 
      new Field("uvMapping", com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, int[][].class, false, false, false, false, true, false, false, false, 822, 821, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelNodePart", com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 823),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", t);
  }
  private void c50() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[]", 824, com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[]", t);
  }
  private void c51() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelNode[]", 825, com.badlogic.gdx.graphics.g3d.model.data.ModelNode[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelNode[]", t);
  }
  private void c52() {
  Type t = new Type("com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", 826, com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("USAGE_UNKNOWN", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 828, 827, null), 
      new Field("USAGE_NONE", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 830, 829, null), 
      new Field("USAGE_DIFFUSE", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 832, 831, null), 
      new Field("USAGE_EMISSIVE", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 834, 833, null), 
      new Field("USAGE_AMBIENT", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 836, 835, null), 
      new Field("USAGE_SPECULAR", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 838, 837, null), 
      new Field("USAGE_SHININESS", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 840, 839, null), 
      new Field("USAGE_NORMAL", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 842, 841, null), 
      new Field("USAGE_BUMP", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 844, 843, null), 
      new Field("USAGE_TRANSPARENCY", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 846, 845, null), 
      new Field("USAGE_REFLECTION", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, true, false, false, false, true, true, false, false, 848, 847, null), 
      new Field("id", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, java.lang.String.class, false, false, false, false, true, false, false, false, 850, 849, null), 
      new Field("fileName", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, java.lang.String.class, false, false, false, false, true, false, false, false, 852, 851, null), 
      new Field("uvTranslation", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, com.badlogic.gdx.math.Vector2.class, false, false, false, false, true, false, false, false, 854, 853, null), 
      new Field("uvScaling", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, com.badlogic.gdx.math.Vector2.class, false, false, false, false, true, false, false, false, 856, 855, null), 
      new Field("usage", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, int.class, false, false, false, false, true, false, false, false, 858, 857, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("ModelTexture", com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, com.badlogic.gdx.graphics.g3d.model.data.ModelTexture.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 859),
  };
  types.put("com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", t);
  }
  private void c53() {
  Type t = new Type("com.badlogic.gdx.math.BSpline", 860, com.badlogic.gdx.math.BSpline.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Path.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("d6", com.badlogic.gdx.math.BSpline.class, float.class, true, false, true, false, false, true, false, false, 862, 861, null), 
      new Field("controlPoints", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector[].class, false, false, false, false, true, false, false, false, 864, 863, null), 
      new Field("knots", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 866, 865, null), 
      new Field("degree", com.badlogic.gdx.math.BSpline.class, int.class, false, false, false, false, true, false, false, false, 868, 867, null), 
      new Field("continuous", com.badlogic.gdx.math.BSpline.class, boolean.class, false, false, false, false, true, false, false, false, 870, 869, null), 
      new Field("spanCount", com.badlogic.gdx.math.BSpline.class, int.class, false, false, false, false, true, false, false, false, 872, 871, null), 
      new Field("tmp", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, false, false, true, false, false, false, false, false, 874, 873, null), 
  };
  t.methods = new Method[] {
      new Method("cubic", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__Z, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 875),
      new Method("cubic", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 876),
      new Method("cubic_derivative", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__Z, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 877),
      new Method("cubic_derivative", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 878),
      new Method("calculate", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__I, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 879),
      new Method("calculate", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__I, arg5__Z, arg6__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 880),
      new Method("derivative", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__I, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 881),
      new Method("derivative", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__I, arg5__Z, arg6__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 882),
      new Method("set", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.BSpline.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__Z, }, false, false, false, false, false, false, true, false, false, true, false, 883),
      new Method("valueAt", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 884),
      new Method("valueAt", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, }, false, false, false, false, false, false, true, false, false, true, false, 885),
      new Method("derivativeAt", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 886),
      new Method("derivativeAt", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, }, false, false, false, false, false, false, true, false, false, true, false, 887),
      new Method("nearest", com.badlogic.gdx.math.BSpline.class, int.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 888),
      new Method("nearest", com.badlogic.gdx.math.BSpline.class, int.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 889),
      new Method("approximate", com.badlogic.gdx.math.BSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 890),
      new Method("approximate", com.badlogic.gdx.math.BSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 891),
      new Method("approximate", com.badlogic.gdx.math.BSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, }, false, false, false, false, false, false, true, false, false, true, false, 892),
      new Method("locate", com.badlogic.gdx.math.BSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 893),
  };
  t.constructors = new Constructor[] {
      new Constructor("BSpline", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.BSpline.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 894),
      new Constructor("BSpline", com.badlogic.gdx.math.BSpline.class, com.badlogic.gdx.math.BSpline.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__Z, }, false, false, false, false, false, false, true, false, false, false, true, 895),
  };
  types.put("com.badlogic.gdx.math.BSpline", t);
  }
  private void c54() {
  Type t = new Type("com.badlogic.gdx.math.Bezier", 896, com.badlogic.gdx.math.Bezier.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Path.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("points", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.utils.Array.class, false, false, false, false, true, false, false, false, 898, 897, null), 
      new Field("tmp", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, false, false, true, false, false, false, false, false, 900, 899, null), 
  };
  t.methods = new Method[] {
      new Method("linear", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 901),
      new Method("linear_derivative", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 902),
      new Method("quadratic", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 903),
      new Method("quadratic_derivative", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 904),
      new Method("cubic", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, arg5__Lcom_badlogic_gdx_math_Vector_, arg6__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 905),
      new Method("cubic_derivative", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2__Lcom_badlogic_gdx_math_Vector_, arg3__Lcom_badlogic_gdx_math_Vector_, arg4__Lcom_badlogic_gdx_math_Vector_, arg5__Lcom_badlogic_gdx_math_Vector_, arg6__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 906),
      new Method("set", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, true, true, false, 907),
      new Method("set", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 908),
      new Method("set", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 909),
      new Method("valueAt", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 910),
      new Method("derivativeAt", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 911),
      new Method("approximate", com.badlogic.gdx.math.Bezier.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 912),
      new Method("locate", com.badlogic.gdx.math.Bezier.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 913),
  };
  t.constructors = new Constructor[] {
      new Constructor("Bezier", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 914),
      new Constructor("Bezier", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, true, false, true, 915),
      new Constructor("Bezier", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, false, true, 916),
      new Constructor("Bezier", com.badlogic.gdx.math.Bezier.class, com.badlogic.gdx.math.Bezier.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, false, true, 917),
  };
  types.put("com.badlogic.gdx.math.Bezier", t);
  }
  private void c55() {
  Type t = new Type("com.badlogic.gdx.math.Bresenham2", 918, com.badlogic.gdx.math.Bresenham2.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("points", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.utils.Array.class, true, false, true, false, false, false, false, false, 920, 919, new Class[] {com.badlogic.gdx.math.GridPoint2.class, }), 
      new Field("pool", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.utils.Pool.class, true, false, true, false, false, false, false, false, 922, 921, new Class[] {com.badlogic.gdx.math.GridPoint2.class, }), 
  };
  t.methods = new Method[] {
      new Method("line", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {start__Lcom_badlogic_gdx_math_GridPoint2_, end__Lcom_badlogic_gdx_math_GridPoint2_, }, false, false, false, false, false, false, true, false, false, true, false, 923),
      new Method("line", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {startX__I, startY__I, endX__I, endY__I, }, false, false, false, false, false, false, true, false, false, true, false, 924),
      new Method("line", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {startX__I, startY__I, endX__I, endY__I, pool__Lcom_badlogic_gdx_utils_Pool_, output__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, true, false, 925),
  };
  t.constructors = new Constructor[] {
      new Constructor("Bresenham2", com.badlogic.gdx.math.Bresenham2.class, com.badlogic.gdx.math.Bresenham2.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 926),
  };
  types.put("com.badlogic.gdx.math.Bresenham2", t);
  }
  private void c56() {
  Type t = new Type("com.badlogic.gdx.math.CatmullRomSpline", 927, com.badlogic.gdx.math.CatmullRomSpline.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Path.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("controlPoints", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector[].class, false, false, false, false, true, false, false, false, 929, 928, null), 
      new Field("continuous", com.badlogic.gdx.math.CatmullRomSpline.class, boolean.class, false, false, false, false, true, false, false, false, 931, 930, null), 
      new Field("spanCount", com.badlogic.gdx.math.CatmullRomSpline.class, int.class, false, false, false, false, true, false, false, false, 933, 932, null), 
      new Field("tmp", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, false, false, true, false, false, false, false, false, 935, 934, null), 
      new Field("tmp2", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, false, false, true, false, false, false, false, false, 937, 936, null), 
  };
  t.methods = new Method[] {
      new Method("calculate", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__Z, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 938),
      new Method("calculate", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 939),
      new Method("derivative", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, arg2___Lcom_badlogic_gdx_math_Vector_, arg3__Z, arg4__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 940),
      new Method("derivative", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, arg3___Lcom_badlogic_gdx_math_Vector_, arg4__Z, arg5__Lcom_badlogic_gdx_math_Vector_, }, false, false, true, false, false, false, true, false, false, true, false, 941),
      new Method("set", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.CatmullRomSpline.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 942),
      new Method("valueAt", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 943),
      new Method("valueAt", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, }, false, false, false, false, false, false, true, false, false, true, false, 944),
      new Method("derivativeAt", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__F, }, false, false, false, false, false, false, true, false, false, true, false, 945),
      new Method("derivativeAt", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.Vector.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__F, }, false, false, false, false, false, false, true, false, false, true, false, 946),
      new Method("nearest", com.badlogic.gdx.math.CatmullRomSpline.class, int.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 947),
      new Method("nearest", com.badlogic.gdx.math.CatmullRomSpline.class, int.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 948),
      new Method("approximate", com.badlogic.gdx.math.CatmullRomSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 949),
      new Method("approximate", com.badlogic.gdx.math.CatmullRomSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 950),
      new Method("approximate", com.badlogic.gdx.math.CatmullRomSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, arg1__I, }, false, false, false, false, false, false, true, false, false, true, false, 951),
      new Method("locate", com.badlogic.gdx.math.CatmullRomSpline.class, float.class, new Parameter[] {arg0__Lcom_badlogic_gdx_math_Vector_, }, false, false, false, false, false, false, true, false, false, true, false, 952),
  };
  t.constructors = new Constructor[] {
      new Constructor("CatmullRomSpline", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.CatmullRomSpline.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 953),
      new Constructor("CatmullRomSpline", com.badlogic.gdx.math.CatmullRomSpline.class, com.badlogic.gdx.math.CatmullRomSpline.class, new Parameter[] {arg0___Lcom_badlogic_gdx_math_Vector_, arg1__Z, }, false, false, false, false, false, false, true, false, false, false, true, 954),
  };
  types.put("com.badlogic.gdx.math.CatmullRomSpline", t);
  }
  private void c57() {
  Type t = new Type("com.badlogic.gdx.math.Circle", 955, com.badlogic.gdx.math.Circle.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("x", com.badlogic.gdx.math.Circle.class, float.class, false, false, false, false, true, false, false, false, 957, 956, null), 
      new Field("y", com.badlogic.gdx.math.Circle.class, float.class, false, false, false, false, true, false, false, false, 959, 958, null), 
      new Field("radius", com.badlogic.gdx.math.Circle.class, float.class, false, false, false, false, true, false, false, false, 961, 960, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {x__F, y__F, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 962),
      new Method("set", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 963),
      new Method("set", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {circle__Lcom_badlogic_gdx_math_Circle_, }, false, false, false, false, false, false, true, false, false, true, false, 964),
      new Method("setPosition", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 965),
      new Method("setPosition", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 966),
      new Method("setX", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 967),
      new Method("setY", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 968),
      new Method("setRadius", com.badlogic.gdx.math.Circle.class, void.class, new Parameter[] {radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 969),
      new Method("contains", com.badlogic.gdx.math.Circle.class, boolean.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 970),
      new Method("contains", com.badlogic.gdx.math.Circle.class, boolean.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 971),
      new Method("contains", com.badlogic.gdx.math.Circle.class, boolean.class, new Parameter[] {c__Lcom_badlogic_gdx_math_Circle_, }, false, false, false, false, false, false, true, false, false, true, false, 972),
      new Method("overlaps", com.badlogic.gdx.math.Circle.class, boolean.class, new Parameter[] {c__Lcom_badlogic_gdx_math_Circle_, }, false, false, false, false, false, false, true, false, false, true, false, 973),
      new Method("toString", com.badlogic.gdx.math.Circle.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 974),
  };
  t.constructors = new Constructor[] {
      new Constructor("Circle", com.badlogic.gdx.math.Circle.class, com.badlogic.gdx.math.Circle.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 975),
      new Constructor("Circle", com.badlogic.gdx.math.Circle.class, com.badlogic.gdx.math.Circle.class, new Parameter[] {x__F, y__F, radius__F, }, false, false, false, false, false, false, true, false, false, false, true, 976),
      new Constructor("Circle", com.badlogic.gdx.math.Circle.class, com.badlogic.gdx.math.Circle.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, radius__F, }, false, false, false, false, false, false, true, false, false, false, true, 977),
      new Constructor("Circle", com.badlogic.gdx.math.Circle.class, com.badlogic.gdx.math.Circle.class, new Parameter[] {circle__Lcom_badlogic_gdx_math_Circle_, }, false, false, false, false, false, false, true, false, false, false, true, 978),
  };
  types.put("com.badlogic.gdx.math.Circle", t);
  }
  private void c58() {
  Type t = new Type("com.badlogic.gdx.math.ConvexHull", 979, com.badlogic.gdx.math.ConvexHull.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("quicksortStack", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.IntArray.class, true, false, true, false, false, false, false, false, 981, 980, null), 
      new Field("sortedPoints", com.badlogic.gdx.math.ConvexHull.class, float[].class, false, false, true, false, false, false, false, false, 983, 982, null), 
      new Field("hull", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.FloatArray.class, true, false, true, false, false, false, false, false, 985, 984, null), 
      new Field("indices", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.IntArray.class, true, false, true, false, false, false, false, false, 987, 986, null), 
      new Field("originalIndices", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.ShortArray.class, true, false, true, false, false, false, false, false, 989, 988, null), 
  };
  t.methods = new Method[] {
      new Method("computePolygon", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.FloatArray.class, new Parameter[] {points__Lcom_badlogic_gdx_utils_FloatArray_, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 990),
      new Method("computePolygon", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.FloatArray.class, new Parameter[] {polygon___F, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 991),
      new Method("computePolygon", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.FloatArray.class, new Parameter[] {points___F, offset__I, count__I, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 992),
      new Method("computeIndices", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.IntArray.class, new Parameter[] {points__Lcom_badlogic_gdx_utils_FloatArray_, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 993),
      new Method("computeIndices", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.IntArray.class, new Parameter[] {polygon___F, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 994),
      new Method("computeIndices", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.utils.IntArray.class, new Parameter[] {points___F, offset__I, count__I, sorted__Z, yDown__Z, }, false, false, false, false, false, false, true, false, false, true, false, 995),
      new Method("ccw", com.badlogic.gdx.math.ConvexHull.class, float.class, new Parameter[] {p3x__F, p3y__F, }, false, false, false, false, true, false, false, false, false, true, false, 996),
      new Method("sort", com.badlogic.gdx.math.ConvexHull.class, void.class, new Parameter[] {values___F, count__I, yDown__Z, }, false, false, false, false, true, false, false, false, false, true, false, 997),
      new Method("quicksortPartition", com.badlogic.gdx.math.ConvexHull.class, int.class, new Parameter[] {values___F, lower__I, upper__I, yDown__Z, }, false, false, false, false, true, false, false, false, false, true, false, 998),
      new Method("sortWithIndices", com.badlogic.gdx.math.ConvexHull.class, void.class, new Parameter[] {values___F, count__I, yDown__Z, }, false, false, false, false, true, false, false, false, false, true, false, 999),
      new Method("quicksortPartitionWithIndices", com.badlogic.gdx.math.ConvexHull.class, int.class, new Parameter[] {values___F, lower__I, upper__I, yDown__Z, originalIndices___S, }, false, false, false, false, true, false, false, false, false, true, false, 1000),
  };
  t.constructors = new Constructor[] {
      new Constructor("ConvexHull", com.badlogic.gdx.math.ConvexHull.class, com.badlogic.gdx.math.ConvexHull.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1001),
  };
  types.put("com.badlogic.gdx.math.ConvexHull", t);
  }
  private void c59() {
  Type t = new Type("com.badlogic.gdx.math.DelaunayTriangulator", 1002, com.badlogic.gdx.math.DelaunayTriangulator.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("EPSILON", com.badlogic.gdx.math.DelaunayTriangulator.class, float.class, true, false, true, false, false, true, false, false, 1004, 1003, null), 
      new Field("INSIDE", com.badlogic.gdx.math.DelaunayTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1006, 1005, null), 
      new Field("COMPLETE", com.badlogic.gdx.math.DelaunayTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1008, 1007, null), 
      new Field("INCOMPLETE", com.badlogic.gdx.math.DelaunayTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1010, 1009, null), 
      new Field("quicksortStack", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.IntArray.class, true, false, true, false, false, false, false, false, 1012, 1011, null), 
      new Field("sortedPoints", com.badlogic.gdx.math.DelaunayTriangulator.class, float[].class, false, false, true, false, false, false, false, false, 1014, 1013, null), 
      new Field("triangles", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, true, false, true, false, false, false, false, false, 1016, 1015, null), 
      new Field("originalIndices", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, true, false, true, false, false, false, false, false, 1018, 1017, null), 
      new Field("edges", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.IntArray.class, true, false, true, false, false, false, false, false, 1020, 1019, null), 
      new Field("complete", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.BooleanArray.class, true, false, true, false, false, false, false, false, 1022, 1021, null), 
      new Field("superTriangle", com.badlogic.gdx.math.DelaunayTriangulator.class, float[].class, true, false, true, false, false, false, false, false, 1024, 1023, null), 
      new Field("centroid", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, false, false, false, 1026, 1025, null), 
  };
  t.methods = new Method[] {
      new Method("computeTriangles", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {points__Lcom_badlogic_gdx_utils_FloatArray_, sorted__Z, }, false, false, false, false, false, false, true, false, false, true, false, 1027),
      new Method("computeTriangles", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {polygon___F, sorted__Z, }, false, false, false, false, false, false, true, false, false, true, false, 1028),
      new Method("computeTriangles", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {points___F, offset__I, count__I, sorted__Z, }, false, false, false, false, false, false, true, false, false, true, false, 1029),
      new Method("circumCircle", com.badlogic.gdx.math.DelaunayTriangulator.class, int.class, new Parameter[] {xp__F, yp__F, x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, }, false, false, false, false, true, false, false, false, false, true, false, 1030),
      new Method("sort", com.badlogic.gdx.math.DelaunayTriangulator.class, void.class, new Parameter[] {values___F, count__I, }, false, false, false, false, true, false, false, false, false, true, false, 1031),
      new Method("quicksortPartition", com.badlogic.gdx.math.DelaunayTriangulator.class, int.class, new Parameter[] {values___F, lower__I, upper__I, originalIndices___S, }, false, false, false, false, true, false, false, false, false, true, false, 1032),
      new Method("trim", com.badlogic.gdx.math.DelaunayTriangulator.class, void.class, new Parameter[] {triangles__Lcom_badlogic_gdx_utils_ShortArray_, points___F, hull___F, offset__I, count__I, }, false, false, false, false, false, false, true, false, false, true, false, 1033),
  };
  t.constructors = new Constructor[] {
      new Constructor("DelaunayTriangulator", com.badlogic.gdx.math.DelaunayTriangulator.class, com.badlogic.gdx.math.DelaunayTriangulator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1034),
  };
  types.put("com.badlogic.gdx.math.DelaunayTriangulator", t);
  }
  private void c60() {
  Type t = new Type("com.badlogic.gdx.math.EarClippingTriangulator", 1035, com.badlogic.gdx.math.EarClippingTriangulator.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("CONCAVE", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1037, 1036, null), 
      new Field("TANGENTIAL", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1039, 1038, null), 
      new Field("CONVEX", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, true, false, true, false, false, true, false, false, 1041, 1040, null), 
      new Field("indicesArray", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, true, false, true, false, false, false, false, false, 1043, 1042, null), 
      new Field("indices", com.badlogic.gdx.math.EarClippingTriangulator.class, short[].class, false, false, true, false, false, false, false, false, 1045, 1044, null), 
      new Field("vertices", com.badlogic.gdx.math.EarClippingTriangulator.class, float[].class, false, false, true, false, false, false, false, false, 1047, 1046, null), 
      new Field("vertexCount", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, false, false, true, false, false, false, false, false, 1049, 1048, null), 
      new Field("vertexTypes", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.IntArray.class, true, false, true, false, false, false, false, false, 1051, 1050, null), 
      new Field("triangles", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, true, false, true, false, false, false, false, false, 1053, 1052, null), 
  };
  t.methods = new Method[] {
      new Method("computeTriangles", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {vertices__Lcom_badlogic_gdx_utils_FloatArray_, }, false, false, false, false, false, false, true, false, false, true, false, 1054),
      new Method("computeTriangles", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {vertices___F, }, false, false, false, false, false, false, true, false, false, true, false, 1055),
      new Method("computeTriangles", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.utils.ShortArray.class, new Parameter[] {vertices___F, offset__I, count__I, }, false, false, false, false, false, false, true, false, false, true, false, 1056),
      new Method("triangulate", com.badlogic.gdx.math.EarClippingTriangulator.class, void.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 1057),
      new Method("classifyVertex", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, new Parameter[] {index__I, }, false, false, false, false, true, false, false, false, false, true, false, 1058),
      new Method("findEarTip", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 1059),
      new Method("isEarTip", com.badlogic.gdx.math.EarClippingTriangulator.class, boolean.class, new Parameter[] {earTipIndex__I, }, false, false, false, false, true, false, false, false, false, true, false, 1060),
      new Method("cutEarTip", com.badlogic.gdx.math.EarClippingTriangulator.class, void.class, new Parameter[] {earTipIndex__I, }, false, false, false, false, true, false, false, false, false, true, false, 1061),
      new Method("previousIndex", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, new Parameter[] {index__I, }, false, false, false, false, true, false, false, false, false, true, false, 1062),
      new Method("nextIndex", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, new Parameter[] {index__I, }, false, false, false, false, true, false, false, false, false, true, false, 1063),
      new Method("areVerticesClockwise", com.badlogic.gdx.math.EarClippingTriangulator.class, boolean.class, new Parameter[] {vertices___F, offset__I, count__I, }, false, false, true, false, true, false, false, false, false, true, false, 1064),
      new Method("computeSpannedAreaSign", com.badlogic.gdx.math.EarClippingTriangulator.class, int.class, new Parameter[] {p1x__F, p1y__F, p2x__F, p2y__F, p3x__F, p3y__F, }, false, false, true, false, true, false, false, false, false, true, false, 1065),
  };
  t.constructors = new Constructor[] {
      new Constructor("EarClippingTriangulator", com.badlogic.gdx.math.EarClippingTriangulator.class, com.badlogic.gdx.math.EarClippingTriangulator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1066),
  };
  types.put("com.badlogic.gdx.math.EarClippingTriangulator", t);
  }
  private void c61() {
  Type t = new Type("com.badlogic.gdx.math.Ellipse", 1067, com.badlogic.gdx.math.Ellipse.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("x", com.badlogic.gdx.math.Ellipse.class, float.class, false, false, false, false, true, false, false, false, 1069, 1068, null), 
      new Field("y", com.badlogic.gdx.math.Ellipse.class, float.class, false, false, false, false, true, false, false, false, 1071, 1070, null), 
      new Field("width", com.badlogic.gdx.math.Ellipse.class, float.class, false, false, false, false, true, false, false, false, 1073, 1072, null), 
      new Field("height", com.badlogic.gdx.math.Ellipse.class, float.class, false, false, false, false, true, false, false, false, 1075, 1074, null), 
      new Field("serialVersionUID", com.badlogic.gdx.math.Ellipse.class, long.class, true, false, true, false, false, true, false, false, 1077, 1076, null), 
  };
  t.methods = new Method[] {
      new Method("contains", com.badlogic.gdx.math.Ellipse.class, boolean.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1078),
      new Method("contains", com.badlogic.gdx.math.Ellipse.class, boolean.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1079),
      new Method("set", com.badlogic.gdx.math.Ellipse.class, void.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1080),
      new Method("set", com.badlogic.gdx.math.Ellipse.class, void.class, new Parameter[] {ellipse__Lcom_badlogic_gdx_math_Ellipse_, }, false, false, false, false, false, false, true, false, false, true, false, 1081),
      new Method("setPosition", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1082),
      new Method("setPosition", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1083),
      new Method("setSize", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1084),
  };
  t.constructors = new Constructor[] {
      new Constructor("Ellipse", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1085),
      new Constructor("Ellipse", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {ellipse__Lcom_badlogic_gdx_math_Ellipse_, }, false, false, false, false, false, false, true, false, false, false, true, 1086),
      new Constructor("Ellipse", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, false, true, 1087),
      new Constructor("Ellipse", com.badlogic.gdx.math.Ellipse.class, com.badlogic.gdx.math.Ellipse.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, width__F, height__F, }, false, false, false, false, false, false, true, false, false, false, true, 1088),
  };
  types.put("com.badlogic.gdx.math.Ellipse", t);
  }
  private void c62() {
  Type t = new Type("com.badlogic.gdx.math.FloatCounter", 1089, com.badlogic.gdx.math.FloatCounter.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("count", com.badlogic.gdx.math.FloatCounter.class, int.class, false, false, false, false, true, false, false, false, 1091, 1090, null), 
      new Field("total", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1093, 1092, null), 
      new Field("min", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1095, 1094, null), 
      new Field("max", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1097, 1096, null), 
      new Field("average", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1099, 1098, null), 
      new Field("latest", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1101, 1100, null), 
      new Field("value", com.badlogic.gdx.math.FloatCounter.class, float.class, false, false, false, false, true, false, false, false, 1103, 1102, null), 
      new Field("mean", com.badlogic.gdx.math.FloatCounter.class, com.badlogic.gdx.math.WindowedMean.class, true, false, false, false, true, false, false, false, 1105, 1104, null), 
  };
  t.methods = new Method[] {
      new Method("put", com.badlogic.gdx.math.FloatCounter.class, void.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 1106),
      new Method("reset", com.badlogic.gdx.math.FloatCounter.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1107),
  };
  t.constructors = new Constructor[] {
      new Constructor("FloatCounter", com.badlogic.gdx.math.FloatCounter.class, com.badlogic.gdx.math.FloatCounter.class, new Parameter[] {windowSize__I, }, false, false, false, false, false, false, true, false, false, false, true, 1108),
  };
  types.put("com.badlogic.gdx.math.FloatCounter", t);
  }
  private void c63() {
  Type t = new Type("com.badlogic.gdx.math.Frustum", 1109, com.badlogic.gdx.math.Frustum.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("clipSpacePlanePoints", com.badlogic.gdx.math.Frustum.class, com.badlogic.gdx.math.Vector3[].class, true, false, false, true, false, true, false, false, 1111, 1110, null), 
      new Field("clipSpacePlanePointsArray", com.badlogic.gdx.math.Frustum.class, float[].class, true, false, false, true, false, true, false, false, 1113, 1112, null), 
      new Field("planes", com.badlogic.gdx.math.Frustum.class, com.badlogic.gdx.math.Plane[].class, true, false, false, false, true, false, false, false, 1115, 1114, null), 
      new Field("planePoints", com.badlogic.gdx.math.Frustum.class, com.badlogic.gdx.math.Vector3[].class, true, false, false, false, true, false, false, false, 1117, 1116, null), 
      new Field("planePointsArray", com.badlogic.gdx.math.Frustum.class, float[].class, true, false, false, true, false, false, false, false, 1119, 1118, null), 
  };
  t.methods = new Method[] {
      new Method("update", com.badlogic.gdx.math.Frustum.class, void.class, new Parameter[] {inverseProjectionView__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1120),
      new Method("pointInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1121),
      new Method("pointInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1122),
      new Method("sphereInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {center__Lcom_badlogic_gdx_math_Vector3_, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 1123),
      new Method("sphereInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {x__F, y__F, z__F, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 1124),
      new Method("sphereInFrustumWithoutNearFar", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {center__Lcom_badlogic_gdx_math_Vector3_, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 1125),
      new Method("sphereInFrustumWithoutNearFar", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {x__F, y__F, z__F, radius__F, }, false, false, false, false, false, false, true, false, false, true, false, 1126),
      new Method("boundsInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 1127),
      new Method("boundsInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {center__Lcom_badlogic_gdx_math_Vector3_, dimensions__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1128),
      new Method("boundsInFrustum", com.badlogic.gdx.math.Frustum.class, boolean.class, new Parameter[] {x__F, y__F, z__F, halfWidth__F, halfHeight__F, halfDepth__F, }, false, false, false, false, false, false, true, false, false, true, false, 1129),
  };
  t.constructors = new Constructor[] {
      new Constructor("Frustum", com.badlogic.gdx.math.Frustum.class, com.badlogic.gdx.math.Frustum.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1130),
  };
  types.put("com.badlogic.gdx.math.Frustum", t);
  }
  private void c64() {
  Type t = new Type("com.badlogic.gdx.math.GeometryUtils", 1131, com.badlogic.gdx.math.GeometryUtils.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tmp1", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, true, false, false, 1133, 1132, null), 
      new Field("tmp2", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, true, false, false, 1135, 1134, null), 
      new Field("tmp3", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, true, false, false, 1137, 1136, null), 
  };
  t.methods = new Method[] {
      new Method("toBarycoord", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {p__Lcom_badlogic_gdx_math_Vector2_, a__Lcom_badlogic_gdx_math_Vector2_, b__Lcom_badlogic_gdx_math_Vector2_, c__Lcom_badlogic_gdx_math_Vector2_, barycentricOut__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1138),
      new Method("barycoordInsideTriangle", com.badlogic.gdx.math.GeometryUtils.class, boolean.class, new Parameter[] {barycentric__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1139),
      new Method("fromBarycoord", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {barycentric__Lcom_badlogic_gdx_math_Vector2_, a__Lcom_badlogic_gdx_math_Vector2_, b__Lcom_badlogic_gdx_math_Vector2_, c__Lcom_badlogic_gdx_math_Vector2_, interpolatedOut__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1140),
      new Method("fromBarycoord", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {barycentric__Lcom_badlogic_gdx_math_Vector2_, a__F, b__F, c__F, interpolatedOut__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1141),
      new Method("lowestPositiveRoot", com.badlogic.gdx.math.GeometryUtils.class, float.class, new Parameter[] {a__F, b__F, c__F, }, false, false, true, false, false, false, true, false, false, true, false, 1142),
      new Method("triangleCentroid", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, centroid__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1143),
      new Method("triangleArea", com.badlogic.gdx.math.GeometryUtils.class, float.class, new Parameter[] {x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, }, false, false, true, false, false, false, true, false, false, true, false, 1144),
      new Method("quadrilateralCentroid", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, x4__F, y4__F, centroid__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1145),
      new Method("polygonCentroid", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {polygon___F, offset__I, count__I, centroid__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1146),
      new Method("polygonArea", com.badlogic.gdx.math.GeometryUtils.class, float.class, new Parameter[] {polygon___F, offset__I, count__I, }, false, false, true, false, false, false, true, false, false, true, false, 1147),
  };
  t.constructors = new Constructor[] {
      new Constructor("GeometryUtils", com.badlogic.gdx.math.GeometryUtils.class, com.badlogic.gdx.math.GeometryUtils.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1148),
  };
  types.put("com.badlogic.gdx.math.GeometryUtils", t);
  }
  private void c65() {
  Type t = new Type("com.badlogic.gdx.math.GridPoint2", 1149, com.badlogic.gdx.math.GridPoint2.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("x", com.badlogic.gdx.math.GridPoint2.class, int.class, false, false, false, false, true, false, false, false, 1151, 1150, null), 
      new Field("y", com.badlogic.gdx.math.GridPoint2.class, int.class, false, false, false, false, true, false, false, false, 1153, 1152, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.GridPoint2.class, com.badlogic.gdx.math.GridPoint2.class, new Parameter[] {point__Lcom_badlogic_gdx_math_GridPoint2_, }, false, false, false, false, false, false, true, false, false, true, false, 1154),
      new Method("set", com.badlogic.gdx.math.GridPoint2.class, com.badlogic.gdx.math.GridPoint2.class, new Parameter[] {x__I, y__I, }, false, false, false, false, false, false, true, false, false, true, false, 1155),
  };
  t.constructors = new Constructor[] {
      new Constructor("GridPoint2", com.badlogic.gdx.math.GridPoint2.class, com.badlogic.gdx.math.GridPoint2.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1156),
      new Constructor("GridPoint2", com.badlogic.gdx.math.GridPoint2.class, com.badlogic.gdx.math.GridPoint2.class, new Parameter[] {x__I, y__I, }, false, false, false, false, false, false, true, false, false, false, true, 1157),
      new Constructor("GridPoint2", com.badlogic.gdx.math.GridPoint2.class, com.badlogic.gdx.math.GridPoint2.class, new Parameter[] {point__Lcom_badlogic_gdx_math_GridPoint2_, }, false, false, false, false, false, false, true, false, false, false, true, 1158),
  };
  types.put("com.badlogic.gdx.math.GridPoint2", t);
  }
  private void c66() {
  Type t = new Type("com.badlogic.gdx.math.GridPoint3", 1159, com.badlogic.gdx.math.GridPoint3.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("x", com.badlogic.gdx.math.GridPoint3.class, int.class, false, false, false, false, true, false, false, false, 1161, 1160, null), 
      new Field("y", com.badlogic.gdx.math.GridPoint3.class, int.class, false, false, false, false, true, false, false, false, 1163, 1162, null), 
      new Field("z", com.badlogic.gdx.math.GridPoint3.class, int.class, false, false, false, false, true, false, false, false, 1165, 1164, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.GridPoint3.class, com.badlogic.gdx.math.GridPoint3.class, new Parameter[] {point__Lcom_badlogic_gdx_math_GridPoint3_, }, false, false, false, false, false, false, true, false, false, true, false, 1166),
      new Method("set", com.badlogic.gdx.math.GridPoint3.class, com.badlogic.gdx.math.GridPoint3.class, new Parameter[] {x__I, y__I, z__I, }, false, false, false, false, false, false, true, false, false, true, false, 1167),
  };
  t.constructors = new Constructor[] {
      new Constructor("GridPoint3", com.badlogic.gdx.math.GridPoint3.class, com.badlogic.gdx.math.GridPoint3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1168),
      new Constructor("GridPoint3", com.badlogic.gdx.math.GridPoint3.class, com.badlogic.gdx.math.GridPoint3.class, new Parameter[] {x__I, y__I, z__I, }, false, false, false, false, false, false, true, false, false, false, true, 1169),
      new Constructor("GridPoint3", com.badlogic.gdx.math.GridPoint3.class, com.badlogic.gdx.math.GridPoint3.class, new Parameter[] {point__Lcom_badlogic_gdx_math_GridPoint3_, }, false, false, false, false, false, false, true, false, false, false, true, 1170),
  };
  types.put("com.badlogic.gdx.math.GridPoint3", t);
  }
  private void c67() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation", 1171, com.badlogic.gdx.math.Interpolation.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("linear", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1173, 1172, null), 
      new Field("fade", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1175, 1174, null), 
      new Field("pow2", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Pow.class, true, false, false, false, true, true, false, false, 1177, 1176, null), 
      new Field("pow2In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowIn.class, true, false, false, false, true, true, false, false, 1179, 1178, null), 
      new Field("pow2Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowOut.class, true, false, false, false, true, true, false, false, 1181, 1180, null), 
      new Field("pow3", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Pow.class, true, false, false, false, true, true, false, false, 1183, 1182, null), 
      new Field("pow3In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowIn.class, true, false, false, false, true, true, false, false, 1185, 1184, null), 
      new Field("pow3Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowOut.class, true, false, false, false, true, true, false, false, 1187, 1186, null), 
      new Field("pow4", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Pow.class, true, false, false, false, true, true, false, false, 1189, 1188, null), 
      new Field("pow4In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowIn.class, true, false, false, false, true, true, false, false, 1191, 1190, null), 
      new Field("pow4Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowOut.class, true, false, false, false, true, true, false, false, 1193, 1192, null), 
      new Field("pow5", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Pow.class, true, false, false, false, true, true, false, false, 1195, 1194, null), 
      new Field("pow5In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowIn.class, true, false, false, false, true, true, false, false, 1197, 1196, null), 
      new Field("pow5Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.PowOut.class, true, false, false, false, true, true, false, false, 1199, 1198, null), 
      new Field("sine", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1201, 1200, null), 
      new Field("sineIn", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1203, 1202, null), 
      new Field("sineOut", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1205, 1204, null), 
      new Field("exp10", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1207, 1206, null), 
      new Field("exp10In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1209, 1208, null), 
      new Field("exp10Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1211, 1210, null), 
      new Field("exp5", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1213, 1212, null), 
      new Field("exp5In", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1215, 1214, null), 
      new Field("exp5Out", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1217, 1216, null), 
      new Field("circle", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1219, 1218, null), 
      new Field("circleIn", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1221, 1220, null), 
      new Field("circleOut", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1223, 1222, null), 
      new Field("elastic", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Elastic.class, true, false, false, false, true, true, false, false, 1225, 1224, null), 
      new Field("elasticIn", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Elastic.class, true, false, false, false, true, true, false, false, 1227, 1226, null), 
      new Field("elasticOut", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.Elastic.class, true, false, false, false, true, true, false, false, 1229, 1228, null), 
      new Field("swing", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1231, 1230, null), 
      new Field("swingIn", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1233, 1232, null), 
      new Field("swingOut", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1235, 1234, null), 
      new Field("bounce", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1237, 1236, null), 
      new Field("bounceIn", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1239, 1238, null), 
      new Field("bounceOut", com.badlogic.gdx.math.Interpolation.class, com.badlogic.gdx.math.Interpolation.class, true, false, false, false, true, true, false, false, 1241, 1240, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.class, float.class, new Parameter[] {a__F, }, true, false, false, false, false, false, true, true, false, true, false, 1242),
      new Method("apply", com.badlogic.gdx.math.Interpolation.class, float.class, new Parameter[] {start__F, end__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1243),
  };
  types.put("com.badlogic.gdx.math.Interpolation", t);
  }
  private void c68() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.Bounce", 1244, com.badlogic.gdx.math.Interpolation.Bounce.class, com.badlogic.gdx.math.Interpolation.BounceOut.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.BounceOut.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("out", com.badlogic.gdx.math.Interpolation.Bounce.class, float.class, new Parameter[] {a__F, }, false, false, false, false, true, false, false, false, false, true, false, 1245),
      new Method("apply", com.badlogic.gdx.math.Interpolation.Bounce.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1246),
  };
  t.constructors = new Constructor[] {
      new Constructor("Bounce", com.badlogic.gdx.math.Interpolation.Bounce.class, com.badlogic.gdx.math.Interpolation.Bounce.class, new Parameter[] {widths___F, heights___F, }, false, false, false, false, false, false, true, false, false, false, true, 1247),
      new Constructor("Bounce", com.badlogic.gdx.math.Interpolation.Bounce.class, com.badlogic.gdx.math.Interpolation.Bounce.class, new Parameter[] {bounces__I, }, false, false, false, false, false, false, true, false, false, false, true, 1248),
  };
  types.put("com.badlogic.gdx.math.Interpolation.Bounce", t);
  }
  private void c69() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.BounceIn", 1249, com.badlogic.gdx.math.Interpolation.BounceIn.class, com.badlogic.gdx.math.Interpolation.BounceOut.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.BounceOut.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.BounceIn.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1250),
  };
  t.constructors = new Constructor[] {
      new Constructor("BounceIn", com.badlogic.gdx.math.Interpolation.BounceIn.class, com.badlogic.gdx.math.Interpolation.BounceIn.class, new Parameter[] {widths___F, heights___F, }, false, false, false, false, false, false, true, false, false, false, true, 1251),
      new Constructor("BounceIn", com.badlogic.gdx.math.Interpolation.BounceIn.class, com.badlogic.gdx.math.Interpolation.BounceIn.class, new Parameter[] {bounces__I, }, false, false, false, false, false, false, true, false, false, false, true, 1252),
  };
  types.put("com.badlogic.gdx.math.Interpolation.BounceIn", t);
  }
  private void c70() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.BounceOut", 1253, com.badlogic.gdx.math.Interpolation.BounceOut.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("widths", com.badlogic.gdx.math.Interpolation.BounceOut.class, float[].class, true, true, false, false, false, false, false, false, 1255, 1254, null), 
      new Field("heights", com.badlogic.gdx.math.Interpolation.BounceOut.class, float[].class, true, true, false, false, false, false, false, false, 1257, 1256, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.BounceOut.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1258),
  };
  t.constructors = new Constructor[] {
      new Constructor("BounceOut", com.badlogic.gdx.math.Interpolation.BounceOut.class, com.badlogic.gdx.math.Interpolation.BounceOut.class, new Parameter[] {widths___F, heights___F, }, false, false, false, false, false, false, true, false, false, false, true, 1259),
      new Constructor("BounceOut", com.badlogic.gdx.math.Interpolation.BounceOut.class, com.badlogic.gdx.math.Interpolation.BounceOut.class, new Parameter[] {bounces__I, }, false, false, false, false, false, false, true, false, false, false, true, 1260),
  };
  types.put("com.badlogic.gdx.math.Interpolation.BounceOut", t);
  }
  private void c71() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.Elastic", 1261, com.badlogic.gdx.math.Interpolation.Elastic.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("value", com.badlogic.gdx.math.Interpolation.Elastic.class, float.class, true, true, false, false, false, false, false, false, 1263, 1262, null), 
      new Field("power", com.badlogic.gdx.math.Interpolation.Elastic.class, float.class, true, true, false, false, false, false, false, false, 1265, 1264, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.Elastic.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1266),
  };
  t.constructors = new Constructor[] {
      new Constructor("Elastic", com.badlogic.gdx.math.Interpolation.Elastic.class, com.badlogic.gdx.math.Interpolation.Elastic.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1267),
  };
  types.put("com.badlogic.gdx.math.Interpolation.Elastic", t);
  }
  private void c72() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.ElasticIn", 1268, com.badlogic.gdx.math.Interpolation.ElasticIn.class, com.badlogic.gdx.math.Interpolation.Elastic.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Elastic.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.ElasticIn.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1269),
  };
  t.constructors = new Constructor[] {
      new Constructor("ElasticIn", com.badlogic.gdx.math.Interpolation.ElasticIn.class, com.badlogic.gdx.math.Interpolation.ElasticIn.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1270),
  };
  types.put("com.badlogic.gdx.math.Interpolation.ElasticIn", t);
  }
  private void c73() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.ElasticOut", 1271, com.badlogic.gdx.math.Interpolation.ElasticOut.class, com.badlogic.gdx.math.Interpolation.Elastic.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Elastic.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.ElasticOut.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1272),
  };
  t.constructors = new Constructor[] {
      new Constructor("ElasticOut", com.badlogic.gdx.math.Interpolation.ElasticOut.class, com.badlogic.gdx.math.Interpolation.ElasticOut.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1273),
  };
  types.put("com.badlogic.gdx.math.Interpolation.ElasticOut", t);
  }
  private void c74() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.Exp", 1274, com.badlogic.gdx.math.Interpolation.Exp.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("value", com.badlogic.gdx.math.Interpolation.Exp.class, float.class, true, true, false, false, false, false, false, false, 1276, 1275, null), 
      new Field("power", com.badlogic.gdx.math.Interpolation.Exp.class, float.class, true, true, false, false, false, false, false, false, 1278, 1277, null), 
      new Field("min", com.badlogic.gdx.math.Interpolation.Exp.class, float.class, true, true, false, false, false, false, false, false, 1280, 1279, null), 
      new Field("scale", com.badlogic.gdx.math.Interpolation.Exp.class, float.class, true, true, false, false, false, false, false, false, 1282, 1281, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.Exp.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1283),
  };
  t.constructors = new Constructor[] {
      new Constructor("Exp", com.badlogic.gdx.math.Interpolation.Exp.class, com.badlogic.gdx.math.Interpolation.Exp.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1284),
  };
  types.put("com.badlogic.gdx.math.Interpolation.Exp", t);
  }
  private void c75() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.ExpIn", 1285, com.badlogic.gdx.math.Interpolation.ExpIn.class, com.badlogic.gdx.math.Interpolation.Exp.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Exp.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.ExpIn.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1286),
  };
  t.constructors = new Constructor[] {
      new Constructor("ExpIn", com.badlogic.gdx.math.Interpolation.ExpIn.class, com.badlogic.gdx.math.Interpolation.ExpIn.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1287),
  };
  types.put("com.badlogic.gdx.math.Interpolation.ExpIn", t);
  }
  private void c76() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.ExpOut", 1288, com.badlogic.gdx.math.Interpolation.ExpOut.class, com.badlogic.gdx.math.Interpolation.Exp.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Exp.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.ExpOut.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1289),
  };
  t.constructors = new Constructor[] {
      new Constructor("ExpOut", com.badlogic.gdx.math.Interpolation.ExpOut.class, com.badlogic.gdx.math.Interpolation.ExpOut.class, new Parameter[] {value__F, power__F, }, false, false, false, false, false, false, true, false, false, false, true, 1290),
  };
  types.put("com.badlogic.gdx.math.Interpolation.ExpOut", t);
  }
  private void c77() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.Pow", 1291, com.badlogic.gdx.math.Interpolation.Pow.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("power", com.badlogic.gdx.math.Interpolation.Pow.class, int.class, true, true, false, false, false, false, false, false, 1293, 1292, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.Pow.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1294),
  };
  t.constructors = new Constructor[] {
      new Constructor("Pow", com.badlogic.gdx.math.Interpolation.Pow.class, com.badlogic.gdx.math.Interpolation.Pow.class, new Parameter[] {power__I, }, false, false, false, false, false, false, true, false, false, false, true, 1295),
  };
  types.put("com.badlogic.gdx.math.Interpolation.Pow", t);
  }
  private void c78() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.PowIn", 1296, com.badlogic.gdx.math.Interpolation.PowIn.class, com.badlogic.gdx.math.Interpolation.Pow.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Pow.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.PowIn.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1297),
  };
  t.constructors = new Constructor[] {
      new Constructor("PowIn", com.badlogic.gdx.math.Interpolation.PowIn.class, com.badlogic.gdx.math.Interpolation.PowIn.class, new Parameter[] {power__I, }, false, false, false, false, false, false, true, false, false, false, true, 1298),
  };
  types.put("com.badlogic.gdx.math.Interpolation.PowIn", t);
  }
  private void c79() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.PowOut", 1299, com.badlogic.gdx.math.Interpolation.PowOut.class, com.badlogic.gdx.math.Interpolation.Pow.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.Pow.class, com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.PowOut.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1300),
  };
  t.constructors = new Constructor[] {
      new Constructor("PowOut", com.badlogic.gdx.math.Interpolation.PowOut.class, com.badlogic.gdx.math.Interpolation.PowOut.class, new Parameter[] {power__I, }, false, false, false, false, false, false, true, false, false, false, true, 1301),
  };
  types.put("com.badlogic.gdx.math.Interpolation.PowOut", t);
  }
  private void c80() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.Swing", 1302, com.badlogic.gdx.math.Interpolation.Swing.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("scale", com.badlogic.gdx.math.Interpolation.Swing.class, float.class, true, false, true, false, false, false, false, false, 1304, 1303, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.Swing.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1305),
  };
  t.constructors = new Constructor[] {
      new Constructor("Swing", com.badlogic.gdx.math.Interpolation.Swing.class, com.badlogic.gdx.math.Interpolation.Swing.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, false, true, 1306),
  };
  types.put("com.badlogic.gdx.math.Interpolation.Swing", t);
  }
  private void c81() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.SwingIn", 1307, com.badlogic.gdx.math.Interpolation.SwingIn.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("scale", com.badlogic.gdx.math.Interpolation.SwingIn.class, float.class, true, false, true, false, false, false, false, false, 1309, 1308, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.SwingIn.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1310),
  };
  t.constructors = new Constructor[] {
      new Constructor("SwingIn", com.badlogic.gdx.math.Interpolation.SwingIn.class, com.badlogic.gdx.math.Interpolation.SwingIn.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, false, true, 1311),
  };
  types.put("com.badlogic.gdx.math.Interpolation.SwingIn", t);
  }
  private void c82() {
  Type t = new Type("com.badlogic.gdx.math.Interpolation.SwingOut", 1312, com.badlogic.gdx.math.Interpolation.SwingOut.class, com.badlogic.gdx.math.Interpolation.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.math.Interpolation.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("scale", com.badlogic.gdx.math.Interpolation.SwingOut.class, float.class, true, false, true, false, false, false, false, false, 1314, 1313, null), 
  };
  t.methods = new Method[] {
      new Method("apply", com.badlogic.gdx.math.Interpolation.SwingOut.class, float.class, new Parameter[] {a__F, }, false, false, false, false, false, false, true, false, false, true, false, 1315),
  };
  t.constructors = new Constructor[] {
      new Constructor("SwingOut", com.badlogic.gdx.math.Interpolation.SwingOut.class, com.badlogic.gdx.math.Interpolation.SwingOut.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, false, true, 1316),
  };
  types.put("com.badlogic.gdx.math.Interpolation.SwingOut", t);
  }
  private void c83() {
  Type t = new Type("com.badlogic.gdx.math.Intersector", 1317, com.badlogic.gdx.math.Intersector.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("v0", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1319, 1318, null), 
      new Field("v1", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1321, 1320, null), 
      new Field("v2", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1323, 1322, null), 
      new Field("p", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Plane.class, true, false, true, false, false, true, false, false, 1325, 1324, null), 
      new Field("i", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1327, 1326, null), 
      new Field("dir", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1329, 1328, null), 
      new Field("start", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 1331, 1330, null), 
      new Field("best", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1333, 1332, null), 
      new Field("tmp", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1335, 1334, null), 
      new Field("tmp1", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1337, 1336, null), 
      new Field("tmp2", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1339, 1338, null), 
      new Field("tmp3", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1341, 1340, null), 
      new Field("v2tmp", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector2.class, false, true, false, false, false, true, false, false, 1343, 1342, null), 
      new Field("intersection", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 1345, 1344, null), 
  };
  t.methods = new Method[] {
      new Method("isPointInTriangle", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, t1__Lcom_badlogic_gdx_math_Vector3_, t2__Lcom_badlogic_gdx_math_Vector3_, t3__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1346),
      new Method("isPointInTriangle", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p__Lcom_badlogic_gdx_math_Vector2_, a__Lcom_badlogic_gdx_math_Vector2_, b__Lcom_badlogic_gdx_math_Vector2_, c__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1347),
      new Method("isPointInTriangle", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {px__F, py__F, ax__F, ay__F, bx__F, by__F, cx__F, cy__F, }, false, false, true, false, false, false, true, false, false, true, false, 1348),
      new Method("intersectSegmentPlane", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector3_, end__Lcom_badlogic_gdx_math_Vector3_, plane__Lcom_badlogic_gdx_math_Plane_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1349),
      new Method("pointLineSide", com.badlogic.gdx.math.Intersector.class, int.class, new Parameter[] {linePoint1__Lcom_badlogic_gdx_math_Vector2_, linePoint2__Lcom_badlogic_gdx_math_Vector2_, point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1350),
      new Method("pointLineSide", com.badlogic.gdx.math.Intersector.class, int.class, new Parameter[] {linePoint1X__F, linePoint1Y__F, linePoint2X__F, linePoint2Y__F, pointX__F, pointY__F, }, false, false, true, false, false, false, true, false, false, true, false, 1351),
      new Method("isPointInPolygon", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {polygon__Lcom_badlogic_gdx_utils_Array_, point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1352),
      new Method("isPointInPolygon", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {polygon___F, offset__I, count__I, x__F, y__F, }, false, false, true, false, false, false, true, false, false, true, false, 1353),
      new Method("distanceLinePoint", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector2_, end__Lcom_badlogic_gdx_math_Vector2_, point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1354),
      new Method("distanceLinePoint", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {startX__F, startY__F, endX__F, endY__F, pointX__F, pointY__F, }, false, false, true, false, false, false, true, false, false, true, false, 1355),
      new Method("distanceSegmentPoint", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {startX__F, startY__F, endX__F, endY__F, pointX__F, pointY__F, }, false, false, true, false, false, false, true, false, false, true, false, 1356),
      new Method("distanceSegmentPoint", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector2_, end__Lcom_badlogic_gdx_math_Vector2_, point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1357),
      new Method("nearestSegmentPoint", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector2_, end__Lcom_badlogic_gdx_math_Vector2_, point__Lcom_badlogic_gdx_math_Vector2_, nearest__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1358),
      new Method("nearestSegmentPoint", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {startX__F, startY__F, endX__F, endY__F, pointX__F, pointY__F, nearest__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1359),
      new Method("intersectSegmentCircle", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector2_, end__Lcom_badlogic_gdx_math_Vector2_, center__Lcom_badlogic_gdx_math_Vector2_, squareRadius__F, }, false, false, true, false, false, false, true, false, false, true, false, 1360),
      new Method("intersectSegmentCircleDisplace", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {start__Lcom_badlogic_gdx_math_Vector2_, end__Lcom_badlogic_gdx_math_Vector2_, point__Lcom_badlogic_gdx_math_Vector2_, radius__F, displacement__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1361),
      new Method("intersectRayPlane", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, plane__Lcom_badlogic_gdx_math_Plane_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1362),
      new Method("intersectLinePlane", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {x__F, y__F, z__F, x2__F, y2__F, z2__F, plane__Lcom_badlogic_gdx_math_Plane_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1363),
      new Method("intersectRayTriangle", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, t1__Lcom_badlogic_gdx_math_Vector3_, t2__Lcom_badlogic_gdx_math_Vector3_, t3__Lcom_badlogic_gdx_math_Vector3_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1364),
      new Method("intersectRaySphere", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, center__Lcom_badlogic_gdx_math_Vector3_, radius__F, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1365),
      new Method("intersectRayBounds", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, box__Lcom_badlogic_gdx_math_collision_BoundingBox_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1366),
      new Method("intersectRayBoundsFast", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, box__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, true, false, false, false, true, false, false, true, false, 1367),
      new Method("intersectRayTriangles", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, triangles___F, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1368),
      new Method("intersectRayTriangles", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, vertices___F, indices___S, vertexSize__I, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1369),
      new Method("intersectRayTriangles", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, triangles__Ljava_util_List_, intersection__Lcom_badlogic_gdx_math_Vector3_, }, false, false, true, false, false, false, true, false, false, true, false, 1370),
      new Method("intersectLines", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Vector2_, p2__Lcom_badlogic_gdx_math_Vector2_, p3__Lcom_badlogic_gdx_math_Vector2_, p4__Lcom_badlogic_gdx_math_Vector2_, intersection__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1371),
      new Method("intersectLines", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, x4__F, y4__F, intersection__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1372),
      new Method("intersectLinePolygon", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Vector2_, p2__Lcom_badlogic_gdx_math_Vector2_, polygon__Lcom_badlogic_gdx_math_Polygon_, }, false, false, true, false, false, false, true, false, false, true, false, 1373),
      new Method("intersectRectangles", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {rectangle1__Lcom_badlogic_gdx_math_Rectangle_, rectangle2__Lcom_badlogic_gdx_math_Rectangle_, intersection__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, false, false, true, false, false, true, false, 1374),
      new Method("intersectSegmentPolygon", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Vector2_, p2__Lcom_badlogic_gdx_math_Vector2_, polygon__Lcom_badlogic_gdx_math_Polygon_, }, false, false, true, false, false, false, true, false, false, true, false, 1375),
      new Method("intersectSegments", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Vector2_, p2__Lcom_badlogic_gdx_math_Vector2_, p3__Lcom_badlogic_gdx_math_Vector2_, p4__Lcom_badlogic_gdx_math_Vector2_, intersection__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1376),
      new Method("intersectSegments", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {x1__F, y1__F, x2__F, y2__F, x3__F, y3__F, x4__F, y4__F, intersection__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 1377),
      new Method("det", com.badlogic.gdx.math.Intersector.class, float.class, new Parameter[] {a__F, b__F, c__F, d__F, }, false, false, true, true, false, false, false, false, false, true, false, 1378),
      new Method("detd", com.badlogic.gdx.math.Intersector.class, double.class, new Parameter[] {a__D, b__D, c__D, d__D, }, false, false, true, true, false, false, false, false, false, true, false, 1379),
      new Method("overlaps", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {c1__Lcom_badlogic_gdx_math_Circle_, c2__Lcom_badlogic_gdx_math_Circle_, }, false, false, true, false, false, false, true, false, false, true, false, 1380),
      new Method("overlaps", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {r1__Lcom_badlogic_gdx_math_Rectangle_, r2__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, false, false, true, false, false, true, false, 1381),
      new Method("overlaps", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {c__Lcom_badlogic_gdx_math_Circle_, r__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, false, false, true, false, false, true, false, 1382),
      new Method("overlapConvexPolygons", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Polygon_, p2__Lcom_badlogic_gdx_math_Polygon_, }, false, false, true, false, false, false, true, false, false, true, false, 1383),
      new Method("overlapConvexPolygons", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {p1__Lcom_badlogic_gdx_math_Polygon_, p2__Lcom_badlogic_gdx_math_Polygon_, mtv__Lcom_badlogic_gdx_math_Intersector$MinimumTranslationVector_, }, false, false, true, false, false, false, true, false, false, true, false, 1384),
      new Method("overlapConvexPolygons", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {verts1___F, verts2___F, mtv__Lcom_badlogic_gdx_math_Intersector$MinimumTranslationVector_, }, false, false, true, false, false, false, true, false, false, true, false, 1385),
      new Method("overlapConvexPolygons", com.badlogic.gdx.math.Intersector.class, boolean.class, new Parameter[] {verts1___F, offset1__I, count1__I, verts2___F, offset2__I, count2__I, mtv__Lcom_badlogic_gdx_math_Intersector$MinimumTranslationVector_, }, false, false, true, false, false, false, true, false, false, true, false, 1386),
      new Method("splitTriangle", com.badlogic.gdx.math.Intersector.class, void.class, new Parameter[] {triangle___F, plane__Lcom_badlogic_gdx_math_Plane_, split__Lcom_badlogic_gdx_math_Intersector$SplitTriangle_, }, false, false, true, false, false, false, true, false, false, true, false, 1387),
      new Method("splitEdge", com.badlogic.gdx.math.Intersector.class, void.class, new Parameter[] {vertices___F, s__I, e__I, stride__I, plane__Lcom_badlogic_gdx_math_Plane_, split___F, offset__I, }, false, false, true, false, true, false, false, false, false, true, false, 1388),
      new Method("main", com.badlogic.gdx.math.Intersector.class, void.class, new Parameter[] {args___Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 1389),
  };
  t.constructors = new Constructor[] {
      new Constructor("Intersector", com.badlogic.gdx.math.Intersector.class, com.badlogic.gdx.math.Intersector.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1390),
  };
  types.put("com.badlogic.gdx.math.Intersector", t);
  }
  private void c84() {
  Type t = new Type("com.badlogic.gdx.math.Intersector.MinimumTranslationVector", 1391, com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("normal", com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, com.badlogic.gdx.math.Vector2.class, false, false, false, false, true, false, false, false, 1393, 1392, null), 
      new Field("depth", com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, float.class, false, false, false, false, true, false, false, false, 1395, 1394, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("MinimumTranslationVector", com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1396),
  };
  types.put("com.badlogic.gdx.math.Intersector.MinimumTranslationVector", t);
  }
  private void c85() {
  Type t = new Type("com.badlogic.gdx.math.Intersector.SplitTriangle", 1397, com.badlogic.gdx.math.Intersector.SplitTriangle.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("front", com.badlogic.gdx.math.Intersector.SplitTriangle.class, float[].class, false, false, false, false, true, false, false, false, 1399, 1398, null), 
      new Field("back", com.badlogic.gdx.math.Intersector.SplitTriangle.class, float[].class, false, false, false, false, true, false, false, false, 1401, 1400, null), 
      new Field("edgeSplit", com.badlogic.gdx.math.Intersector.SplitTriangle.class, float[].class, false, true, false, false, false, false, false, false, 1403, 1402, null), 
      new Field("numFront", com.badlogic.gdx.math.Intersector.SplitTriangle.class, int.class, false, false, false, false, true, false, false, false, 1405, 1404, null), 
      new Field("numBack", com.badlogic.gdx.math.Intersector.SplitTriangle.class, int.class, false, false, false, false, true, false, false, false, 1407, 1406, null), 
      new Field("total", com.badlogic.gdx.math.Intersector.SplitTriangle.class, int.class, false, false, false, false, true, false, false, false, 1409, 1408, null), 
      new Field("frontCurrent", com.badlogic.gdx.math.Intersector.SplitTriangle.class, boolean.class, false, true, false, false, false, false, false, false, 1411, 1410, null), 
      new Field("frontOffset", com.badlogic.gdx.math.Intersector.SplitTriangle.class, int.class, false, true, false, false, false, false, false, false, 1413, 1412, null), 
      new Field("backOffset", com.badlogic.gdx.math.Intersector.SplitTriangle.class, int.class, false, true, false, false, false, false, false, false, 1415, 1414, null), 
  };
  t.methods = new Method[] {
      new Method("toString", com.badlogic.gdx.math.Intersector.SplitTriangle.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1416),
      new Method("setSide", com.badlogic.gdx.math.Intersector.SplitTriangle.class, void.class, new Parameter[] {front__Z, }, false, false, false, true, false, false, false, false, false, true, false, 1417),
      new Method("getSide", com.badlogic.gdx.math.Intersector.SplitTriangle.class, boolean.class, EMPTY_PARAMETERS,false, false, false, true, false, false, false, false, false, true, false, 1418),
      new Method("add", com.badlogic.gdx.math.Intersector.SplitTriangle.class, void.class, new Parameter[] {vertex___F, offset__I, stride__I, }, false, false, false, true, false, false, false, false, false, true, false, 1419),
      new Method("reset", com.badlogic.gdx.math.Intersector.SplitTriangle.class, void.class, EMPTY_PARAMETERS,false, false, false, true, false, false, false, false, false, true, false, 1420),
  };
  t.constructors = new Constructor[] {
      new Constructor("SplitTriangle", com.badlogic.gdx.math.Intersector.SplitTriangle.class, com.badlogic.gdx.math.Intersector.SplitTriangle.class, new Parameter[] {numAttributes__I, }, false, false, false, false, false, false, true, false, false, false, true, 1421),
  };
  types.put("com.badlogic.gdx.math.Intersector.SplitTriangle", t);
  }
  private void c86() {
  Type t = new Type("com.badlogic.gdx.math.MathUtils", 1422, com.badlogic.gdx.math.MathUtils.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("nanoToSec", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1424, 1423, null), 
      new Field("PI", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1426, 1425, null), 
      new Field("PI2", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1428, 1427, null), 
      new Field("E", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1430, 1429, null), 
      new Field("SIN_BITS", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1432, 1431, null), 
      new Field("SIN_MASK", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1434, 1433, null), 
      new Field("SIN_COUNT", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1436, 1435, null), 
      new Field("radFull", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, true, false, false, true, false, false, 1438, 1437, null), 
      new Field("degFull", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, true, false, false, true, false, false, 1440, 1439, null), 
      new Field("radToIndex", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, true, false, false, true, false, false, 1442, 1441, null), 
      new Field("degToIndex", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, true, false, false, true, false, false, 1444, 1443, null), 
      new Field("radiansToDegrees", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1446, 1445, null), 
      new Field("radDeg", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1448, 1447, null), 
      new Field("degreesToRadians", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1450, 1449, null), 
      new Field("degRad", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, false, false, true, true, false, false, 1452, 1451, null), 
      new Field("ATAN2_BITS", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1454, 1453, null), 
      new Field("ATAN2_BITS2", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1456, 1455, null), 
      new Field("ATAN2_MASK", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1458, 1457, null), 
      new Field("ATAN2_COUNT", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1460, 1459, null), 
      new Field("ATAN2_DIM", com.badlogic.gdx.math.MathUtils.class, int.class, true, true, false, false, false, true, false, false, 1462, 1461, null), 
      new Field("INV_ATAN2_DIM_MINUS_1", com.badlogic.gdx.math.MathUtils.class, float.class, true, false, true, false, false, true, false, false, 1464, 1463, null), 
      new Field("random", com.badlogic.gdx.math.MathUtils.class, java.util.Random.class, false, false, false, false, true, true, false, false, 1466, 1465, null), 
      new Field("BIG_ENOUGH_INT", com.badlogic.gdx.math.MathUtils.class, int.class, true, false, true, false, false, true, false, false, 1468, 1467, null), 
      new Field("BIG_ENOUGH_FLOOR", com.badlogic.gdx.math.MathUtils.class, double.class, true, false, true, false, false, true, false, false, 1470, 1469, null), 
      new Field("CEIL", com.badlogic.gdx.math.MathUtils.class, double.class, true, false, true, false, false, true, false, false, 1472, 1471, null), 
      new Field("BIG_ENOUGH_CEIL", com.badlogic.gdx.math.MathUtils.class, double.class, true, false, true, false, false, true, false, false, 1474, 1473, null), 
      new Field("BIG_ENOUGH_ROUND", com.badlogic.gdx.math.MathUtils.class, double.class, true, false, true, false, false, true, false, false, 1476, 1475, null), 
  };
  t.methods = new Method[] {
      new Method("sin", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {radians__F, }, false, true, true, false, false, false, true, false, false, true, false, 1477),
      new Method("cos", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {radians__F, }, false, true, true, false, false, false, true, false, false, true, false, 1478),
      new Method("sinDeg", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {degrees__F, }, false, true, true, false, false, false, true, false, false, true, false, 1479),
      new Method("cosDeg", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {degrees__F, }, false, true, true, false, false, false, true, false, false, true, false, 1480),
      new Method("atan2", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {y__F, x__F, }, false, true, true, false, false, false, true, false, false, true, false, 1481),
      new Method("random", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {range__I, }, false, true, true, false, false, false, true, false, false, true, false, 1482),
      new Method("random", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {start__I, end__I, }, false, true, true, false, false, false, true, false, false, true, false, 1483),
      new Method("random", com.badlogic.gdx.math.MathUtils.class, float.class, EMPTY_PARAMETERS,false, true, true, false, false, false, true, false, false, true, false, 1484),
      new Method("random", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {range__F, }, false, true, true, false, false, false, true, false, false, true, false, 1485),
      new Method("random", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {start__F, end__F, }, false, true, true, false, false, false, true, false, false, true, false, 1486),
      new Method("randomBoolean", com.badlogic.gdx.math.MathUtils.class, boolean.class, EMPTY_PARAMETERS,false, true, true, false, false, false, true, false, false, true, false, 1487),
      new Method("randomBoolean", com.badlogic.gdx.math.MathUtils.class, boolean.class, new Parameter[] {chance__F, }, false, true, true, false, false, false, true, false, false, true, false, 1488),
      new Method("nextPowerOfTwo", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 1489),
      new Method("isPowerOfTwo", com.badlogic.gdx.math.MathUtils.class, boolean.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 1490),
      new Method("clamp", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {value__I, min__I, max__I, }, false, false, true, false, false, false, true, false, false, true, false, 1491),
      new Method("clamp", com.badlogic.gdx.math.MathUtils.class, short.class, new Parameter[] {value__S, min__S, max__S, }, false, false, true, false, false, false, true, false, false, true, false, 1492),
      new Method("clamp", com.badlogic.gdx.math.MathUtils.class, float.class, new Parameter[] {value__F, min__F, max__F, }, false, false, true, false, false, false, true, false, false, true, false, 1493),
      new Method("floor", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1494),
      new Method("floorPositive", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1495),
      new Method("ceil", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1496),
      new Method("ceilPositive", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1497),
      new Method("round", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1498),
      new Method("roundPositive", com.badlogic.gdx.math.MathUtils.class, int.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 1499),
  };
  t.constructors = new Constructor[] {
      new Constructor("MathUtils", com.badlogic.gdx.math.MathUtils.class, com.badlogic.gdx.math.MathUtils.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1500),
  };
  types.put("com.badlogic.gdx.math.MathUtils", t);
  }
  private void c87() {
  Type t = new Type("com.badlogic.gdx.math.Matrix3", 1501, com.badlogic.gdx.math.Matrix3.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Matrix3.class, long.class, true, false, true, false, false, true, false, false, 1503, 1502, null), 
      new Field("M00", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1505, 1504, null), 
      new Field("M01", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1507, 1506, null), 
      new Field("M02", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1509, 1508, null), 
      new Field("M10", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1511, 1510, null), 
      new Field("M11", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1513, 1512, null), 
      new Field("M12", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1515, 1514, null), 
      new Field("M20", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1517, 1516, null), 
      new Field("M21", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1519, 1518, null), 
      new Field("M22", com.badlogic.gdx.math.Matrix3.class, int.class, true, false, false, false, true, true, false, false, 1521, 1520, null), 
      new Field("val", com.badlogic.gdx.math.Matrix3.class, float[].class, false, false, false, false, true, false, false, false, 1523, 1522, null), 
      new Field("tmp", com.badlogic.gdx.math.Matrix3.class, float[].class, false, false, true, false, false, false, false, false, 1525, 1524, null), 
  };
  t.methods = new Method[] {
      new Method("idt", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1526),
      new Method("mul", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {m__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1527),
      new Method("mul", com.badlogic.gdx.math.Matrix3.class, void.class, new Parameter[] {mata___F, matb___F, }, false, false, true, false, true, false, false, false, false, true, false, 1528),
      new Method("setToRotation", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1529),
      new Method("setToRotationRad", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1530),
      new Method("setToTranslation", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1531),
      new Method("setToTranslation", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {translation__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1532),
      new Method("setToScaling", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1533),
      new Method("toString", com.badlogic.gdx.math.Matrix3.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1534),
      new Method("det", com.badlogic.gdx.math.Matrix3.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1535),
      new Method("inv", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1536),
      new Method("set", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {mat__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1537),
      new Method("set", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {mat__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1538),
      new Method("set", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, true, false, 1539),
      new Method("trn", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1540),
      new Method("trn", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1541),
      new Method("trn", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1542),
      new Method("translate", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1543),
      new Method("translate", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {translation__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1544),
      new Method("rotate", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1545),
      new Method("rotateRad", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1546),
      new Method("scale", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1547),
      new Method("scale", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1548),
      new Method("getValues", com.badlogic.gdx.math.Matrix3.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1549),
      new Method("getTranslation", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1550),
      new Method("getScale", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1551),
      new Method("getRotation", com.badlogic.gdx.math.Matrix3.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1552),
      new Method("getRotationRad", com.badlogic.gdx.math.Matrix3.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1553),
      new Method("scl", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 1554),
      new Method("scl", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1555),
      new Method("scl", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1556),
      new Method("transpose", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1557),
  };
  t.constructors = new Constructor[] {
      new Constructor("Matrix3", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1558),
      new Constructor("Matrix3", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, false, true, 1559),
      new Constructor("Matrix3", com.badlogic.gdx.math.Matrix3.class, com.badlogic.gdx.math.Matrix3.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, false, true, 1560),
  };
  types.put("com.badlogic.gdx.math.Matrix3", t);
  }
  private void c88() {
  Type t = new Type("com.badlogic.gdx.math.Matrix4", 1561, com.badlogic.gdx.math.Matrix4.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Matrix4.class, long.class, true, false, true, false, false, true, false, false, 1563, 1562, null), 
      new Field("M00", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1565, 1564, null), 
      new Field("M01", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1567, 1566, null), 
      new Field("M02", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1569, 1568, null), 
      new Field("M03", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1571, 1570, null), 
      new Field("M10", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1573, 1572, null), 
      new Field("M11", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1575, 1574, null), 
      new Field("M12", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1577, 1576, null), 
      new Field("M13", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1579, 1578, null), 
      new Field("M20", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1581, 1580, null), 
      new Field("M21", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1583, 1582, null), 
      new Field("M22", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1585, 1584, null), 
      new Field("M23", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1587, 1586, null), 
      new Field("M30", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1589, 1588, null), 
      new Field("M31", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1591, 1590, null), 
      new Field("M32", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1593, 1592, null), 
      new Field("M33", com.badlogic.gdx.math.Matrix4.class, int.class, true, false, false, false, true, true, false, false, 1595, 1594, null), 
      new Field("tmp", com.badlogic.gdx.math.Matrix4.class, float[].class, true, false, false, false, true, false, false, false, 1597, 1596, null), 
      new Field("val", com.badlogic.gdx.math.Matrix4.class, float[].class, true, false, false, false, true, false, false, false, 1599, 1598, null), 
      new Field("quat", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Quaternion.class, false, true, false, false, false, true, false, false, 1601, 1600, null), 
      new Field("l_vez", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1603, 1602, null), 
      new Field("l_vex", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1605, 1604, null), 
      new Field("l_vey", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1607, 1606, null), 
      new Field("tmpVec", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1609, 1608, null), 
      new Field("tmpMat", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, true, true, false, false, false, true, false, false, 1611, 1610, null), 
      new Field("right", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1613, 1612, null), 
      new Field("tmpForward", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1615, 1614, null), 
      new Field("tmpUp", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, true, false, false, 1617, 1616, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1618),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, true, false, 1619),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {quaternion__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1620),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, w__F, }, false, false, false, false, false, false, true, false, false, true, false, 1621),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, orientation__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1622),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {translationX__F, translationY__F, translationZ__F, quaternionX__F, quaternionY__F, quaternionZ__F, quaternionW__F, }, false, false, false, false, false, false, true, false, false, true, false, 1623),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {xAxis__Lcom_badlogic_gdx_math_Vector3_, yAxis__Lcom_badlogic_gdx_math_Vector3_, zAxis__Lcom_badlogic_gdx_math_Vector3_, pos__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1624),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, orientation__Lcom_badlogic_gdx_math_Quaternion_, scale__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1625),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {mat__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1626),
      new Method("set", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {translationX__F, translationY__F, translationZ__F, quaternionX__F, quaternionY__F, quaternionZ__F, quaternionW__F, scaleX__F, scaleY__F, scaleZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 1627),
      new Method("cpy", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1628),
      new Method("trn", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1629),
      new Method("trn", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1630),
      new Method("getValues", com.badlogic.gdx.math.Matrix4.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1631),
      new Method("mul", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1632),
      new Method("mul", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mata___F, matb___F, }, false, false, true, false, false, false, true, false, false, true, false, 1633),
      new Method("tra", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1634),
      new Method("idt", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1635),
      new Method("inv", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1636),
      new Method("inv", com.badlogic.gdx.math.Matrix4.class, boolean.class, new Parameter[] {values___F, }, false, false, true, false, false, false, true, false, false, true, false, 1637),
      new Method("det", com.badlogic.gdx.math.Matrix4.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1638),
      new Method("det", com.badlogic.gdx.math.Matrix4.class, float.class, new Parameter[] {values___F, }, false, false, true, false, false, false, true, false, false, true, false, 1639),
      new Method("setToProjection", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {near__F, far__F, fov__F, aspectRatio__F, }, false, false, false, false, false, false, true, false, false, true, false, 1640),
      new Method("setToOrtho2D", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1641),
      new Method("setToOrtho2D", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, width__F, height__F, near__F, far__F, }, false, false, false, false, false, false, true, false, false, true, false, 1642),
      new Method("setToOrtho", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {left__F, right__F, bottom__F, top__F, near__F, far__F, }, false, false, false, false, false, false, true, false, false, true, false, 1643),
      new Method("setTranslation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1644),
      new Method("setTranslation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1645),
      new Method("setToTranslation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1646),
      new Method("setToTranslation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1647),
      new Method("setToTranslationAndScaling", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {translation__Lcom_badlogic_gdx_math_Vector3_, scaling__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1648),
      new Method("setToTranslationAndScaling", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {translationX__F, translationY__F, translationZ__F, scalingX__F, scalingY__F, scalingZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 1649),
      new Method("setToRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1650),
      new Method("setToRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axisX__F, axisY__F, axisZ__F, angle__F, }, false, false, false, false, false, false, true, false, false, true, false, 1651),
      new Method("setToRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {v1__Lcom_badlogic_gdx_math_Vector3_, v2__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1652),
      new Method("setToRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x1__F, y1__F, z1__F, x2__F, y2__F, z2__F, }, false, false, false, false, false, false, true, false, false, true, false, 1653),
      new Method("setToRotationRad", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1654),
      new Method("setToRotationRad", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axisX__F, axisY__F, axisZ__F, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1655),
      new Method("setFromEulerAngles", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {yaw__F, pitch__F, roll__F, }, false, false, false, false, false, false, true, false, false, true, false, 1656),
      new Method("setToScaling", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1657),
      new Method("setToScaling", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1658),
      new Method("setToLookAt", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {direction__Lcom_badlogic_gdx_math_Vector3_, up__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1659),
      new Method("setToLookAt", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, target__Lcom_badlogic_gdx_math_Vector3_, up__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1660),
      new Method("setToWorld", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, forward__Lcom_badlogic_gdx_math_Vector3_, up__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1661),
      new Method("toString", com.badlogic.gdx.math.Matrix4.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1662),
      new Method("lerp", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 1663),
      new Method("scl", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1664),
      new Method("scl", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1665),
      new Method("scl", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 1666),
      new Method("getTranslation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1667),
      new Method("getRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {rotation__Lcom_badlogic_gdx_math_Quaternion_, normalizeAxes__Z, }, false, false, false, false, false, false, true, false, false, true, false, 1668),
      new Method("getRotation", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {rotation__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1669),
      new Method("getScale", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {scale__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1670),
      new Method("toNormalMatrix", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1671),
      new Method("matrix4_mul", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mata___F, matb___F, }, false, false, true, true, false, false, false, false, false, true, false, 1672),
      new Method("matrix4_det", com.badlogic.gdx.math.Matrix4.class, float.class, new Parameter[] {val___F, }, false, false, true, true, false, false, false, false, false, true, false, 1673),
      new Method("matrix4_inv", com.badlogic.gdx.math.Matrix4.class, boolean.class, new Parameter[] {val___F, }, false, false, true, true, false, false, false, false, false, true, false, 1674),
      new Method("matrix4_mulVec", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, offset__I, }, false, false, true, true, false, false, false, false, false, true, false, 1675),
      new Method("matrix4_proj", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, offset__I, }, false, false, true, true, false, false, false, false, false, true, false, 1676),
      new Method("matrix4_rot", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, offset__I, }, false, false, true, true, false, false, false, false, false, true, false, 1677),
      new Method("mulVec", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, }, false, false, true, false, false, false, true, false, false, true, false, 1678),
      new Method("mulVec", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vecs___F, offset__I, numVecs__I, stride__I, }, false, false, true, false, false, false, true, false, false, true, false, 1679),
      new Method("prj", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, }, false, false, true, false, false, false, true, false, false, true, false, 1680),
      new Method("prj", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vecs___F, offset__I, numVecs__I, stride__I, }, false, false, true, false, false, false, true, false, false, true, false, 1681),
      new Method("rot", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vec___F, }, false, false, true, false, false, false, true, false, false, true, false, 1682),
      new Method("rot", com.badlogic.gdx.math.Matrix4.class, void.class, new Parameter[] {mat___F, vecs___F, offset__I, numVecs__I, stride__I, }, false, false, true, false, false, false, true, false, false, true, false, 1683),
      new Method("translate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {translation__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1684),
      new Method("translate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1685),
      new Method("rotate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, angle__F, }, false, false, false, false, false, false, true, false, false, true, false, 1686),
      new Method("rotate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axisX__F, axisY__F, axisZ__F, degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1687),
      new Method("rotate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {rotation__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1688),
      new Method("rotate", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {v1__Lcom_badlogic_gdx_math_Vector3_, v2__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1689),
      new Method("rotateRad", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1690),
      new Method("rotateRad", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {axisX__F, axisY__F, axisZ__F, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1691),
      new Method("scale", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {scaleX__F, scaleY__F, scaleZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 1692),
  };
  t.constructors = new Constructor[] {
      new Constructor("Matrix4", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1693),
      new Constructor("Matrix4", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, false, true, 1694),
      new Constructor("Matrix4", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, false, true, 1695),
      new Constructor("Matrix4", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {quaternion__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, false, true, 1696),
      new Constructor("Matrix4", com.badlogic.gdx.math.Matrix4.class, com.badlogic.gdx.math.Matrix4.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector3_, rotation__Lcom_badlogic_gdx_math_Quaternion_, scale__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 1697),
  };
  types.put("com.badlogic.gdx.math.Matrix4", t);
  }
  private void c89() {
  Type t = new Type("com.badlogic.gdx.math.Matrix4[]", 1698, com.badlogic.gdx.math.Matrix4[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Matrix4[]", t);
  }
  private void c90() {
  Type t = new Type("com.badlogic.gdx.math.Path", 1699, com.badlogic.gdx.math.Path.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Path", t);
  }
  private void c91() {
  Type t = new Type("com.badlogic.gdx.math.Plane", 1700, com.badlogic.gdx.math.Plane.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Plane.class, long.class, true, false, true, false, false, true, false, false, 1702, 1701, null), 
      new Field("normal", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 1704, 1703, null), 
      new Field("d", com.badlogic.gdx.math.Plane.class, float.class, false, false, false, false, true, false, false, false, 1706, 1705, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Plane.class, void.class, new Parameter[] {point1__Lcom_badlogic_gdx_math_Vector3_, point2__Lcom_badlogic_gdx_math_Vector3_, point3__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1707),
      new Method("set", com.badlogic.gdx.math.Plane.class, void.class, new Parameter[] {nx__F, ny__F, nz__F, d__F, }, false, false, false, false, false, false, true, false, false, true, false, 1708),
      new Method("set", com.badlogic.gdx.math.Plane.class, void.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, normal__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1709),
      new Method("set", com.badlogic.gdx.math.Plane.class, void.class, new Parameter[] {pointX__F, pointY__F, pointZ__F, norX__F, norY__F, norZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 1710),
      new Method("set", com.badlogic.gdx.math.Plane.class, void.class, new Parameter[] {plane__Lcom_badlogic_gdx_math_Plane_, }, false, false, false, false, false, false, true, false, false, true, false, 1711),
      new Method("distance", com.badlogic.gdx.math.Plane.class, float.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1712),
      new Method("testPoint", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Plane.PlaneSide.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1713),
      new Method("testPoint", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Plane.PlaneSide.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 1714),
      new Method("isFrontFacing", com.badlogic.gdx.math.Plane.class, boolean.class, new Parameter[] {direction__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1715),
      new Method("getNormal", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1716),
      new Method("getD", com.badlogic.gdx.math.Plane.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1717),
      new Method("toString", com.badlogic.gdx.math.Plane.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1718),
  };
  t.constructors = new Constructor[] {
      new Constructor("Plane", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Plane.class, new Parameter[] {normal__Lcom_badlogic_gdx_math_Vector3_, d__F, }, false, false, false, false, false, false, true, false, false, false, true, 1719),
      new Constructor("Plane", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Plane.class, new Parameter[] {normal__Lcom_badlogic_gdx_math_Vector3_, point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 1720),
      new Constructor("Plane", com.badlogic.gdx.math.Plane.class, com.badlogic.gdx.math.Plane.class, new Parameter[] {point1__Lcom_badlogic_gdx_math_Vector3_, point2__Lcom_badlogic_gdx_math_Vector3_, point3__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 1721),
  };
  types.put("com.badlogic.gdx.math.Plane", t);
  }
  private void c92() {
  Type t = new Type("com.badlogic.gdx.math.Plane.PlaneSide", 1722, com.badlogic.gdx.math.Plane.PlaneSide.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("OnPlane", com.badlogic.gdx.math.Plane.PlaneSide.class, com.badlogic.gdx.math.Plane.PlaneSide.class, true, false, false, false, true, true, false, false, 1724, 1723, null), 
      new Field("Back", com.badlogic.gdx.math.Plane.PlaneSide.class, com.badlogic.gdx.math.Plane.PlaneSide.class, true, false, false, false, true, true, false, false, 1726, 1725, null), 
      new Field("Front", com.badlogic.gdx.math.Plane.PlaneSide.class, com.badlogic.gdx.math.Plane.PlaneSide.class, true, false, false, false, true, true, false, false, 1728, 1727, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.math.Plane.PlaneSide.class, com.badlogic.gdx.math.Plane.PlaneSide[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 1729),
      new Method("valueOf", com.badlogic.gdx.math.Plane.PlaneSide.class, com.badlogic.gdx.math.Plane.PlaneSide.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 1730),
  };
  t.enumConstants = new Object[3];
  t.enumConstants[0] = com.badlogic.gdx.math.Plane.PlaneSide.OnPlane;
  t.enumConstants[1] = com.badlogic.gdx.math.Plane.PlaneSide.Back;
  t.enumConstants[2] = com.badlogic.gdx.math.Plane.PlaneSide.Front;
  types.put("com.badlogic.gdx.math.Plane.PlaneSide", t);
  }
  private void c93() {
  Type t = new Type("com.badlogic.gdx.math.Plane.PlaneSide[]", 1731, com.badlogic.gdx.math.Plane.PlaneSide[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Plane.PlaneSide[]", t);
  }
  private void c94() {
  Type t = new Type("com.badlogic.gdx.math.Plane[]", 1732, com.badlogic.gdx.math.Plane[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Plane[]", t);
  }
  private void c95() {
  Type t = new Type("com.badlogic.gdx.math.Polygon", 1733, com.badlogic.gdx.math.Polygon.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("localVertices", com.badlogic.gdx.math.Polygon.class, float[].class, false, false, true, false, false, false, false, false, 1735, 1734, null), 
      new Field("worldVertices", com.badlogic.gdx.math.Polygon.class, float[].class, false, false, true, false, false, false, false, false, 1737, 1736, null), 
      new Field("x", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1739, 1738, null), 
      new Field("y", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1741, 1740, null), 
      new Field("originX", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1743, 1742, null), 
      new Field("originY", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1745, 1744, null), 
      new Field("rotation", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1747, 1746, null), 
      new Field("scaleX", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1749, 1748, null), 
      new Field("scaleY", com.badlogic.gdx.math.Polygon.class, float.class, false, false, true, false, false, false, false, false, 1751, 1750, null), 
      new Field("dirty", com.badlogic.gdx.math.Polygon.class, boolean.class, false, false, true, false, false, false, false, false, 1753, 1752, null), 
      new Field("bounds", com.badlogic.gdx.math.Polygon.class, com.badlogic.gdx.math.Rectangle.class, false, false, true, false, false, false, false, false, 1755, 1754, null), 
  };
  t.methods = new Method[] {
      new Method("getVertices", com.badlogic.gdx.math.Polygon.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1756),
      new Method("getTransformedVertices", com.badlogic.gdx.math.Polygon.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1757),
      new Method("setOrigin", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {originX__F, originY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1758),
      new Method("setPosition", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1759),
      new Method("setVertices", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {vertices___F, }, false, false, false, false, false, false, true, false, false, true, false, 1760),
      new Method("translate", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1761),
      new Method("setRotation", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1762),
      new Method("rotate", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1763),
      new Method("setScale", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1764),
      new Method("scale", com.badlogic.gdx.math.Polygon.class, void.class, new Parameter[] {amount__F, }, false, false, false, false, false, false, true, false, false, true, false, 1765),
      new Method("dirty", com.badlogic.gdx.math.Polygon.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1766),
      new Method("area", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1767),
      new Method("getBoundingRectangle", com.badlogic.gdx.math.Polygon.class, com.badlogic.gdx.math.Rectangle.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1768),
      new Method("contains", com.badlogic.gdx.math.Polygon.class, boolean.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1769),
      new Method("getX", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1770),
      new Method("getY", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1771),
      new Method("getOriginX", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1772),
      new Method("getOriginY", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1773),
      new Method("getRotation", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1774),
      new Method("getScaleX", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1775),
      new Method("getScaleY", com.badlogic.gdx.math.Polygon.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1776),
  };
  t.constructors = new Constructor[] {
      new Constructor("Polygon", com.badlogic.gdx.math.Polygon.class, com.badlogic.gdx.math.Polygon.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1777),
      new Constructor("Polygon", com.badlogic.gdx.math.Polygon.class, com.badlogic.gdx.math.Polygon.class, new Parameter[] {vertices___F, }, false, false, false, false, false, false, true, false, false, false, true, 1778),
  };
  types.put("com.badlogic.gdx.math.Polygon", t);
  }
  private void c96() {
  Type t = new Type("com.badlogic.gdx.math.Polyline", 1779, com.badlogic.gdx.math.Polyline.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("localVertices", com.badlogic.gdx.math.Polyline.class, float[].class, true, false, true, false, false, false, false, false, 1781, 1780, null), 
      new Field("worldVertices", com.badlogic.gdx.math.Polyline.class, float[].class, false, false, true, false, false, false, false, false, 1783, 1782, null), 
      new Field("x", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1785, 1784, null), 
      new Field("y", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1787, 1786, null), 
      new Field("originX", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1789, 1788, null), 
      new Field("originY", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1791, 1790, null), 
      new Field("rotation", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1793, 1792, null), 
      new Field("scaleX", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1795, 1794, null), 
      new Field("scaleY", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1797, 1796, null), 
      new Field("length", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1799, 1798, null), 
      new Field("scaledLength", com.badlogic.gdx.math.Polyline.class, float.class, false, false, true, false, false, false, false, false, 1801, 1800, null), 
      new Field("calculateScaledLength", com.badlogic.gdx.math.Polyline.class, boolean.class, false, false, true, false, false, false, false, false, 1803, 1802, null), 
      new Field("calculateLength", com.badlogic.gdx.math.Polyline.class, boolean.class, false, false, true, false, false, false, false, false, 1805, 1804, null), 
      new Field("dirty", com.badlogic.gdx.math.Polyline.class, boolean.class, false, false, true, false, false, false, false, false, 1807, 1806, null), 
  };
  t.methods = new Method[] {
      new Method("getVertices", com.badlogic.gdx.math.Polyline.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1808),
      new Method("getTransformedVertices", com.badlogic.gdx.math.Polyline.class, float[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1809),
      new Method("getLength", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1810),
      new Method("getScaledLength", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1811),
      new Method("getX", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1812),
      new Method("getY", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1813),
      new Method("getOriginX", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1814),
      new Method("getOriginY", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1815),
      new Method("getRotation", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1816),
      new Method("getScaleX", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1817),
      new Method("getScaleY", com.badlogic.gdx.math.Polyline.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1818),
      new Method("setOrigin", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {originX__F, originY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1819),
      new Method("setPosition", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1820),
      new Method("setRotation", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1821),
      new Method("rotate", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1822),
      new Method("setScale", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1823),
      new Method("scale", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {amount__F, }, false, false, false, false, false, false, true, false, false, true, false, 1824),
      new Method("calculateLength", com.badlogic.gdx.math.Polyline.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1825),
      new Method("calculateScaledLength", com.badlogic.gdx.math.Polyline.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1826),
      new Method("dirty", com.badlogic.gdx.math.Polyline.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1827),
      new Method("translate", com.badlogic.gdx.math.Polyline.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1828),
  };
  t.constructors = new Constructor[] {
      new Constructor("Polyline", com.badlogic.gdx.math.Polyline.class, com.badlogic.gdx.math.Polyline.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1829),
      new Constructor("Polyline", com.badlogic.gdx.math.Polyline.class, com.badlogic.gdx.math.Polyline.class, new Parameter[] {vertices___F, }, false, false, false, false, false, false, true, false, false, false, true, 1830),
  };
  types.put("com.badlogic.gdx.math.Polyline", t);
  }
  private void c97() {
  Type t = new Type("com.badlogic.gdx.math.Quaternion", 1831, com.badlogic.gdx.math.Quaternion.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Quaternion.class, long.class, true, false, true, false, false, true, false, false, 1833, 1832, null), 
      new Field("NORMALIZATION_TOLERANCE", com.badlogic.gdx.math.Quaternion.class, float.class, true, false, true, false, false, true, false, false, 1835, 1834, null), 
      new Field("tmp1", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, false, false, true, false, false, true, false, false, 1837, 1836, null), 
      new Field("tmp2", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, false, false, true, false, false, true, false, false, 1839, 1838, null), 
      new Field("x", com.badlogic.gdx.math.Quaternion.class, float.class, false, false, false, false, true, false, false, false, 1841, 1840, null), 
      new Field("y", com.badlogic.gdx.math.Quaternion.class, float.class, false, false, false, false, true, false, false, false, 1843, 1842, null), 
      new Field("z", com.badlogic.gdx.math.Quaternion.class, float.class, false, false, false, false, true, false, false, false, 1845, 1844, null), 
      new Field("w", com.badlogic.gdx.math.Quaternion.class, float.class, false, false, false, false, true, false, false, false, 1847, 1846, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {x__F, y__F, z__F, w__F, }, false, false, false, false, false, false, true, false, false, true, false, 1848),
      new Method("set", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {quaternion__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1849),
      new Method("set", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, angle__F, }, false, false, false, false, false, false, true, false, false, true, false, 1850),
      new Method("cpy", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1851),
      new Method("len", com.badlogic.gdx.math.Quaternion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1852),
      new Method("toString", com.badlogic.gdx.math.Quaternion.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1853),
      new Method("setEulerAngles", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {yaw__F, pitch__F, roll__F, }, false, false, false, false, false, false, true, false, false, true, false, 1854),
      new Method("setEulerAnglesRad", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {yaw__F, pitch__F, roll__F, }, false, false, false, false, false, false, true, false, false, true, false, 1855),
      new Method("len2", com.badlogic.gdx.math.Quaternion.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1856),
      new Method("nor", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1857),
      new Method("conjugate", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1858),
      new Method("transform", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1859),
      new Method("mul", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {q__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1860),
      new Method("mul", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {scalar__F, }, false, false, false, false, false, false, true, false, false, true, false, 1861),
      new Method("mulLeft", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {q__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1862),
      new Method("toMatrix", com.badlogic.gdx.math.Quaternion.class, void.class, new Parameter[] {matrix___F, }, false, false, false, false, false, false, true, false, false, true, false, 1863),
      new Method("idt", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1864),
      new Method("setFromAxis", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1865),
      new Method("setFromAxis", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {x__F, y__F, z__F, degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1866),
      new Method("setFromAxisRad", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1867),
      new Method("setFromAxisRad", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {x__F, y__F, z__F, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1868),
      new Method("setFromMatrix", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {normalizeAxes__Z, matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1869),
      new Method("setFromMatrix", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 1870),
      new Method("setFromMatrix", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {normalizeAxes__Z, matrix__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1871),
      new Method("setFromMatrix", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1872),
      new Method("setFromAxes", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {xx__F, xy__F, xz__F, yx__F, yy__F, yz__F, zx__F, zy__F, zz__F, }, false, false, false, false, false, false, true, false, false, true, false, 1873),
      new Method("setFromAxes", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {s__Z, s__F, s__F, s__F, w__F, w__F, z__F, z__F, y__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1874),
      new Method("setFromCross", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {v1__Lcom_badlogic_gdx_math_Vector3_, v2__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1875),
      new Method("setFromCross", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {x1__F, y1__F, z1__F, x2__F, y2__F, z2__F, }, false, false, false, false, false, false, true, false, false, true, false, 1876),
      new Method("slerp", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {end__Lcom_badlogic_gdx_math_Quaternion_, alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 1877),
      new Method("equals", com.badlogic.gdx.math.Quaternion.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 1878),
      new Method("dot", com.badlogic.gdx.math.Quaternion.class, float.class, new Parameter[] {other__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 1879),
      new Method("getAxisAngle", com.badlogic.gdx.math.Quaternion.class, float.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1880),
      new Method("getAxisAngleRad", com.badlogic.gdx.math.Quaternion.class, float.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 1881),
  };
  t.constructors = new Constructor[] {
      new Constructor("Quaternion", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {x__F, y__F, z__F, w__F, }, false, false, false, false, false, false, true, false, false, false, true, 1882),
      new Constructor("Quaternion", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1883),
      new Constructor("Quaternion", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {quaternion__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, false, true, 1884),
      new Constructor("Quaternion", com.badlogic.gdx.math.Quaternion.class, com.badlogic.gdx.math.Quaternion.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, angle__F, }, false, false, false, false, false, false, true, false, false, false, true, 1885),
  };
  types.put("com.badlogic.gdx.math.Quaternion", t);
  }
  private void c98() {
  Type t = new Type("com.badlogic.gdx.math.Rectangle", 1886, com.badlogic.gdx.math.Rectangle.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tmp", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, true, false, false, false, true, true, false, false, 1888, 1887, null), 
      new Field("tmp2", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, true, false, false, false, true, true, false, false, 1890, 1889, null), 
      new Field("serialVersionUID", com.badlogic.gdx.math.Rectangle.class, long.class, true, false, true, false, false, true, false, false, 1892, 1891, null), 
      new Field("x", com.badlogic.gdx.math.Rectangle.class, float.class, false, false, false, false, true, false, false, false, 1894, 1893, null), 
      new Field("y", com.badlogic.gdx.math.Rectangle.class, float.class, false, false, false, false, true, false, false, false, 1896, 1895, null), 
      new Field("width", com.badlogic.gdx.math.Rectangle.class, float.class, false, false, false, false, true, false, false, false, 1898, 1897, null), 
      new Field("height", com.badlogic.gdx.math.Rectangle.class, float.class, false, false, false, false, true, false, false, false, 1900, 1899, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1901),
      new Method("set", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1902),
      new Method("getX", com.badlogic.gdx.math.Rectangle.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1903),
      new Method("setX", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 1904),
      new Method("getY", com.badlogic.gdx.math.Rectangle.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1905),
      new Method("setY", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1906),
      new Method("getWidth", com.badlogic.gdx.math.Rectangle.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1907),
      new Method("setWidth", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {width__F, }, false, false, false, false, false, false, true, false, false, true, false, 1908),
      new Method("getHeight", com.badlogic.gdx.math.Rectangle.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1909),
      new Method("setHeight", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1910),
      new Method("getPosition", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1911),
      new Method("setPosition", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1912),
      new Method("setPosition", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1913),
      new Method("setSize", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 1914),
      new Method("setSize", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {sizeXY__F, }, false, false, false, false, false, false, true, false, false, true, false, 1915),
      new Method("getSize", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {size__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1916),
      new Method("contains", com.badlogic.gdx.math.Rectangle.class, boolean.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1917),
      new Method("contains", com.badlogic.gdx.math.Rectangle.class, boolean.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1918),
      new Method("contains", com.badlogic.gdx.math.Rectangle.class, boolean.class, new Parameter[] {rectangle__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1919),
      new Method("overlaps", com.badlogic.gdx.math.Rectangle.class, boolean.class, new Parameter[] {r__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1920),
      new Method("merge", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1921),
      new Method("getAspectRatio", com.badlogic.gdx.math.Rectangle.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1922),
      new Method("getCenter", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1923),
      new Method("setCenter", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1924),
      new Method("setCenter", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {position__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1925),
      new Method("fitOutside", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1926),
      new Method("fitInside", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 1927),
      new Method("toString", com.badlogic.gdx.math.Rectangle.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1928),
  };
  t.constructors = new Constructor[] {
      new Constructor("Rectangle", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1929),
      new Constructor("Rectangle", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, false, true, 1930),
      new Constructor("Rectangle", com.badlogic.gdx.math.Rectangle.class, com.badlogic.gdx.math.Rectangle.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, false, true, 1931),
  };
  types.put("com.badlogic.gdx.math.Rectangle", t);
  }
  private void c99() {
  Type t = new Type("com.badlogic.gdx.math.Vector", 1932, com.badlogic.gdx.math.Vector.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Vector", t);
  }
  private void c100() {
  Type t = new Type("com.badlogic.gdx.math.Vector2", 1933, com.badlogic.gdx.math.Vector2.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class, com.badlogic.gdx.math.Vector.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Vector2.class, long.class, true, false, true, false, false, true, false, false, 1935, 1934, null), 
      new Field("X", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, true, false, false, false, true, true, false, false, 1937, 1936, null), 
      new Field("Y", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, true, false, false, false, true, true, false, false, 1939, 1938, null), 
      new Field("Zero", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, true, false, false, false, true, true, false, false, 1941, 1940, null), 
      new Field("x", com.badlogic.gdx.math.Vector2.class, float.class, false, false, false, false, true, false, false, false, 1943, 1942, null), 
      new Field("y", com.badlogic.gdx.math.Vector2.class, float.class, false, false, false, false, true, false, false, false, 1945, 1944, null), 
  };
  t.methods = new Method[] {
      new Method("cpy", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1946),
      new Method("len", com.badlogic.gdx.math.Vector2.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1947),
      new Method("len2", com.badlogic.gdx.math.Vector2.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1948),
      new Method("set", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1949),
      new Method("set", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1950),
      new Method("sub", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1951),
      new Method("sub", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1952),
      new Method("nor", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1953),
      new Method("add", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1954),
      new Method("add", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1955),
      new Method("dot", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1956),
      new Method("scl", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {scalar__F, }, false, false, false, false, false, false, true, false, false, true, false, 1957),
      new Method("scl", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1958),
      new Method("scl", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1959),
      new Method("mul", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {scalar__F, }, false, false, false, false, false, false, true, false, false, true, false, 1960),
      new Method("mul", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1961),
      new Method("mul", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1962),
      new Method("mul", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {mat__Lcom_badlogic_gdx_math_Matrix3_, }, false, false, false, false, false, false, true, false, false, true, false, 1963),
      new Method("div", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 1964),
      new Method("div", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {vx__F, vy__F, }, false, false, false, false, false, false, true, false, false, true, false, 1965),
      new Method("div", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {other__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1966),
      new Method("dst", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1967),
      new Method("dst", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1968),
      new Method("dst2", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1969),
      new Method("dst2", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1970),
      new Method("limit", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {limit__F, }, false, false, false, false, false, false, true, false, false, true, false, 1971),
      new Method("clamp", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {min__F, max__F, }, false, false, false, false, false, false, true, false, false, true, false, 1972),
      new Method("toString", com.badlogic.gdx.math.Vector2.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1973),
      new Method("crs", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 1974),
      new Method("crs", com.badlogic.gdx.math.Vector2.class, float.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 1975),
      new Method("angle", com.badlogic.gdx.math.Vector2.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1976),
      new Method("getAngleRad", com.badlogic.gdx.math.Vector2.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1977),
      new Method("setAngle", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1978),
      new Method("setAngleRad", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1979),
      new Method("rotate", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 1980),
      new Method("rotateRad", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 1981),
      new Method("rotate90", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {dir__I, }, false, false, false, false, false, false, true, false, false, true, false, 1982),
      new Method("lerp", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {target__Lcom_badlogic_gdx_math_Vector2_, alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 1983),
      new Method("hashCode", com.badlogic.gdx.math.Vector2.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1984),
      new Method("equals", com.badlogic.gdx.math.Vector2.class, boolean.class, new Parameter[] {obj__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 1985),
      new Method("epsilonEquals", com.badlogic.gdx.math.Vector2.class, boolean.class, new Parameter[] {obj__Lcom_badlogic_gdx_math_Vector2_, epsilon__F, }, false, false, false, false, false, false, true, false, false, true, false, 1986),
      new Method("epsilonEquals", com.badlogic.gdx.math.Vector2.class, boolean.class, new Parameter[] {x__F, y__F, epsilon__F, }, false, false, false, false, false, false, true, false, false, true, false, 1987),
      new Method("isUnit", com.badlogic.gdx.math.Vector2.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1988),
      new Method("isUnit", com.badlogic.gdx.math.Vector2.class, boolean.class, new Parameter[] {margin__F, }, false, false, false, false, false, false, true, false, false, true, false, 1989),
      new Method("isZero", com.badlogic.gdx.math.Vector2.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 1990),
      new Method("isZero", com.badlogic.gdx.math.Vector2.class, boolean.class, new Parameter[] {margin__F, }, false, false, false, false, false, false, true, false, false, true, false, 1991),
  };
  t.constructors = new Constructor[] {
      new Constructor("Vector2", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 1992),
      new Constructor("Vector2", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, false, true, 1993),
      new Constructor("Vector2", com.badlogic.gdx.math.Vector2.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, false, true, 1994),
  };
  types.put("com.badlogic.gdx.math.Vector2", t);
  }
  private void c101() {
  Type t = new Type("com.badlogic.gdx.math.Vector3", 1995, com.badlogic.gdx.math.Vector3.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class, com.badlogic.gdx.math.Vector.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.Vector3.class, long.class, true, false, true, false, false, true, false, false, 1997, 1996, null), 
      new Field("x", com.badlogic.gdx.math.Vector3.class, float.class, false, false, false, false, true, false, false, false, 1999, 1998, null), 
      new Field("y", com.badlogic.gdx.math.Vector3.class, float.class, false, false, false, false, true, false, false, false, 2001, 2000, null), 
      new Field("z", com.badlogic.gdx.math.Vector3.class, float.class, false, false, false, false, true, false, false, false, 2003, 2002, null), 
      new Field("tmp", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2005, 2004, null), 
      new Field("tmp2", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2007, 2006, null), 
      new Field("tmp3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2009, 2008, null), 
      new Field("X", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2011, 2010, null), 
      new Field("Y", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2013, 2012, null), 
      new Field("Z", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2015, 2014, null), 
      new Field("Zero", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, true, false, false, 2017, 2016, null), 
      new Field("tmpMat", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Matrix4.class, true, false, true, false, false, true, false, false, 2019, 2018, null), 
  };
  t.methods = new Method[] {
      new Method("set", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2020),
      new Method("set", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2021),
      new Method("set", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, true, false, 2022),
      new Method("set", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector2_, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2023),
      new Method("cpy", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2024),
      new Method("tmp", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2025),
      new Method("tmp2", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2026),
      new Method("tmp3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, true, false, false, false, false, false, true, false, 2027),
      new Method("add", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2028),
      new Method("add", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2029),
      new Method("add", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {values__F, }, false, false, false, false, false, false, true, false, false, true, false, 2030),
      new Method("sub", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {a_vec__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2031),
      new Method("sub", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2032),
      new Method("sub", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2033),
      new Method("scl", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2034),
      new Method("scl", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {other__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2035),
      new Method("scl", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vx__F, vy__F, vz__F, }, false, false, false, false, false, false, true, false, false, true, false, 2036),
      new Method("mul", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2037),
      new Method("mul", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {other__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2038),
      new Method("mul", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vx__F, vy__F, vz__F, }, false, false, false, false, false, false, true, false, false, true, false, 2039),
      new Method("mul", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2040),
      new Method("mul", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {quat__Lcom_badlogic_gdx_math_Quaternion_, }, false, false, false, false, false, false, true, false, false, true, false, 2041),
      new Method("scale", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {scalarX__F, scalarY__F, scalarZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 2042),
      new Method("div", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2043),
      new Method("div", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vx__F, vy__F, vz__F, }, false, false, false, false, false, false, true, false, false, true, false, 2044),
      new Method("div", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {other__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2045),
      new Method("len", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x__F, y__F, z__F, }, false, false, true, false, false, false, true, false, false, true, false, 2046),
      new Method("len", com.badlogic.gdx.math.Vector3.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2047),
      new Method("len2", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x__F, y__F, z__F, }, false, false, true, false, false, false, true, false, false, true, false, 2048),
      new Method("len2", com.badlogic.gdx.math.Vector3.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2049),
      new Method("idt", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2050),
      new Method("dst", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x1__F, y1__F, z1__F, x2__F, y2__F, z2__F, }, false, false, true, false, false, false, true, false, false, true, false, 2051),
      new Method("dst", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2052),
      new Method("dst", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2053),
      new Method("dst2", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x1__F, y1__F, z1__F, x2__F, y2__F, z2__F, }, false, false, true, false, false, false, true, false, false, true, false, 2054),
      new Method("dst2", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2055),
      new Method("dst2", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2056),
      new Method("nor", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2057),
      new Method("dot", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x1__F, y1__F, z1__F, x2__F, y2__F, z2__F, }, false, false, true, false, false, false, true, false, false, true, false, 2058),
      new Method("dot", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2059),
      new Method("dot", com.badlogic.gdx.math.Vector3.class, float.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2060),
      new Method("crs", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2061),
      new Method("crs", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2062),
      new Method("prj", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2063),
      new Method("rot", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2064),
      new Method("rotate", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {degrees__F, axisX__F, axisY__F, axisZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 2065),
      new Method("rotate", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 2066),
      new Method("rotateRad", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {radians__F, axisX__F, axisY__F, axisZ__F, }, false, false, false, false, false, false, true, false, false, true, false, 2067),
      new Method("rotateRad", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {axis__Lcom_badlogic_gdx_math_Vector3_, radians__F, }, false, false, false, false, false, false, true, false, false, true, false, 2068),
      new Method("isUnit", com.badlogic.gdx.math.Vector3.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2069),
      new Method("isUnit", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {margin__F, }, false, false, false, false, false, false, true, false, false, true, false, 2070),
      new Method("isZero", com.badlogic.gdx.math.Vector3.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2071),
      new Method("isZero", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {margin__F, }, false, false, false, false, false, false, true, false, false, true, false, 2072),
      new Method("lerp", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {target__Lcom_badlogic_gdx_math_Vector3_, alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 2073),
      new Method("slerp", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {target__Lcom_badlogic_gdx_math_Vector3_, alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 2074),
      new Method("toString", com.badlogic.gdx.math.Vector3.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2075),
      new Method("limit", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {limit__F, }, false, false, false, false, false, false, true, false, false, true, false, 2076),
      new Method("clamp", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {min__F, max__F, }, false, false, false, false, false, false, true, false, false, true, false, 2077),
      new Method("hashCode", com.badlogic.gdx.math.Vector3.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2078),
      new Method("equals", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {obj__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 2079),
      new Method("epsilonEquals", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {obj__Lcom_badlogic_gdx_math_Vector3_, epsilon__F, }, false, false, false, false, false, false, true, false, false, true, false, 2080),
      new Method("epsilonEquals", com.badlogic.gdx.math.Vector3.class, boolean.class, new Parameter[] {x__F, y__F, z__F, epsilon__F, }, false, false, false, false, false, false, true, false, false, true, false, 2081),
  };
  t.constructors = new Constructor[] {
      new Constructor("Vector3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2082),
      new Constructor("Vector3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, false, true, 2083),
      new Constructor("Vector3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 2084),
      new Constructor("Vector3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {values___F, }, false, false, false, false, false, false, true, false, false, false, true, 2085),
      new Constructor("Vector3", com.badlogic.gdx.math.Vector3.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {vector__Lcom_badlogic_gdx_math_Vector2_, z__F, }, false, false, false, false, false, false, true, false, false, false, true, 2086),
  };
  types.put("com.badlogic.gdx.math.Vector3", t);
  }
  private void c102() {
  Type t = new Type("com.badlogic.gdx.math.Vector3[]", 2087, com.badlogic.gdx.math.Vector3[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Vector3[]", t);
  }
  private void c103() {
  Type t = new Type("com.badlogic.gdx.math.Vector[]", 2088, com.badlogic.gdx.math.Vector[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.math.Vector[]", t);
  }
  private void c104() {
  Type t = new Type("com.badlogic.gdx.math.WindowedMean", 2089, com.badlogic.gdx.math.WindowedMean.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("values", com.badlogic.gdx.math.WindowedMean.class, float[].class, false, true, false, false, false, false, false, false, 2091, 2090, null), 
      new Field("added_values", com.badlogic.gdx.math.WindowedMean.class, int.class, false, true, false, false, false, false, false, false, 2093, 2092, null), 
      new Field("last_value", com.badlogic.gdx.math.WindowedMean.class, int.class, false, true, false, false, false, false, false, false, 2095, 2094, null), 
      new Field("mean", com.badlogic.gdx.math.WindowedMean.class, float.class, false, true, false, false, false, false, false, false, 2097, 2096, null), 
      new Field("dirty", com.badlogic.gdx.math.WindowedMean.class, boolean.class, false, true, false, false, false, false, false, false, 2099, 2098, null), 
  };
  t.methods = new Method[] {
      new Method("hasEnoughData", com.badlogic.gdx.math.WindowedMean.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2100),
      new Method("clear", com.badlogic.gdx.math.WindowedMean.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2101),
      new Method("addValue", com.badlogic.gdx.math.WindowedMean.class, void.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2102),
      new Method("getMean", com.badlogic.gdx.math.WindowedMean.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2103),
      new Method("getOldest", com.badlogic.gdx.math.WindowedMean.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2104),
      new Method("getLatest", com.badlogic.gdx.math.WindowedMean.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2105),
      new Method("standardDeviation", com.badlogic.gdx.math.WindowedMean.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2106),
  };
  t.constructors = new Constructor[] {
      new Constructor("WindowedMean", com.badlogic.gdx.math.WindowedMean.class, com.badlogic.gdx.math.WindowedMean.class, new Parameter[] {window_size__I, }, false, false, false, false, false, false, true, false, false, false, true, 2107),
  };
  types.put("com.badlogic.gdx.math.WindowedMean", t);
  }
  private void c105() {
  Type t = new Type("com.badlogic.gdx.math.collision.BoundingBox", 2108, com.badlogic.gdx.math.collision.BoundingBox.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.collision.BoundingBox.class, long.class, true, false, true, false, false, true, false, false, 2110, 2109, null), 
      new Field("crn", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3[].class, true, true, false, false, false, false, false, false, 2112, 2111, null), 
      new Field("min", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2114, 2113, null), 
      new Field("max", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2116, 2115, null), 
      new Field("cnt", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, false, false, false, 2118, 2117, null), 
      new Field("dim", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, true, true, false, false, false, false, false, false, 2120, 2119, null), 
      new Field("crn_dirty", com.badlogic.gdx.math.collision.BoundingBox.class, boolean.class, false, true, false, false, false, false, false, false, 2122, 2121, null), 
  };
  t.methods = new Method[] {
      new Method("getCenter", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2123),
      new Method("updateCorners", com.badlogic.gdx.math.collision.BoundingBox.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2124),
      new Method("getCorners", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2125),
      new Method("getDimensions", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2126),
      new Method("getMin", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2127),
      new Method("getMax", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.Vector3.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2128),
      new Method("set", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 2129),
      new Method("set", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {minimum__Lcom_badlogic_gdx_math_Vector3_, maximum__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2130),
      new Method("set", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {points___Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2131),
      new Method("set", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {points__Ljava_util_List_, }, false, false, false, false, false, false, true, false, false, true, false, 2132),
      new Method("inf", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2133),
      new Method("ext", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {point__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2134),
      new Method("ext", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {a_bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 2135),
      new Method("ext", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_, transform__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2136),
      new Method("ext", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {x__F, y__F, z__F, }, false, false, false, false, false, false, true, false, false, true, false, 2137),
      new Method("clr", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2138),
      new Method("isValid", com.badlogic.gdx.math.collision.BoundingBox.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2139),
      new Method("mul", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2140),
      new Method("contains", com.badlogic.gdx.math.collision.BoundingBox.class, boolean.class, new Parameter[] {b__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 2141),
      new Method("contains", com.badlogic.gdx.math.collision.BoundingBox.class, boolean.class, new Parameter[] {v__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2142),
      new Method("intersects", com.badlogic.gdx.math.collision.BoundingBox.class, boolean.class, new Parameter[] {b__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, true, false, 2143),
      new Method("toString", com.badlogic.gdx.math.collision.BoundingBox.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2144),
      new Method("min", com.badlogic.gdx.math.collision.BoundingBox.class, float.class, new Parameter[] {a__F, b__F, }, false, false, true, true, false, false, false, false, false, true, false, 2145),
      new Method("max", com.badlogic.gdx.math.collision.BoundingBox.class, float.class, new Parameter[] {a__F, b__F, }, false, false, true, true, false, false, false, false, false, true, false, 2146),
  };
  t.constructors = new Constructor[] {
      new Constructor("BoundingBox", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2147),
      new Constructor("BoundingBox", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_, }, false, false, false, false, false, false, true, false, false, false, true, 2148),
      new Constructor("BoundingBox", com.badlogic.gdx.math.collision.BoundingBox.class, com.badlogic.gdx.math.collision.BoundingBox.class, new Parameter[] {minimum__Lcom_badlogic_gdx_math_Vector3_, maximum__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 2149),
  };
  types.put("com.badlogic.gdx.math.collision.BoundingBox", t);
  }
  private void c106() {
  Type t = new Type("com.badlogic.gdx.math.collision.Ray", 2150, com.badlogic.gdx.math.collision.Ray.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.collision.Ray.class, long.class, true, false, true, false, false, true, false, false, 2152, 2151, null), 
      new Field("origin", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2154, 2153, null), 
      new Field("direction", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2156, 2155, null), 
      new Field("tmp", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 2158, 2157, null), 
  };
  t.methods = new Method[] {
      new Method("cpy", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2159),
      new Method("getEndPoint", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {distance__F, }, false, false, false, false, false, false, true, false, false, true, false, 2160),
      new Method("getEndPoint", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.Vector3.class, new Parameter[] {out__Lcom_badlogic_gdx_math_Vector3_, distance__F, }, false, false, false, false, false, false, true, false, false, true, false, 2161),
      new Method("mul", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, new Parameter[] {matrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2162),
      new Method("toString", com.badlogic.gdx.math.collision.Ray.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2163),
      new Method("set", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, new Parameter[] {origin__Lcom_badlogic_gdx_math_Vector3_, direction__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, true, false, 2164),
      new Method("set", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, new Parameter[] {x__F, y__F, z__F, dx__F, dy__F, dz__F, }, false, false, false, false, false, false, true, false, false, true, false, 2165),
      new Method("set", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, new Parameter[] {ray__Lcom_badlogic_gdx_math_collision_Ray_, }, false, false, false, false, false, false, true, false, false, true, false, 2166),
  };
  t.constructors = new Constructor[] {
      new Constructor("Ray", com.badlogic.gdx.math.collision.Ray.class, com.badlogic.gdx.math.collision.Ray.class, new Parameter[] {origin__Lcom_badlogic_gdx_math_Vector3_, direction__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 2167),
  };
  types.put("com.badlogic.gdx.math.collision.Ray", t);
  }
  private void c107() {
  Type t = new Type("com.badlogic.gdx.math.collision.Segment", 2168, com.badlogic.gdx.math.collision.Segment.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.collision.Segment.class, long.class, true, false, true, false, false, true, false, false, 2170, 2169, null), 
      new Field("a", com.badlogic.gdx.math.collision.Segment.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2172, 2171, null), 
      new Field("b", com.badlogic.gdx.math.collision.Segment.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2174, 2173, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("Segment", com.badlogic.gdx.math.collision.Segment.class, com.badlogic.gdx.math.collision.Segment.class, new Parameter[] {a__Lcom_badlogic_gdx_math_Vector3_, b__Lcom_badlogic_gdx_math_Vector3_, }, false, false, false, false, false, false, true, false, false, false, true, 2175),
      new Constructor("Segment", com.badlogic.gdx.math.collision.Segment.class, com.badlogic.gdx.math.collision.Segment.class, new Parameter[] {aX__F, aY__F, aZ__F, bX__F, bY__F, bZ__F, }, false, false, false, false, false, false, true, false, false, false, true, 2176),
  };
  types.put("com.badlogic.gdx.math.collision.Segment", t);
  }
  private void c108() {
  Type t = new Type("com.badlogic.gdx.math.collision.Sphere", 2177, com.badlogic.gdx.math.collision.Sphere.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("serialVersionUID", com.badlogic.gdx.math.collision.Sphere.class, long.class, true, false, true, false, false, true, false, false, 2179, 2178, null), 
      new Field("radius", com.badlogic.gdx.math.collision.Sphere.class, float.class, false, false, false, false, true, false, false, false, 2181, 2180, null), 
      new Field("center", com.badlogic.gdx.math.collision.Sphere.class, com.badlogic.gdx.math.Vector3.class, true, false, false, false, true, false, false, false, 2183, 2182, null), 
  };
  t.methods = new Method[] {
      new Method("overlaps", com.badlogic.gdx.math.collision.Sphere.class, boolean.class, new Parameter[] {sphere__Lcom_badlogic_gdx_math_collision_Sphere_, }, false, false, false, false, false, false, true, false, false, true, false, 2184),
  };
  t.constructors = new Constructor[] {
      new Constructor("Sphere", com.badlogic.gdx.math.collision.Sphere.class, com.badlogic.gdx.math.collision.Sphere.class, new Parameter[] {center__Lcom_badlogic_gdx_math_Vector3_, radius__F, }, false, false, false, false, false, false, true, false, false, false, true, 2185),
  };
  types.put("com.badlogic.gdx.math.collision.Sphere", t);
  }
  private void c109() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Action", 2186, com.badlogic.gdx.scenes.scene2d.Action.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("actor", com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, false, true, false, false, false, false, 2188, 2187, null), 
      new Field("pool", com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.class, false, false, true, false, false, false, false, false, 2190, 2189, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.Action.class, boolean.class, new Parameter[] {delta__F, }, true, false, false, false, false, false, true, true, false, true, false, 2191),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.Action.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2192),
      new Method("getActor", com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2193),
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.Action.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2194),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.Action.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2195),
      new Method("getPool", com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2196),
      new Method("setPool", com.badlogic.gdx.scenes.scene2d.Action.class, void.class, new Parameter[] {pool__Lcom_badlogic_gdx_utils_Pool_, }, false, false, false, false, false, false, true, false, false, true, false, 2197),
      new Method("toString", com.badlogic.gdx.scenes.scene2d.Action.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2198),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Action", t);
  }
  private void c110() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Action[]", 2199, com.badlogic.gdx.scenes.scene2d.Action[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.Action[]", t);
  }
  private void c111() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Actor", 2200, com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("stage", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Stage.class, false, false, true, false, false, false, false, false, 2202, 2201, null), 
      new Field("parent", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Group.class, false, false, true, false, false, false, false, false, 2204, 2203, null), 
      new Field("listeners", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.DelayedRemovalArray.class, true, false, true, false, false, false, false, false, 2206, 2205, new Class[] {com.badlogic.gdx.scenes.scene2d.EventListener.class, }), 
      new Field("captureListeners", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.DelayedRemovalArray.class, true, false, true, false, false, false, false, false, 2208, 2207, new Class[] {com.badlogic.gdx.scenes.scene2d.EventListener.class, }), 
      new Field("actions", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.Array.class, true, false, true, false, false, false, false, false, 2210, 2209, new Class[] {com.badlogic.gdx.scenes.scene2d.Action.class, }), 
      new Field("name", com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.String.class, false, false, true, false, false, false, false, false, 2212, 2211, null), 
      new Field("touchable", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, false, false, true, false, false, false, false, false, 2214, 2213, null), 
      new Field("visible", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, false, false, true, false, false, false, false, false, 2216, 2215, null), 
      new Field("x", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2218, 2217, null), 
      new Field("y", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2220, 2219, null), 
      new Field("width", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2222, 2221, null), 
      new Field("height", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2224, 2223, null), 
      new Field("originX", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2226, 2225, null), 
      new Field("originY", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2228, 2227, null), 
      new Field("scaleX", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2230, 2229, null), 
      new Field("scaleY", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2232, 2231, null), 
      new Field("rotation", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, false, true, false, false, false, false, false, false, 2234, 2233, null), 
      new Field("color", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.graphics.Color.class, true, true, false, false, false, false, false, false, 2236, 2235, null), 
      new Field("userObject", com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.Object.class, false, false, true, false, false, false, false, false, 2238, 2237, null), 
  };
  t.methods = new Method[] {
      new Method("draw", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, parentAlpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 2239),
      new Method("act", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2240),
      new Method("fire", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 2241),
      new Method("notify", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_Event_, capture__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2242),
      new Method("hit", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new Parameter[] {x__F, y__F, touchable__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2243),
      new Method("remove", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2244),
      new Method("addListener", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2245),
      new Method("removeListener", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2246),
      new Method("getListeners", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2247),
      new Method("addCaptureListener", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2248),
      new Method("removeCaptureListener", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2249),
      new Method("getCaptureListeners", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2250),
      new Method("addAction", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2251),
      new Method("removeAction", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2252),
      new Method("getActions", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2253),
      new Method("clearActions", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2254),
      new Method("clearListeners", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2255),
      new Method("clear", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2256),
      new Method("getStage", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Stage.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2257),
      new Method("setStage", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {stage__Lcom_badlogic_gdx_scenes_scene2d_Stage_, }, false, false, false, false, false, true, false, false, false, true, false, 2258),
      new Method("isDescendantOf", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2259),
      new Method("isAscendantOf", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2260),
      new Method("hasParent", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2261),
      new Method("getParent", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Group.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2262),
      new Method("setParent", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {parent__Lcom_badlogic_gdx_scenes_scene2d_Group_, }, false, false, false, false, false, true, false, false, false, true, false, 2263),
      new Method("isTouchable", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2264),
      new Method("getTouchable", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2265),
      new Method("setTouchable", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {touchable__Lcom_badlogic_gdx_scenes_scene2d_Touchable_, }, false, false, false, false, false, false, true, false, false, true, false, 2266),
      new Method("isVisible", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2267),
      new Method("setVisible", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {visible__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2268),
      new Method("getUserObject", com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2269),
      new Method("setUserObject", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {userObject__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 2270),
      new Method("getX", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2271),
      new Method("setX", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 2272),
      new Method("getY", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2273),
      new Method("setY", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2274),
      new Method("setPosition", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2275),
      new Method("translate", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2276),
      new Method("getWidth", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2277),
      new Method("setWidth", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {width__F, }, false, false, false, false, false, false, true, false, false, true, false, 2278),
      new Method("getHeight", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2279),
      new Method("setHeight", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2280),
      new Method("getTop", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2281),
      new Method("getRight", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2282),
      new Method("sizeChanged", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2283),
      new Method("setSize", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2284),
      new Method("size", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {size__F, }, false, false, false, false, false, false, true, false, false, true, false, 2285),
      new Method("size", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2286),
      new Method("setBounds", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2287),
      new Method("getOriginX", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2288),
      new Method("setOriginX", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {originX__F, }, false, false, false, false, false, false, true, false, false, true, false, 2289),
      new Method("getOriginY", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2290),
      new Method("setOriginY", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {originY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2291),
      new Method("setOrigin", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {originX__F, originY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2292),
      new Method("getScaleX", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2293),
      new Method("setScaleX", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scaleX__F, }, false, false, false, false, false, false, true, false, false, true, false, 2294),
      new Method("getScaleY", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2295),
      new Method("setScaleY", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2296),
      new Method("setScale", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 2297),
      new Method("setScale", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2298),
      new Method("scale", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 2299),
      new Method("scale", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {scaleX__F, scaleY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2300),
      new Method("getRotation", com.badlogic.gdx.scenes.scene2d.Actor.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2301),
      new Method("setRotation", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {degrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 2302),
      new Method("rotate", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {amountInDegrees__F, }, false, false, false, false, false, false, true, false, false, true, false, 2303),
      new Method("setColor", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 2304),
      new Method("setColor", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {r__F, g__F, b__F, a__F, }, false, false, false, false, false, false, true, false, false, true, false, 2305),
      new Method("getColor", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2306),
      new Method("getName", com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2307),
      new Method("setName", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {name__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 2308),
      new Method("toFront", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2309),
      new Method("toBack", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2310),
      new Method("setZIndex", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 2311),
      new Method("getZIndex", com.badlogic.gdx.scenes.scene2d.Actor.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2312),
      new Method("clipBegin", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2313),
      new Method("clipBegin", com.badlogic.gdx.scenes.scene2d.Actor.class, boolean.class, new Parameter[] {x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2314),
      new Method("clipEnd", com.badlogic.gdx.scenes.scene2d.Actor.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2315),
      new Method("screenToLocalCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {screenCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2316),
      new Method("stageToLocalCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {stageCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2317),
      new Method("localToStageCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {localCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2318),
      new Method("localToParentCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {localCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2319),
      new Method("localToAscendantCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {ascendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_, localCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2320),
      new Method("parentToLocalCoordinates", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {parentCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2321),
      new Method("toString", com.badlogic.gdx.scenes.scene2d.Actor.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2322),
  };
  t.constructors = new Constructor[] {
      new Constructor("Actor", com.badlogic.gdx.scenes.scene2d.Actor.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2323),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Actor", t);
  }
  private void c112() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Actor[]", 2324, com.badlogic.gdx.scenes.scene2d.Actor[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.Actor[]", t);
  }
  private void c113() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Event", 2325, com.badlogic.gdx.scenes.scene2d.Event.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("stage", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Stage.class, false, false, true, false, false, false, false, false, 2327, 2326, null), 
      new Field("targetActor", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2329, 2328, null), 
      new Field("listenerActor", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2331, 2330, null), 
      new Field("capture", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, false, false, true, false, false, false, false, false, 2333, 2332, null), 
      new Field("bubbles", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, false, false, true, false, false, false, false, false, 2335, 2334, null), 
      new Field("handled", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, false, false, true, false, false, false, false, false, 2337, 2336, null), 
      new Field("stopped", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, false, false, true, false, false, false, false, false, 2339, 2338, null), 
      new Field("cancelled", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, false, false, true, false, false, false, false, false, 2341, 2340, null), 
  };
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2342),
      new Method("cancel", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2343),
      new Method("stop", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2344),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2345),
      new Method("getTarget", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2346),
      new Method("setTarget", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, new Parameter[] {targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2347),
      new Method("getListenerActor", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2348),
      new Method("setListenerActor", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, new Parameter[] {listenerActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2349),
      new Method("getBubbles", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2350),
      new Method("setBubbles", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, new Parameter[] {bubbles__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2351),
      new Method("isHandled", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2352),
      new Method("isStopped", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2353),
      new Method("isCancelled", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2354),
      new Method("setCapture", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, new Parameter[] {capture__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2355),
      new Method("isCapture", com.badlogic.gdx.scenes.scene2d.Event.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2356),
      new Method("setStage", com.badlogic.gdx.scenes.scene2d.Event.class, void.class, new Parameter[] {stage__Lcom_badlogic_gdx_scenes_scene2d_Stage_, }, false, false, false, false, false, false, true, false, false, true, false, 2357),
      new Method("getStage", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Stage.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2358),
  };
  t.constructors = new Constructor[] {
      new Constructor("Event", com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.scenes.scene2d.Event.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2359),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Event", t);
  }
  private void c114() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.EventListener", 2360, com.badlogic.gdx.scenes.scene2d.EventListener.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.EventListener", t);
  }
  private void c115() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Group", 2361, com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("children", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.utils.SnapshotArray.class, true, false, true, false, false, false, false, false, 2363, 2362, new Class[] {com.badlogic.gdx.scenes.scene2d.Actor.class, }), 
      new Field("localTransform", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Matrix3.class, true, false, true, false, false, false, false, false, 2365, 2364, null), 
      new Field("worldTransform", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Matrix3.class, true, false, true, false, false, false, false, false, 2367, 2366, null), 
      new Field("batchTransform", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Matrix4.class, true, false, true, false, false, false, false, false, 2369, 2368, null), 
      new Field("oldBatchTransform", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Matrix4.class, true, false, true, false, false, false, false, false, 2371, 2370, null), 
      new Field("transform", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, false, false, true, false, false, false, false, false, 2373, 2372, null), 
      new Field("cullingArea", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Rectangle.class, false, false, true, false, false, false, false, false, 2375, 2374, null), 
      new Field("point", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, false, false, false, 2377, 2376, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2378),
      new Method("draw", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, parentAlpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 2379),
      new Method("drawChildren", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, parentAlpha__F, }, false, false, false, false, false, true, false, false, false, true, false, 2380),
      new Method("applyTransform", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, transform__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, true, false, false, false, true, false, 2381),
      new Method("computeTransform", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Matrix4.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2382),
      new Method("resetTransform", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, }, false, false, false, false, false, true, false, false, false, true, false, 2383),
      new Method("setCullingArea", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {cullingArea__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 2384),
      new Method("hit", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new Parameter[] {x__F, y__F, touchable__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2385),
      new Method("childrenChanged", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2386),
      new Method("addActor", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2387),
      new Method("addActorAt", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {index__I, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2388),
      new Method("addActorBefore", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {actorBefore__Lcom_badlogic_gdx_scenes_scene2d_Actor_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2389),
      new Method("addActorAfter", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {actorAfter__Lcom_badlogic_gdx_scenes_scene2d_Actor_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2390),
      new Method("removeActor", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2391),
      new Method("clearChildren", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2392),
      new Method("clear", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2393),
      new Method("findActor", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new Parameter[] {name__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 2394),
      new Method("setStage", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {stage__Lcom_badlogic_gdx_scenes_scene2d_Stage_, }, false, false, false, false, false, true, false, false, false, true, false, 2395),
      new Method("swapActor", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, new Parameter[] {first__I, second__I, }, false, false, false, false, false, false, true, false, false, true, false, 2396),
      new Method("swapActor", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, new Parameter[] {first__Lcom_badlogic_gdx_scenes_scene2d_Actor_, second__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2397),
      new Method("getChildren", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.utils.SnapshotArray.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2398),
      new Method("hasChildren", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2399),
      new Method("setTransform", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {transform__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2400),
      new Method("isTransform", com.badlogic.gdx.scenes.scene2d.Group.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2401),
      new Method("localToDescendantCoordinates", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {descendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_, localCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2402),
      new Method("print", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2403),
      new Method("print", com.badlogic.gdx.scenes.scene2d.Group.class, void.class, new Parameter[] {indent__Ljava_lang_String_, }, false, false, false, false, true, false, false, false, false, true, false, 2404),
  };
  t.constructors = new Constructor[] {
      new Constructor("Group", com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.Group.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2405),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Group", t);
  }
  private void c116() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.InputEvent", 2406, com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.Event.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("type", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, false, false, true, false, false, false, false, false, 2408, 2407, null), 
      new Field("stageX", com.badlogic.gdx.scenes.scene2d.InputEvent.class, float.class, false, false, true, false, false, false, false, false, 2410, 2409, null), 
      new Field("stageY", com.badlogic.gdx.scenes.scene2d.InputEvent.class, float.class, false, false, true, false, false, false, false, false, 2412, 2411, null), 
      new Field("pointer", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, false, false, true, false, false, false, false, false, 2414, 2413, null), 
      new Field("button", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, false, false, true, false, false, false, false, false, 2416, 2415, null), 
      new Field("keyCode", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, false, false, true, false, false, false, false, false, 2418, 2417, null), 
      new Field("scrollAmount", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, false, false, true, false, false, false, false, false, 2420, 2419, null), 
      new Field("character", com.badlogic.gdx.scenes.scene2d.InputEvent.class, char.class, false, false, true, false, false, false, false, false, 2422, 2421, null), 
      new Field("relatedActor", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2424, 2423, null), 
  };
  t.methods = new Method[] {
      new Method("reset", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2425),
      new Method("getStageX", com.badlogic.gdx.scenes.scene2d.InputEvent.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2426),
      new Method("setStageX", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {stageX__F, }, false, false, false, false, false, false, true, false, false, true, false, 2427),
      new Method("getStageY", com.badlogic.gdx.scenes.scene2d.InputEvent.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2428),
      new Method("setStageY", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {stageY__F, }, false, false, false, false, false, false, true, false, false, true, false, 2429),
      new Method("getType", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2430),
      new Method("setType", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {type__Lcom_badlogic_gdx_scenes_scene2d_InputEvent$Type_, }, false, false, false, false, false, false, true, false, false, true, false, 2431),
      new Method("getPointer", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2432),
      new Method("setPointer", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 2433),
      new Method("getButton", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2434),
      new Method("setButton", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2435),
      new Method("getKeyCode", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2436),
      new Method("setKeyCode", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {keyCode__I, }, false, false, false, false, false, false, true, false, false, true, false, 2437),
      new Method("getCharacter", com.badlogic.gdx.scenes.scene2d.InputEvent.class, char.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2438),
      new Method("setCharacter", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {character__C, }, false, false, false, false, false, false, true, false, false, true, false, 2439),
      new Method("getScrollAmount", com.badlogic.gdx.scenes.scene2d.InputEvent.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2440),
      new Method("setScrollAmount", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {scrollAmount__I, }, false, false, false, false, false, false, true, false, false, true, false, 2441),
      new Method("getRelatedActor", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2442),
      new Method("setRelatedActor", com.badlogic.gdx.scenes.scene2d.InputEvent.class, void.class, new Parameter[] {relatedActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2443),
      new Method("toCoordinates", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, actorCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2444),
      new Method("isTouchFocusCancel", com.badlogic.gdx.scenes.scene2d.InputEvent.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2445),
      new Method("toString", com.badlogic.gdx.scenes.scene2d.InputEvent.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2446),
  };
  t.constructors = new Constructor[] {
      new Constructor("InputEvent", com.badlogic.gdx.scenes.scene2d.InputEvent.class, com.badlogic.gdx.scenes.scene2d.InputEvent.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2447),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.InputEvent", t);
  }
  private void c117() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.InputEvent.Type", 2448, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("touchDown", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2450, 2449, null), 
      new Field("touchUp", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2452, 2451, null), 
      new Field("touchDragged", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2454, 2453, null), 
      new Field("mouseMoved", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2456, 2455, null), 
      new Field("enter", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2458, 2457, null), 
      new Field("exit", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2460, 2459, null), 
      new Field("scrolled", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2462, 2461, null), 
      new Field("keyDown", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2464, 2463, null), 
      new Field("keyUp", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2466, 2465, null), 
      new Field("keyTyped", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, true, false, false, false, true, true, false, false, 2468, 2467, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2469),
      new Method("valueOf", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 2470),
  };
  t.enumConstants = new Object[10];
  t.enumConstants[0] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.touchDown;
  t.enumConstants[1] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.touchUp;
  t.enumConstants[2] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.touchDragged;
  t.enumConstants[3] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.mouseMoved;
  t.enumConstants[4] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.enter;
  t.enumConstants[5] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.exit;
  t.enumConstants[6] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.scrolled;
  t.enumConstants[7] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.keyDown;
  t.enumConstants[8] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.keyUp;
  t.enumConstants[9] = com.badlogic.gdx.scenes.scene2d.InputEvent.Type.keyTyped;
  types.put("com.badlogic.gdx.scenes.scene2d.InputEvent.Type", t);
  }
  private void c118() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.InputEvent.Type[]", 2471, com.badlogic.gdx.scenes.scene2d.InputEvent.Type[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.InputEvent.Type[]", t);
  }
  private void c119() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.InputListener", 2472, com.badlogic.gdx.scenes.scene2d.InputListener.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tmpCoords", com.badlogic.gdx.scenes.scene2d.InputListener.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, true, false, false, 2474, 2473, null), 
  };
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {e__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 2475),
      new Method("touchDown", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2476),
      new Method("touchUp", com.badlogic.gdx.scenes.scene2d.InputListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2477),
      new Method("touchDragged", com.badlogic.gdx.scenes.scene2d.InputListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 2478),
      new Method("mouseMoved", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2479),
      new Method("enter", com.badlogic.gdx.scenes.scene2d.InputListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, fromActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2480),
      new Method("exit", com.badlogic.gdx.scenes.scene2d.InputListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, toActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2481),
      new Method("scrolled", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, amount__I, }, false, false, false, false, false, false, true, false, false, true, false, 2482),
      new Method("keyDown", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, keycode__I, }, false, false, false, false, false, false, true, false, false, true, false, 2483),
      new Method("keyUp", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, keycode__I, }, false, false, false, false, false, false, true, false, false, true, false, 2484),
      new Method("keyTyped", com.badlogic.gdx.scenes.scene2d.InputListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, character__C, }, false, false, false, false, false, false, true, false, false, true, false, 2485),
  };
  t.constructors = new Constructor[] {
      new Constructor("InputListener", com.badlogic.gdx.scenes.scene2d.InputListener.class, com.badlogic.gdx.scenes.scene2d.InputListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2486),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.InputListener", t);
  }
  private void c120() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Stage", 2487, com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.InputAdapter.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.Disposable.class, com.badlogic.gdx.InputAdapter.class, com.badlogic.gdx.InputProcessor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("actorCoords", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, true, false, false, 2489, 2488, null), 
      new Field("cameraCoords", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector3.class, true, false, true, false, false, true, false, false, 2491, 2490, null), 
      new Field("viewportX", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2493, 2492, null), 
      new Field("viewportY", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2495, 2494, null), 
      new Field("viewportWidth", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2497, 2496, null), 
      new Field("viewportHeight", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2499, 2498, null), 
      new Field("width", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2501, 2500, null), 
      new Field("height", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2503, 2502, null), 
      new Field("gutterWidth", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2505, 2504, null), 
      new Field("gutterHeight", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, false, false, true, false, false, false, false, false, 2507, 2506, null), 
      new Field("camera", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.graphics.Camera.class, false, false, true, false, false, false, false, false, 2509, 2508, null), 
      new Field("batch", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.graphics.g2d.Batch.class, true, false, true, false, false, false, false, false, 2511, 2510, null), 
      new Field("ownsBatch", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, true, false, true, false, false, false, false, false, 2513, 2512, null), 
      new Field("root", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Group.class, true, false, true, false, false, false, false, false, 2515, 2514, null), 
      new Field("stageCoords", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector2.class, true, false, true, false, false, false, false, false, 2517, 2516, null), 
      new Field("pointerOverActors", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor[].class, true, false, true, false, false, false, false, false, 2519, 2518, null), 
      new Field("pointerTouched", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean[].class, true, false, true, false, false, false, false, false, 2521, 2520, null), 
      new Field("pointerScreenX", com.badlogic.gdx.scenes.scene2d.Stage.class, int[].class, true, false, true, false, false, false, false, false, 2523, 2522, null), 
      new Field("pointerScreenY", com.badlogic.gdx.scenes.scene2d.Stage.class, int[].class, true, false, true, false, false, false, false, false, 2525, 2524, null), 
      new Field("mouseScreenX", com.badlogic.gdx.scenes.scene2d.Stage.class, int.class, false, false, true, false, false, false, false, false, 2527, 2526, null), 
      new Field("mouseScreenY", com.badlogic.gdx.scenes.scene2d.Stage.class, int.class, false, false, true, false, false, false, false, false, 2529, 2528, null), 
      new Field("mouseOverActor", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2531, 2530, null), 
      new Field("keyboardFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2533, 2532, null), 
      new Field("scrollFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2535, 2534, null), 
      new Field("touchFocuses", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.utils.SnapshotArray.class, true, false, true, false, false, false, false, false, 2537, 2536, new Class[] {com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, }), 
  };
  t.methods = new Method[] {
      new Method("setViewport", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 2538),
      new Method("setViewport", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {width__F, height__F, keepAspectRatio__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2539),
      new Method("setViewport", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {stageWidth__F, stageHeight__F, keepAspectRatio__Z, viewportX__F, viewportY__F, viewportWidth__F, viewportHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 2540),
      new Method("draw", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2541),
      new Method("act", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2542),
      new Method("act", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2543),
      new Method("fireEnterAndExit", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new Parameter[] {overLast__Lcom_badlogic_gdx_scenes_scene2d_Actor_, screenX__I, screenY__I, pointer__I, }, false, false, false, false, true, false, false, false, false, true, false, 2544),
      new Method("touchDown", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {screenX__I, screenY__I, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2545),
      new Method("touchDragged", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {screenX__I, screenY__I, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 2546),
      new Method("touchUp", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {screenX__I, screenY__I, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2547),
      new Method("mouseMoved", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {screenX__I, screenY__I, }, false, false, false, false, false, false, true, false, false, true, false, 2548),
      new Method("scrolled", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {amount__I, }, false, false, false, false, false, false, true, false, false, true, false, 2549),
      new Method("keyDown", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {keyCode__I, }, false, false, false, false, false, false, true, false, false, true, false, 2550),
      new Method("keyUp", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {keyCode__I, }, false, false, false, false, false, false, true, false, false, true, false, 2551),
      new Method("keyTyped", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {character__C, }, false, false, false, false, false, false, true, false, false, true, false, 2552),
      new Method("addTouchFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, listenerActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, target__Lcom_badlogic_gdx_scenes_scene2d_Actor_, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2553),
      new Method("removeTouchFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, listenerActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, target__Lcom_badlogic_gdx_scenes_scene2d_Actor_, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 2554),
      new Method("cancelTouchFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2555),
      new Method("cancelTouchFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2556),
      new Method("addActor", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2557),
      new Method("addAction", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2558),
      new Method("getActors", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2559),
      new Method("addListener", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2560),
      new Method("removeListener", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2561),
      new Method("addCaptureListener", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2562),
      new Method("removeCaptureListener", com.badlogic.gdx.scenes.scene2d.Stage.class, boolean.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2563),
      new Method("clear", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2564),
      new Method("unfocusAll", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2565),
      new Method("unfocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2566),
      new Method("setKeyboardFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2567),
      new Method("getKeyboardFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2568),
      new Method("setScrollFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2569),
      new Method("getScrollFocus", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2570),
      new Method("getWidth", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2571),
      new Method("getHeight", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2572),
      new Method("getGutterWidth", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2573),
      new Method("getGutterHeight", com.badlogic.gdx.scenes.scene2d.Stage.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2574),
      new Method("getSpriteBatch", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.graphics.g2d.Batch.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2575),
      new Method("getCamera", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.graphics.Camera.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2576),
      new Method("setCamera", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {camera__Lcom_badlogic_gdx_graphics_Camera_, }, false, false, false, false, false, false, true, false, false, true, false, 2577),
      new Method("getRoot", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Group.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2578),
      new Method("hit", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new Parameter[] {stageX__F, stageY__F, touchable__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2579),
      new Method("screenToStageCoordinates", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {screenCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2580),
      new Method("stageToScreenCoordinates", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {stageCoords__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 2581),
      new Method("toScreenCoordinates", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {coords__Lcom_badlogic_gdx_math_Vector2_, transformMatrix__Lcom_badlogic_gdx_math_Matrix4_, }, false, false, false, false, false, false, true, false, false, true, false, 2582),
      new Method("calculateScissors", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, new Parameter[] {area__Lcom_badlogic_gdx_math_Rectangle_, scissor__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, false, false, false, false, true, false, false, true, false, 2583),
      new Method("dispose", com.badlogic.gdx.scenes.scene2d.Stage.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2584),
  };
  t.constructors = new Constructor[] {
      new Constructor("Stage", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Stage.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2585),
      new Constructor("Stage", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Stage.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, false, true, 2586),
      new Constructor("Stage", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Stage.class, new Parameter[] {width__F, height__F, keepAspectRatio__Z, }, false, false, false, false, false, false, true, false, false, false, true, 2587),
      new Constructor("Stage", com.badlogic.gdx.scenes.scene2d.Stage.class, com.badlogic.gdx.scenes.scene2d.Stage.class, new Parameter[] {width__F, height__F, keepAspectRatio__Z, batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, }, false, false, false, false, false, false, true, false, false, false, true, 2588),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Stage", t);
  }
  private void c121() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", 2589, com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("listener", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, false, true, false, false, false, false, false, false, 2591, 2590, null), 
      new Field("listenerActor", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 2593, 2592, null), 
      new Field("target", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 2595, 2594, null), 
      new Field("pointer", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, int.class, false, true, false, false, false, false, false, false, 2597, 2596, null), 
      new Field("button", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, int.class, false, true, false, false, false, false, false, false, 2599, 2598, null), 
  };
  t.methods = new Method[] {
      new Method("reset", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2600),
  };
  t.constructors = new Constructor[] {
      new Constructor("TouchFocus", com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2601),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", t);
  }
  private void c122() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Touchable", 2602, com.badlogic.gdx.scenes.scene2d.Touchable.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("enabled", com.badlogic.gdx.scenes.scene2d.Touchable.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, true, false, false, false, true, true, false, false, 2604, 2603, null), 
      new Field("disabled", com.badlogic.gdx.scenes.scene2d.Touchable.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, true, false, false, false, true, true, false, false, 2606, 2605, null), 
      new Field("childrenOnly", com.badlogic.gdx.scenes.scene2d.Touchable.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, true, false, false, false, true, true, false, false, 2608, 2607, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.scenes.scene2d.Touchable.class, com.badlogic.gdx.scenes.scene2d.Touchable[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2609),
      new Method("valueOf", com.badlogic.gdx.scenes.scene2d.Touchable.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 2610),
  };
  t.enumConstants = new Object[3];
  t.enumConstants[0] = com.badlogic.gdx.scenes.scene2d.Touchable.enabled;
  t.enumConstants[1] = com.badlogic.gdx.scenes.scene2d.Touchable.disabled;
  t.enumConstants[2] = com.badlogic.gdx.scenes.scene2d.Touchable.childrenOnly;
  types.put("com.badlogic.gdx.scenes.scene2d.Touchable", t);
  }
  private void c123() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.Touchable[]", 2611, com.badlogic.gdx.scenes.scene2d.Touchable[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.Touchable[]", t);
  }
  private void c124() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.Actions", 2612, com.badlogic.gdx.scenes.scene2d.actions.Actions.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("action", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.Action.class, new Parameter[] {type__Ljava_lang_Class_, }, false, false, true, false, false, false, true, false, false, true, false, 2613),
      new Method("addAction", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2614),
      new Method("addAction", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, true, false, false, false, true, false, false, true, false, 2615),
      new Method("removeAction", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2616),
      new Method("removeAction", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, true, false, false, false, true, false, false, true, false, 2617),
      new Method("moveTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, new Parameter[] {x__F, y__F, }, false, false, true, false, false, false, true, false, false, true, false, 2618),
      new Method("moveTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, new Parameter[] {x__F, y__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2619),
      new Method("moveTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, new Parameter[] {x__F, y__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2620),
      new Method("moveBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, new Parameter[] {amountX__F, amountY__F, }, false, false, true, false, false, false, true, false, false, true, false, 2621),
      new Method("moveBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2622),
      new Method("moveBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2623),
      new Method("sizeTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, new Parameter[] {x__F, y__F, }, false, false, true, false, false, false, true, false, false, true, false, 2624),
      new Method("sizeTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, new Parameter[] {x__F, y__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2625),
      new Method("sizeTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, new Parameter[] {x__F, y__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2626),
      new Method("sizeBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, new Parameter[] {amountX__F, amountY__F, }, false, false, true, false, false, false, true, false, false, true, false, 2627),
      new Method("sizeBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2628),
      new Method("sizeBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2629),
      new Method("scaleTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, new Parameter[] {x__F, y__F, }, false, false, true, false, false, false, true, false, false, true, false, 2630),
      new Method("scaleTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, new Parameter[] {x__F, y__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2631),
      new Method("scaleTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, new Parameter[] {x__F, y__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2632),
      new Method("scaleBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, new Parameter[] {amountX__F, amountY__F, }, false, false, true, false, false, false, true, false, false, true, false, 2633),
      new Method("scaleBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2634),
      new Method("scaleBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, new Parameter[] {amountX__F, amountY__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2635),
      new Method("rotateTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, new Parameter[] {rotation__F, }, false, false, true, false, false, false, true, false, false, true, false, 2636),
      new Method("rotateTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, new Parameter[] {rotation__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2637),
      new Method("rotateTo", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, new Parameter[] {rotation__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2638),
      new Method("rotateBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, new Parameter[] {rotationAmount__F, }, false, false, true, false, false, false, true, false, false, true, false, 2639),
      new Method("rotateBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, new Parameter[] {rotationAmount__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2640),
      new Method("rotateBy", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, new Parameter[] {rotationAmount__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2641),
      new Method("color", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, true, false, false, false, true, false, false, true, false, 2642),
      new Method("color", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2643),
      new Method("color", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2644),
      new Method("alpha", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {a__F, }, false, false, true, false, false, false, true, false, false, true, false, 2645),
      new Method("alpha", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {a__F, duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2646),
      new Method("alpha", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {a__F, duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2647),
      new Method("fadeOut", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2648),
      new Method("fadeOut", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2649),
      new Method("fadeIn", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2650),
      new Method("fadeIn", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, new Parameter[] {duration__F, interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, true, false, false, false, true, false, false, true, false, 2651),
      new Method("show", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2652),
      new Method("hide", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2653),
      new Method("visible", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, new Parameter[] {visible__Z, }, false, false, true, false, false, false, true, false, false, true, false, 2654),
      new Method("touchable", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, new Parameter[] {touchable__Lcom_badlogic_gdx_scenes_scene2d_Touchable_, }, false, false, true, false, false, false, true, false, false, true, false, 2655),
      new Method("removeActor", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2656),
      new Method("removeActor", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, new Parameter[] {removeActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, true, false, false, false, true, false, false, true, false, 2657),
      new Method("delay", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, new Parameter[] {duration__F, }, false, false, true, false, false, false, true, false, false, true, false, 2658),
      new Method("delay", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, new Parameter[] {duration__F, delayedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2659),
      new Method("timeScale", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, new Parameter[] {scale__F, scaledAction__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2660),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2661),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2662),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2663),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2664),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, action5__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2665),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {actions___Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, true, true, false, 2666),
      new Method("sequence", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2667),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2668),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2669),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2670),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2671),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, action5__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2672),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {actions___Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, true, true, false, 2673),
      new Method("parallel", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 2674),
      new Method("repeat", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, new Parameter[] {count__I, repeatedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2675),
      new Method("forever", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, new Parameter[] {repeatedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2676),
      new Method("run", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, new Parameter[] {runnable__Ljava_lang_Runnable_, }, false, false, true, false, false, false, true, false, false, true, false, 2677),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, new Parameter[] {enabled__Z, }, false, false, true, false, false, false, true, false, false, true, false, 2678),
      new Method("after", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, true, false, false, false, true, false, false, true, false, 2679),
      new Method("addListener", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, capture__Z, }, false, false, true, false, false, false, true, false, false, true, false, 2680),
      new Method("addListener", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, capture__Z, targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, true, false, false, false, true, false, false, true, false, 2681),
      new Method("removeListener", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, capture__Z, }, false, false, true, false, false, false, true, false, false, true, false, 2682),
      new Method("removeListener", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, capture__Z, targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, true, false, false, false, true, false, false, true, false, 2683),
  };
  t.constructors = new Constructor[] {
      new Constructor("Actions", com.badlogic.gdx.scenes.scene2d.actions.Actions.class, com.badlogic.gdx.scenes.scene2d.actions.Actions.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2684),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.Actions", t);
  }
  private void c125() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.AddAction", 2685, com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("targetActor", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2687, 2686, null), 
      new Field("action", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, false, false, true, false, false, false, false, false, 2689, 2688, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2690),
      new Method("getTargetActor", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2691),
      new Method("setTargetActor", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2692),
      new Method("getAction", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2693),
      new Method("setAction", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2694),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2695),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2696),
  };
  t.constructors = new Constructor[] {
      new Constructor("AddAction", com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, com.badlogic.gdx.scenes.scene2d.actions.AddAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2697),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.AddAction", t);
  }
  private void c126() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction", 2698, com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("targetActor", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2700, 2699, null), 
      new Field("listener", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, false, false, true, false, false, false, false, false, 2702, 2701, null), 
      new Field("capture", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, boolean.class, false, false, true, false, false, false, false, false, 2704, 2703, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2705),
      new Method("getTargetActor", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2706),
      new Method("setTargetActor", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2707),
      new Method("getListener", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2708),
      new Method("setListener", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, void.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2709),
      new Method("getCapture", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2710),
      new Method("setCapture", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, void.class, new Parameter[] {capture__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2711),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2712),
  };
  t.constructors = new Constructor[] {
      new Constructor("AddListenerAction", com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2713),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction", t);
  }
  private void c127() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.AfterAction", 2714, com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("waitForActions", com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, com.badlogic.gdx.utils.Array.class, false, false, true, false, false, false, false, false, 2716, 2715, new Class[] {com.badlogic.gdx.scenes.scene2d.Action.class, }), 
  };
  t.methods = new Method[] {
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2717),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2718),
      new Method("delegate", com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2719),
  };
  t.constructors = new Constructor[] {
      new Constructor("AfterAction", com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, com.badlogic.gdx.scenes.scene2d.actions.AfterAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2720),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.AfterAction", t);
  }
  private void c128() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.AlphaAction", 2721, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("start", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, float.class, false, false, true, false, false, false, false, false, 2723, 2722, null), 
      new Field("end", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, float.class, false, false, true, false, false, false, false, false, 2725, 2724, null), 
      new Field("color", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, com.badlogic.gdx.graphics.Color.class, false, false, true, false, false, false, false, false, 2727, 2726, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2728),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2729),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2730),
      new Method("getColor", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2731),
      new Method("setColor", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 2732),
      new Method("getAlpha", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2733),
      new Method("setAlpha", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, void.class, new Parameter[] {alpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 2734),
  };
  t.constructors = new Constructor[] {
      new Constructor("AlphaAction", com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, com.badlogic.gdx.scenes.scene2d.actions.AlphaAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2735),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.AlphaAction", t);
  }
  private void c129() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.ColorAction", 2736, com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("startR", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, float.class, false, false, true, false, false, false, false, false, 2738, 2737, null), 
      new Field("startG", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, float.class, false, false, true, false, false, false, false, false, 2740, 2739, null), 
      new Field("startB", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, float.class, false, false, true, false, false, false, false, false, 2742, 2741, null), 
      new Field("startA", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, float.class, false, false, true, false, false, false, false, false, 2744, 2743, null), 
      new Field("color", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.graphics.Color.class, false, false, true, false, false, false, false, false, 2746, 2745, null), 
      new Field("end", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.graphics.Color.class, true, false, true, false, false, false, false, false, 2748, 2747, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2749),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2750),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2751),
      new Method("getColor", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2752),
      new Method("setColor", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 2753),
      new Method("getEndColor", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.graphics.Color.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2754),
      new Method("setEndColor", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, void.class, new Parameter[] {color__Lcom_badlogic_gdx_graphics_Color_, }, false, false, false, false, false, false, true, false, false, true, false, 2755),
  };
  t.constructors = new Constructor[] {
      new Constructor("ColorAction", com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, com.badlogic.gdx.scenes.scene2d.actions.ColorAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2756),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.ColorAction", t);
  }
  private void c130() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction", 2757, com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("count", com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, int.class, false, true, false, false, false, false, false, false, 2759, 2758, null), 
      new Field("current", com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, int.class, false, true, false, false, false, false, false, false, 2761, 2760, null), 
  };
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, boolean.class, new Parameter[] {arg0__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 2762),
  };
  t.constructors = new Constructor[] {
      new Constructor("CountdownEventAction", com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction.class, new Parameter[] {arg0__Ljava_lang_Class_, arg1__I, }, false, false, false, false, false, false, true, false, false, false, true, 2763),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction", t);
  }
  private void c131() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.DelayAction", 2764, com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("duration", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, float.class, false, false, true, false, false, false, false, false, 2766, 2765, null), 
      new Field("time", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, float.class, false, false, true, false, false, false, false, false, 2768, 2767, null), 
  };
  t.methods = new Method[] {
      new Method("delegate", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2769),
      new Method("finish", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2770),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2771),
      new Method("getTime", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2772),
      new Method("setTime", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, void.class, new Parameter[] {time__F, }, false, false, false, false, false, false, true, false, false, true, false, 2773),
      new Method("getDuration", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2774),
      new Method("setDuration", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, void.class, new Parameter[] {duration__F, }, false, false, false, false, false, false, true, false, false, true, false, 2775),
  };
  t.constructors = new Constructor[] {
      new Constructor("DelayAction", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2776),
      new Constructor("DelayAction", com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelayAction.class, new Parameter[] {duration__F, }, false, false, false, false, false, false, true, false, false, false, true, 2777),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.DelayAction", t);
  }
  private void c132() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.DelegateAction", 2778, com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("action", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, false, false, false, true, false, false, false, false, 2780, 2779, null), 
  };
  t.methods = new Method[] {
      new Method("setAction", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2781),
      new Method("getAction", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2782),
      new Method("delegate", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, boolean.class, new Parameter[] {delta__F, }, true, false, false, false, false, true, false, true, false, true, false, 2783),
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, boolean.class, new Parameter[] {delta__F, }, false, true, false, false, false, false, true, false, false, true, false, 2784),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2785),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2786),
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2787),
      new Method("toString", com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2788),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.DelegateAction", t);
  }
  private void c133() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.EventAction", 2789, com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("eventClass", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, java.lang.Class.class, true, true, false, false, false, false, false, false, 2791, 2790, null), 
      new Field("result", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, boolean.class, false, true, false, false, false, false, false, false, 2793, 2792, null), 
      new Field("listener", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, true, false, true, false, false, false, false, false, 2795, 2794, null), 
  };
  t.methods = new Method[] {
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2796),
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2797),
      new Method("handle", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, boolean.class, new Parameter[] {arg0__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, true, false, false, false, false, false, true, true, false, true, false, 2798),
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.EventAction.class, boolean.class, new Parameter[] {arg0__F, }, false, false, false, false, false, false, true, false, false, true, false, 2799),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.EventAction", t);
  }
  private void c134() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.FloatAction", 2800, com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("start", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, false, false, true, false, false, false, false, false, 2802, 2801, null), 
      new Field("end", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, false, false, true, false, false, false, false, false, 2804, 2803, null), 
      new Field("value", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, false, false, true, false, false, false, false, false, 2806, 2805, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2807),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2808),
      new Method("getValue", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2809),
      new Method("setValue", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, void.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, true, false, 2810),
      new Method("getStart", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2811),
      new Method("setStart", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, void.class, new Parameter[] {start__F, }, false, false, false, false, false, false, true, false, false, true, false, 2812),
      new Method("getEnd", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2813),
      new Method("setEnd", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, void.class, new Parameter[] {end__F, }, false, false, false, false, false, false, true, false, false, true, false, 2814),
  };
  t.constructors = new Constructor[] {
      new Constructor("FloatAction", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2815),
      new Constructor("FloatAction", com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, com.badlogic.gdx.scenes.scene2d.actions.FloatAction.class, new Parameter[] {start__F, end__F, }, false, false, false, false, false, false, true, false, false, false, true, 2816),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.FloatAction", t);
  }
  private void c135() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.IntAction", 2817, com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("start", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, false, false, true, false, false, false, false, false, 2819, 2818, null), 
      new Field("end", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, false, false, true, false, false, false, false, false, 2821, 2820, null), 
      new Field("value", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, false, false, true, false, false, false, false, false, 2823, 2822, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2824),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2825),
      new Method("getValue", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2826),
      new Method("setValue", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, void.class, new Parameter[] {value__I, }, false, false, false, false, false, false, true, false, false, true, false, 2827),
      new Method("getStart", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2828),
      new Method("setStart", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, void.class, new Parameter[] {start__I, }, false, false, false, false, false, false, true, false, false, true, false, 2829),
      new Method("getEnd", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2830),
      new Method("setEnd", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, void.class, new Parameter[] {end__I, }, false, false, false, false, false, false, true, false, false, true, false, 2831),
  };
  t.constructors = new Constructor[] {
      new Constructor("IntAction", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2832),
      new Constructor("IntAction", com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, com.badlogic.gdx.scenes.scene2d.actions.IntAction.class, new Parameter[] {start__I, end__I, }, false, false, false, false, false, false, true, false, false, false, true, 2833),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.IntAction", t);
  }
  private void c136() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.LayoutAction", 2834, com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("enabled", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, boolean.class, false, false, true, false, false, false, false, false, 2836, 2835, null), 
  };
  t.methods = new Method[] {
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2837),
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2838),
      new Method("isEnabled", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2839),
      new Method("setLayoutEnabled", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, void.class, new Parameter[] {enabled__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2840),
  };
  t.constructors = new Constructor[] {
      new Constructor("LayoutAction", com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, com.badlogic.gdx.scenes.scene2d.actions.LayoutAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2841),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.LayoutAction", t);
  }
  private void c137() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.MoveByAction", 2842, com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("amountX", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, float.class, false, false, true, false, false, false, false, false, 2844, 2843, null), 
      new Field("amountY", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, float.class, false, false, true, false, false, false, false, false, 2846, 2845, null), 
  };
  t.methods = new Method[] {
      new Method("updateRelative", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, void.class, new Parameter[] {percentDelta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2847),
      new Method("setAmount", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2848),
      new Method("getAmountX", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2849),
      new Method("setAmountX", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 2850),
      new Method("getAmountY", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2851),
      new Method("setAmountY", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2852),
  };
  t.constructors = new Constructor[] {
      new Constructor("MoveByAction", com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, com.badlogic.gdx.scenes.scene2d.actions.MoveByAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2853),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.MoveByAction", t);
  }
  private void c138() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.MoveToAction", 2854, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("startX", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, false, false, true, false, false, false, false, false, 2856, 2855, null), 
      new Field("startY", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, false, false, true, false, false, false, false, false, 2858, 2857, null), 
      new Field("endX", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, false, false, true, false, false, false, false, false, 2860, 2859, null), 
      new Field("endY", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, false, false, true, false, false, false, false, false, 2862, 2861, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2863),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2864),
      new Method("setPosition", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2865),
      new Method("getX", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2866),
      new Method("setX", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 2867),
      new Method("getY", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2868),
      new Method("setY", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2869),
  };
  t.constructors = new Constructor[] {
      new Constructor("MoveToAction", com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2870),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.MoveToAction", t);
  }
  private void c139() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.ParallelAction", 2871, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("actions", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.utils.Array.class, false, true, false, false, false, false, false, false, 2873, 2872, new Class[] {com.badlogic.gdx.scenes.scene2d.Action.class, }), 
      new Field("complete", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, boolean.class, false, false, true, false, false, false, false, false, 2875, 2874, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2876),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2877),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2878),
      new Method("addAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2879),
      new Method("setActor", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2880),
      new Method("getActions", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2881),
      new Method("toString", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2882),
  };
  t.constructors = new Constructor[] {
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2883),
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 2884),
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 2885),
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 2886),
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 2887),
      new Constructor("ParallelAction", com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, action5__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 2888),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.ParallelAction", t);
  }
  private void c140() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction", 2889, com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("lastPercent", com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, float.class, false, false, true, false, false, false, false, false, 2891, 2890, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2892),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2893),
      new Method("updateRelative", com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, void.class, new Parameter[] {percentDelta__F, }, true, false, false, false, false, true, false, true, false, true, false, 2894),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction", t);
  }
  private void c141() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RemoveAction", 2895, com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("targetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2897, 2896, null), 
      new Field("action", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, false, false, true, false, false, false, false, false, 2899, 2898, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2900),
      new Method("getTargetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2901),
      new Method("setTargetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2902),
      new Method("getAction", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2903),
      new Method("setAction", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, void.class, new Parameter[] {action__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, true, false, 2904),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2905),
  };
  t.constructors = new Constructor[] {
      new Constructor("RemoveAction", com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2906),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RemoveAction", t);
  }
  private void c142() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction", 2907, com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("removeActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2909, 2908, null), 
      new Field("removed", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, boolean.class, false, false, true, false, false, false, false, false, 2911, 2910, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2912),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2913),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2914),
      new Method("getRemoveActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2915),
      new Method("setRemoveActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, void.class, new Parameter[] {removeActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2916),
  };
  t.constructors = new Constructor[] {
      new Constructor("RemoveActorAction", com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2917),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction", t);
  }
  private void c143() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction", 2918, com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("targetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 2920, 2919, null), 
      new Field("listener", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, false, false, true, false, false, false, false, false, 2922, 2921, null), 
      new Field("capture", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, boolean.class, false, false, true, false, false, false, false, false, 2924, 2923, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2925),
      new Method("getTargetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2926),
      new Method("setTargetActor", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 2927),
      new Method("getListener", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.EventListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2928),
      new Method("setListener", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, void.class, new Parameter[] {listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_, }, false, false, false, false, false, false, true, false, false, true, false, 2929),
      new Method("getCapture", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2930),
      new Method("setCapture", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, void.class, new Parameter[] {capture__Z, }, false, false, false, false, false, false, true, false, false, true, false, 2931),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2932),
  };
  t.constructors = new Constructor[] {
      new Constructor("RemoveListenerAction", com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2933),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction", t);
  }
  private void c144() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RepeatAction", 2934, com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("FOREVER", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, int.class, true, false, false, false, true, true, false, false, 2936, 2935, null), 
      new Field("repeatCount", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, int.class, false, false, true, false, false, false, false, false, 2938, 2937, null), 
      new Field("executedCount", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, int.class, false, false, true, false, false, false, false, false, 2940, 2939, null), 
      new Field("finished", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, boolean.class, false, false, true, false, false, false, false, false, 2942, 2941, null), 
  };
  t.methods = new Method[] {
      new Method("delegate", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2943),
      new Method("finish", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2944),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2945),
      new Method("setCount", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, void.class, new Parameter[] {count__I, }, false, false, false, false, false, false, true, false, false, true, false, 2946),
      new Method("getCount", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2947),
  };
  t.constructors = new Constructor[] {
      new Constructor("RepeatAction", com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, com.badlogic.gdx.scenes.scene2d.actions.RepeatAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2948),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RepeatAction", t);
  }
  private void c145() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RotateByAction", 2949, com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("amount", com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, float.class, false, false, true, false, false, false, false, false, 2951, 2950, null), 
  };
  t.methods = new Method[] {
      new Method("updateRelative", com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, void.class, new Parameter[] {percentDelta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2952),
      new Method("getAmount", com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2953),
      new Method("setAmount", com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, void.class, new Parameter[] {rotationAmount__F, }, false, false, false, false, false, false, true, false, false, true, false, 2954),
  };
  t.constructors = new Constructor[] {
      new Constructor("RotateByAction", com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, com.badlogic.gdx.scenes.scene2d.actions.RotateByAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2955),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RotateByAction", t);
  }
  private void c146() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RotateToAction", 2956, com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("start", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, float.class, false, false, true, false, false, false, false, false, 2958, 2957, null), 
      new Field("end", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, float.class, false, false, true, false, false, false, false, false, 2960, 2959, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 2961),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 2962),
      new Method("getRotation", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2963),
      new Method("setRotation", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, void.class, new Parameter[] {rotation__F, }, false, false, false, false, false, false, true, false, false, true, false, 2964),
  };
  t.constructors = new Constructor[] {
      new Constructor("RotateToAction", com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, com.badlogic.gdx.scenes.scene2d.actions.RotateToAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2965),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RotateToAction", t);
  }
  private void c147() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.RunnableAction", 2966, com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("runnable", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, java.lang.Runnable.class, false, false, true, false, false, false, false, false, 2968, 2967, null), 
      new Field("ran", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, boolean.class, false, false, true, false, false, false, false, false, 2970, 2969, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 2971),
      new Method("run", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2972),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2973),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2974),
      new Method("getRunnable", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, java.lang.Runnable.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2975),
      new Method("setRunnable", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, void.class, new Parameter[] {runnable__Ljava_lang_Runnable_, }, false, false, false, false, false, false, true, false, false, true, false, 2976),
  };
  t.constructors = new Constructor[] {
      new Constructor("RunnableAction", com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, com.badlogic.gdx.scenes.scene2d.actions.RunnableAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2977),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.RunnableAction", t);
  }
  private void c148() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction", 2978, com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("amountX", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, float.class, false, false, true, false, false, false, false, false, 2980, 2979, null), 
      new Field("amountY", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, float.class, false, false, true, false, false, false, false, false, 2982, 2981, null), 
  };
  t.methods = new Method[] {
      new Method("updateRelative", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, void.class, new Parameter[] {percentDelta__F, }, false, false, false, false, false, true, false, false, false, true, false, 2983),
      new Method("setAmount", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2984),
      new Method("setAmount", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, void.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 2985),
      new Method("getAmountX", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2986),
      new Method("setAmountX", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 2987),
      new Method("getAmountY", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 2988),
      new Method("setAmountY", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 2989),
  };
  t.constructors = new Constructor[] {
      new Constructor("ScaleByAction", com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 2990),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction", t);
  }
  private void c149() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction", 2991, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("startX", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, false, false, true, false, false, false, false, false, 2993, 2992, null), 
      new Field("startY", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, false, false, true, false, false, false, false, false, 2995, 2994, null), 
      new Field("endX", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, false, false, true, false, false, false, false, false, 2997, 2996, null), 
      new Field("endY", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, false, false, true, false, false, false, false, false, 2999, 2998, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3000),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 3001),
      new Method("setScale", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3002),
      new Method("setScale", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 3003),
      new Method("getX", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3004),
      new Method("setX", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 3005),
      new Method("getY", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3006),
      new Method("setY", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, void.class, new Parameter[] {y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3007),
  };
  t.constructors = new Constructor[] {
      new Constructor("ScaleToAction", com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3008),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction", t);
  }
  private void c150() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.SequenceAction", 3009, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("index", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, int.class, false, false, true, false, false, false, false, false, 3011, 3010, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 3012),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3013),
  };
  t.constructors = new Constructor[] {
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3014),
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 3015),
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 3016),
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 3017),
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 3018),
      new Constructor("SequenceAction", com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, com.badlogic.gdx.scenes.scene2d.actions.SequenceAction.class, new Parameter[] {action1__Lcom_badlogic_gdx_scenes_scene2d_Action_, action2__Lcom_badlogic_gdx_scenes_scene2d_Action_, action3__Lcom_badlogic_gdx_scenes_scene2d_Action_, action4__Lcom_badlogic_gdx_scenes_scene2d_Action_, action5__Lcom_badlogic_gdx_scenes_scene2d_Action_, }, false, false, false, false, false, false, true, false, false, false, true, 3019),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.SequenceAction", t);
  }
  private void c151() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.SizeByAction", 3020, com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("amountWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, float.class, false, false, true, false, false, false, false, false, 3022, 3021, null), 
      new Field("amountHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, float.class, false, false, true, false, false, false, false, false, 3024, 3023, null), 
  };
  t.methods = new Method[] {
      new Method("updateRelative", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, void.class, new Parameter[] {percentDelta__F, }, false, false, false, false, false, true, false, false, false, true, false, 3025),
      new Method("setAmount", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, void.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3026),
      new Method("getAmountWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3027),
      new Method("setAmountWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, void.class, new Parameter[] {width__F, }, false, false, false, false, false, false, true, false, false, true, false, 3028),
      new Method("getAmountHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3029),
      new Method("setAmountHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, void.class, new Parameter[] {height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3030),
  };
  t.constructors = new Constructor[] {
      new Constructor("SizeByAction", com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, com.badlogic.gdx.scenes.scene2d.actions.SizeByAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3031),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.SizeByAction", t);
  }
  private void c152() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.SizeToAction", 3032, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("startWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, false, false, true, false, false, false, false, false, 3034, 3033, null), 
      new Field("startHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, false, false, true, false, false, false, false, false, 3036, 3035, null), 
      new Field("endWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, false, false, true, false, false, false, false, false, 3038, 3037, null), 
      new Field("endHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, false, false, true, false, false, false, false, false, 3040, 3039, null), 
  };
  t.methods = new Method[] {
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3041),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, void.class, new Parameter[] {percent__F, }, false, false, false, false, false, true, false, false, false, true, false, 3042),
      new Method("setSize", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, void.class, new Parameter[] {width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3043),
      new Method("getWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3044),
      new Method("setWidth", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, void.class, new Parameter[] {width__F, }, false, false, false, false, false, false, true, false, false, true, false, 3045),
      new Method("getHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3046),
      new Method("setHeight", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, void.class, new Parameter[] {height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3047),
  };
  t.constructors = new Constructor[] {
      new Constructor("SizeToAction", com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3048),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.SizeToAction", t);
  }
  private void c153() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", 3049, com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("duration", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, float.class, false, false, true, false, false, false, false, false, 3051, 3050, null), 
      new Field("time", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, float.class, false, false, true, false, false, false, false, false, 3053, 3052, null), 
      new Field("interpolation", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.math.Interpolation.class, false, false, true, false, false, false, false, false, 3055, 3054, null), 
      new Field("reverse", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, boolean.class, false, false, true, false, false, false, false, false, 3057, 3056, null), 
      new Field("began", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, boolean.class, false, false, true, false, false, false, false, false, 3059, 3058, null), 
      new Field("complete", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, boolean.class, false, false, true, false, false, false, false, false, 3061, 3060, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 3062),
      new Method("begin", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3063),
      new Method("end", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3064),
      new Method("update", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, new Parameter[] {percent__F, }, true, false, false, false, false, true, false, true, false, true, false, 3065),
      new Method("finish", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3066),
      new Method("restart", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3067),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3068),
      new Method("getTime", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3069),
      new Method("setTime", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, new Parameter[] {time__F, }, false, false, false, false, false, false, true, false, false, true, false, 3070),
      new Method("getDuration", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3071),
      new Method("setDuration", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, new Parameter[] {duration__F, }, false, false, false, false, false, false, true, false, false, true, false, 3072),
      new Method("getInterpolation", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, com.badlogic.gdx.math.Interpolation.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3073),
      new Method("setInterpolation", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, new Parameter[] {interpolation__Lcom_badlogic_gdx_math_Interpolation_, }, false, false, false, false, false, false, true, false, false, true, false, 3074),
      new Method("isReverse", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3075),
      new Method("setReverse", com.badlogic.gdx.scenes.scene2d.actions.TemporalAction.class, void.class, new Parameter[] {reverse__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3076),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", t);
  }
  private void c154() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction", 3077, com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("scale", com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, float.class, false, false, true, false, false, false, false, false, 3079, 3078, null), 
  };
  t.methods = new Method[] {
      new Method("delegate", com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, true, false, false, false, true, false, 3080),
      new Method("getScale", com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3081),
      new Method("setScale", com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, void.class, new Parameter[] {scale__F, }, false, false, false, false, false, false, true, false, false, true, false, 3082),
  };
  t.constructors = new Constructor[] {
      new Constructor("TimeScaleAction", com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3083),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction", t);
  }
  private void c155() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.TouchableAction", 3084, com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("touchable", com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, false, false, true, false, false, false, false, false, 3086, 3085, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 3087),
      new Method("getTouchable", com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, com.badlogic.gdx.scenes.scene2d.Touchable.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3088),
      new Method("setTouchable", com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, void.class, new Parameter[] {touchable__Lcom_badlogic_gdx_scenes_scene2d_Touchable_, }, false, false, false, false, false, false, true, false, false, true, false, 3089),
  };
  t.constructors = new Constructor[] {
      new Constructor("TouchableAction", com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, com.badlogic.gdx.scenes.scene2d.actions.TouchableAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3090),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.TouchableAction", t);
  }
  private void c156() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.actions.VisibleAction", 3091, com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, com.badlogic.gdx.scenes.scene2d.Action.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Action.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("visible", com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, boolean.class, false, false, true, false, false, false, false, false, 3093, 3092, null), 
  };
  t.methods = new Method[] {
      new Method("act", com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, boolean.class, new Parameter[] {delta__F, }, false, false, false, false, false, false, true, false, false, true, false, 3094),
      new Method("isVisible", com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3095),
      new Method("setVisible", com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, void.class, new Parameter[] {visible__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3096),
  };
  t.constructors = new Constructor[] {
      new Constructor("VisibleAction", com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, com.badlogic.gdx.scenes.scene2d.actions.VisibleAction.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3097),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.actions.VisibleAction", t);
  }
  private void c157() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup", 3098, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, com.badlogic.gdx.scenes.scene2d.utils.Layout.class, com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("prefWidth", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, float.class, false, false, true, false, false, false, false, false, 3100, 3099, null), 
      new Field("prefHeight", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, float.class, false, false, true, false, false, false, false, false, 3102, 3101, null), 
      new Field("sizeInvalid", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3104, 3103, null), 
      new Field("alignment", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, int.class, false, false, true, false, false, false, false, false, 3106, 3105, null), 
      new Field("reverse", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3108, 3107, null), 
      new Field("round", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3110, 3109, null), 
      new Field("spacing", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, float.class, false, false, true, false, false, false, false, false, 3112, 3111, null), 
  };
  t.methods = new Method[] {
      new Method("setAlignment", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, new Parameter[] {alignment__I, }, false, false, false, false, false, false, true, false, false, true, false, 3113),
      new Method("setReverse", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, new Parameter[] {reverse__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3114),
      new Method("invalidate", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3115),
      new Method("computeSize", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 3116),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3117),
      new Method("getPrefWidth", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3118),
      new Method("getPrefHeight", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3119),
      new Method("setSpacing", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, new Parameter[] {spacing__F, }, false, false, false, false, false, false, true, false, false, true, false, 3120),
      new Method("setRound", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, void.class, new Parameter[] {round__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3121),
  };
  t.constructors = new Constructor[] {
      new Constructor("HorizontalGroup", com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3122),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup", t);
  }
  private void c158() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.ui.Stack", 3123, com.badlogic.gdx.scenes.scene2d.ui.Stack.class, com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, com.badlogic.gdx.scenes.scene2d.utils.Layout.class, com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("prefWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3125, 3124, null), 
      new Field("prefHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3127, 3126, null), 
      new Field("minWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3129, 3128, null), 
      new Field("minHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3131, 3130, null), 
      new Field("maxWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3133, 3132, null), 
      new Field("maxHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, false, false, true, false, false, false, false, false, 3135, 3134, null), 
      new Field("sizeInvalid", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, boolean.class, false, false, true, false, false, false, false, false, 3137, 3136, null), 
  };
  t.methods = new Method[] {
      new Method("invalidate", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3138),
      new Method("computeSize", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, void.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 3139),
      new Method("add", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, void.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3140),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3141),
      new Method("getPrefWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3142),
      new Method("getPrefHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3143),
      new Method("getMinWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3144),
      new Method("getMinHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3145),
      new Method("getMaxWidth", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3146),
      new Method("getMaxHeight", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3147),
  };
  t.constructors = new Constructor[] {
      new Constructor("Stack", com.badlogic.gdx.scenes.scene2d.ui.Stack.class, com.badlogic.gdx.scenes.scene2d.ui.Stack.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3148),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.ui.Stack", t);
  }
  private void c159() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup", 3149, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, com.badlogic.gdx.scenes.scene2d.utils.Layout.class, com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("prefWidth", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, float.class, false, false, true, false, false, false, false, false, 3151, 3150, null), 
      new Field("prefHeight", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, float.class, false, false, true, false, false, false, false, false, 3153, 3152, null), 
      new Field("sizeInvalid", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3155, 3154, null), 
      new Field("alignment", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, int.class, false, false, true, false, false, false, false, false, 3157, 3156, null), 
      new Field("reverse", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3159, 3158, null), 
      new Field("round", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3161, 3160, null), 
      new Field("spacing", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, float.class, false, false, true, false, false, false, false, false, 3163, 3162, null), 
  };
  t.methods = new Method[] {
      new Method("setAlignment", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, new Parameter[] {alignment__I, }, false, false, false, false, false, false, true, false, false, true, false, 3164),
      new Method("setReverse", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, new Parameter[] {reverse__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3165),
      new Method("invalidate", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3166),
      new Method("computeSize", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, true, false, false, false, false, true, false, 3167),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3168),
      new Method("getPrefWidth", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3169),
      new Method("getPrefHeight", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3170),
      new Method("setSpacing", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, new Parameter[] {spacing__F, }, false, false, false, false, false, false, true, false, false, true, false, 3171),
      new Method("setRound", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, void.class, new Parameter[] {round__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3172),
  };
  t.constructors = new Constructor[] {
      new Constructor("VerticalGroup", com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3173),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup", t);
  }
  private void c160() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.ui.Widget", 3174, com.badlogic.gdx.scenes.scene2d.ui.Widget.class, com.badlogic.gdx.scenes.scene2d.Actor.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.utils.Layout.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("needsLayout", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, boolean.class, false, false, true, false, false, false, false, false, 3176, 3175, null), 
      new Field("fillParent", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, boolean.class, false, false, true, false, false, false, false, false, 3178, 3177, null), 
      new Field("layoutEnabled", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, boolean.class, false, false, true, false, false, false, false, false, 3180, 3179, null), 
  };
  t.methods = new Method[] {
      new Method("getMinWidth", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3181),
      new Method("getMinHeight", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3182),
      new Method("getPrefWidth", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3183),
      new Method("getPrefHeight", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3184),
      new Method("getMaxWidth", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3185),
      new Method("getMaxHeight", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3186),
      new Method("setLayoutEnabled", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, new Parameter[] {enabled__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3187),
      new Method("validate", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3188),
      new Method("needsLayout", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3189),
      new Method("invalidate", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3190),
      new Method("invalidateHierarchy", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3191),
      new Method("sizeChanged", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3192),
      new Method("pack", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3193),
      new Method("setFillParent", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, new Parameter[] {fillParent__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3194),
      new Method("draw", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, parentAlpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 3195),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3196),
  };
  t.constructors = new Constructor[] {
      new Constructor("Widget", com.badlogic.gdx.scenes.scene2d.ui.Widget.class, com.badlogic.gdx.scenes.scene2d.ui.Widget.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3197),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.ui.Widget", t);
  }
  private void c161() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup", 3198, com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, com.badlogic.gdx.scenes.scene2d.Group.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.utils.Layout.class, com.badlogic.gdx.scenes.scene2d.Group.class, com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, com.badlogic.gdx.scenes.scene2d.Actor.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("needsLayout", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3200, 3199, null), 
      new Field("fillParent", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3202, 3201, null), 
      new Field("layoutEnabled", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, boolean.class, false, false, true, false, false, false, false, false, 3204, 3203, null), 
  };
  t.methods = new Method[] {
      new Method("getMinWidth", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3205),
      new Method("getMinHeight", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3206),
      new Method("getPrefWidth", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3207),
      new Method("getPrefHeight", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3208),
      new Method("getMaxWidth", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3209),
      new Method("getMaxHeight", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3210),
      new Method("setLayoutEnabled", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, new Parameter[] {enabled__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3211),
      new Method("setLayoutEnabled", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, new Parameter[] {parent__Lcom_badlogic_gdx_scenes_scene2d_Group_, enabled__Z, }, false, false, false, false, true, false, false, false, false, true, false, 3212),
      new Method("validate", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3213),
      new Method("needsLayout", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3214),
      new Method("invalidate", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3215),
      new Method("invalidateHierarchy", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3216),
      new Method("childrenChanged", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3217),
      new Method("sizeChanged", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 3218),
      new Method("pack", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3219),
      new Method("setFillParent", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, new Parameter[] {fillParent__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3220),
      new Method("layout", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3221),
      new Method("draw", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, parentAlpha__F, }, false, false, false, false, false, false, true, false, false, true, false, 3222),
  };
  t.constructors = new Constructor[] {
      new Constructor("WidgetGroup", com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3223),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup", t);
  }
  private void c162() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", 3224, com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tmpCoords", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.math.Vector2.class, true, true, false, false, false, true, false, false, 3226, 3225, null), 
      new Field("detector", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.input.GestureDetector.class, true, false, true, false, false, false, false, false, 3228, 3227, null), 
      new Field("event", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.InputEvent.class, false, true, false, false, false, false, false, false, 3230, 3229, null), 
      new Field("actor", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3232, 3231, null), 
      new Field("touchDownTarget", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3234, 3233, null), 
  };
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, boolean.class, new Parameter[] {e__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 3235),
      new Method("touchDown", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3236),
      new Method("touchUp", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3237),
      new Method("tap", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, count__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3238),
      new Method("longPress", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, boolean.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3239),
      new Method("fling", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, velocityX__F, velocityY__F, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3240),
      new Method("pan", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, deltaX__F, deltaY__F, }, false, false, false, false, false, false, true, false, false, true, false, 3241),
      new Method("zoom", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, initialDistance__F, distance__F, }, false, false, false, false, false, false, true, false, false, true, false, 3242),
      new Method("pinch", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, initialPointer1__Lcom_badlogic_gdx_math_Vector2_, initialPointer2__Lcom_badlogic_gdx_math_Vector2_, pointer1__Lcom_badlogic_gdx_math_Vector2_, pointer2__Lcom_badlogic_gdx_math_Vector2_, }, false, false, false, false, false, false, true, false, false, true, false, 3243),
      new Method("getGestureDetector", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.input.GestureDetector.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3244),
      new Method("getTouchDownTarget", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3245),
  };
  t.constructors = new Constructor[] {
      new Constructor("ActorGestureListener", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3246),
      new Constructor("ActorGestureListener", com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.class, new Parameter[] {halfTapSquareSize__F, tapCountInterval__F, longPressDuration__F, maxFlingDelay__F, }, false, false, false, false, false, false, true, false, false, false, true, 3247),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", t);
  }
  private void c163() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.Align", 3248, com.badlogic.gdx.scenes.scene2d.utils.Align.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("center", com.badlogic.gdx.scenes.scene2d.utils.Align.class, int.class, true, false, false, false, true, true, false, false, 3250, 3249, null), 
      new Field("top", com.badlogic.gdx.scenes.scene2d.utils.Align.class, int.class, true, false, false, false, true, true, false, false, 3252, 3251, null), 
      new Field("bottom", com.badlogic.gdx.scenes.scene2d.utils.Align.class, int.class, true, false, false, false, true, true, false, false, 3254, 3253, null), 
      new Field("left", com.badlogic.gdx.scenes.scene2d.utils.Align.class, int.class, true, false, false, false, true, true, false, false, 3256, 3255, null), 
      new Field("right", com.badlogic.gdx.scenes.scene2d.utils.Align.class, int.class, true, false, false, false, true, true, false, false, 3258, 3257, null), 
  };
  t.constructors = new Constructor[] {
      new Constructor("Align", com.badlogic.gdx.scenes.scene2d.utils.Align.class, com.badlogic.gdx.scenes.scene2d.utils.Align.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3259),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.Align", t);
  }
  private void c164() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable", 3260, com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.utils.Drawable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("leftWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3262, 3261, null), 
      new Field("rightWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3264, 3263, null), 
      new Field("topHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3266, 3265, null), 
      new Field("bottomHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3268, 3267, null), 
      new Field("minWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3270, 3269, null), 
      new Field("minHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, false, false, true, false, false, false, false, false, 3272, 3271, null), 
  };
  t.methods = new Method[] {
      new Method("draw", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3273),
      new Method("getLeftWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3274),
      new Method("setLeftWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {leftWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 3275),
      new Method("getRightWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3276),
      new Method("setRightWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {rightWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 3277),
      new Method("getTopHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3278),
      new Method("setTopHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {topHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 3279),
      new Method("getBottomHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3280),
      new Method("setBottomHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {bottomHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 3281),
      new Method("getMinWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3282),
      new Method("setMinWidth", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {minWidth__F, }, false, false, false, false, false, false, true, false, false, true, false, 3283),
      new Method("getMinHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3284),
      new Method("setMinHeight", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, void.class, new Parameter[] {minHeight__F, }, false, false, false, false, false, false, true, false, false, true, false, 3285),
  };
  t.constructors = new Constructor[] {
      new Constructor("BaseDrawable", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3286),
      new Constructor("BaseDrawable", com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, new Parameter[] {drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_Drawable_, }, false, false, false, false, false, false, true, false, false, false, true, 3287),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable", t);
  }
  private void c165() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.ChangeListener", 3288, com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 3289),
      new Method("changed", com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_utils_ChangeListener$ChangeEvent_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, true, false, false, false, false, false, true, true, false, true, false, 3290),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.ChangeListener", t);
  }
  private void c166() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent", 3291, com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent.class, com.badlogic.gdx.scenes.scene2d.Event.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.constructors = new Constructor[] {
      new Constructor("ChangeEvent", com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent.class, com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3292),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent", t);
  }
  private void c167() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.ClickListener", 3293, com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, com.badlogic.gdx.scenes.scene2d.InputListener.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.InputListener.class, com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, false, false, true, false, false, false, false, false, 3295, 3294, null), 
      new Field("touchDownX", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, false, false, true, false, false, false, false, false, 3297, 3296, null), 
      new Field("touchDownY", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, false, false, true, false, false, false, false, false, 3299, 3298, null), 
      new Field("pressedPointer", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, false, false, true, false, false, false, false, false, 3301, 3300, null), 
      new Field("pressedButton", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, false, false, true, false, false, false, false, false, 3303, 3302, null), 
      new Field("button", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, false, false, true, false, false, false, false, false, 3305, 3304, null), 
      new Field("pressed", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, false, false, true, false, false, false, false, false, 3307, 3306, null), 
      new Field("over", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, false, false, true, false, false, false, false, false, 3309, 3308, null), 
      new Field("cancelled", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, false, false, true, false, false, false, false, false, 3311, 3310, null), 
      new Field("tapCountInterval", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, long.class, false, false, true, false, false, false, false, false, 3313, 3312, null), 
      new Field("tapCount", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, false, false, true, false, false, false, false, false, 3315, 3314, null), 
      new Field("lastTapTime", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, long.class, false, false, true, false, false, false, false, false, 3317, 3316, null), 
  };
  t.methods = new Method[] {
      new Method("touchDown", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3318),
      new Method("touchDragged", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 3319),
      new Method("touchUp", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3320),
      new Method("enter", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, fromActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3321),
      new Method("exit", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, toActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3322),
      new Method("cancel", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3323),
      new Method("clicked", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3324),
      new Method("isOver", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, new Parameter[] {actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3325),
      new Method("isOver", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3326),
      new Method("inTapSquare", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, new Parameter[] {x__F, y__F, }, false, false, false, false, false, false, true, false, false, true, false, 3327),
      new Method("inTapSquare", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3328),
      new Method("invalidateTapSquare", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3329),
      new Method("isPressed", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3330),
      new Method("setTapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {halfTapSquareSize__F, }, false, false, false, false, false, false, true, false, false, true, false, 3331),
      new Method("getTapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3332),
      new Method("setTapCountInterval", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {tapCountInterval__F, }, false, false, false, false, false, false, true, false, false, true, false, 3333),
      new Method("getTapCount", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3334),
      new Method("getTouchDownX", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3335),
      new Method("getTouchDownY", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3336),
      new Method("getPressedButton", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3337),
      new Method("getPressedPointer", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3338),
      new Method("getButton", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3339),
      new Method("setButton", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, void.class, new Parameter[] {button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3340),
  };
  t.constructors = new Constructor[] {
      new Constructor("ClickListener", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3341),
      new Constructor("ClickListener", com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, com.badlogic.gdx.scenes.scene2d.utils.ClickListener.class, new Parameter[] {button__I, }, false, false, false, false, false, false, true, false, false, false, true, 3342),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.ClickListener", t);
  }
  private void c168() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.Cullable", 3343, com.badlogic.gdx.scenes.scene2d.utils.Cullable.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.Cullable", t);
  }
  private void c169() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.Disableable", 3344, com.badlogic.gdx.scenes.scene2d.utils.Disableable.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.Disableable", t);
  }
  private void c170() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", 3345, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tmpVector", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.math.Vector2.class, true, true, false, false, false, true, false, false, 3347, 3346, null), 
      new Field("payload", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, false, true, false, false, false, false, false, false, 3349, 3348, null), 
      new Field("dragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3351, 3350, null), 
      new Field("target", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, false, true, false, false, false, false, false, false, 3353, 3352, null), 
      new Field("isValidTarget", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, boolean.class, false, true, false, false, false, false, false, false, 3355, 3354, null), 
      new Field("targets", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.utils.Array.class, false, true, false, false, false, false, false, false, 3357, 3356, new Class[] {com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, }), 
      new Field("sourceListeners", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.utils.ObjectMap.class, false, true, false, false, false, false, false, false, 3359, 3358, new Class[] {com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, }), 
      new Field("tapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, float.class, false, false, true, false, false, false, false, false, 3361, 3360, null), 
      new Field("button", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, int.class, false, false, true, false, false, false, false, false, 3363, 3362, null), 
      new Field("dragActorX", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, float.class, false, true, false, false, false, false, false, false, 3365, 3364, null), 
      new Field("dragActorY", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, float.class, false, true, false, false, false, false, false, false, 3367, 3366, null), 
      new Field("touchOffsetX", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, float.class, false, true, false, false, false, false, false, false, 3369, 3368, null), 
      new Field("touchOffsetY", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, float.class, false, true, false, false, false, false, false, false, 3371, 3370, null), 
      new Field("dragStartTime", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, long.class, false, true, false, false, false, false, false, false, 3373, 3372, null), 
      new Field("dragTime", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, int.class, false, true, false, false, false, false, false, false, 3375, 3374, null), 
      new Field("activePointer", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, int.class, false, true, false, false, false, false, false, false, 3377, 3376, null), 
  };
  t.methods = new Method[] {
      new Method("addSource", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_, }, false, false, false, false, false, false, true, false, false, true, false, 3378),
      new Method("removeSource", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_, }, false, false, false, false, false, false, true, false, false, true, false, 3379),
      new Method("addTarget", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {target__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Target_, }, false, false, false, false, false, false, true, false, false, true, false, 3380),
      new Method("removeTarget", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {target__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Target_, }, false, false, false, false, false, false, true, false, false, true, false, 3381),
      new Method("clear", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3382),
      new Method("setTapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {halfTapSquareSize__F, }, false, false, false, false, false, false, true, false, false, true, false, 3383),
      new Method("setButton", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3384),
      new Method("setDragActorPosition", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {dragActorX__F, dragActorY__F, }, false, false, false, false, false, false, true, false, false, true, false, 3385),
      new Method("setTouchOffset", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {touchOffsetX__F, touchOffsetY__F, }, false, false, false, false, false, false, true, false, false, true, false, 3386),
      new Method("isDragging", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3387),
      new Method("getDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3388),
      new Method("setDragTime", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, void.class, new Parameter[] {dragMillis__I, }, false, false, false, false, false, false, true, false, false, true, false, 3389),
  };
  t.constructors = new Constructor[] {
      new Constructor("DragAndDrop", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3390),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", t);
  }
  private void c171() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload", 3391, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("dragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3393, 3392, null), 
      new Field("validDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3395, 3394, null), 
      new Field("invalidDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, true, false, false, false, false, false, false, 3397, 3396, null), 
      new Field("object", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, java.lang.Object.class, false, true, false, false, false, false, false, false, 3399, 3398, null), 
  };
  t.methods = new Method[] {
      new Method("setDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, void.class, new Parameter[] {dragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3400),
      new Method("getDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3401),
      new Method("setValidDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, void.class, new Parameter[] {validDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3402),
      new Method("getValidDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3403),
      new Method("setInvalidDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, void.class, new Parameter[] {invalidDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3404),
      new Method("getInvalidDragActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3405),
      new Method("getObject", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3406),
      new Method("setObject", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, void.class, new Parameter[] {object__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3407),
  };
  t.constructors = new Constructor[] {
      new Constructor("Payload", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3408),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload", t);
  }
  private void c172() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source", 3409, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("actor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, com.badlogic.gdx.scenes.scene2d.Actor.class, true, true, false, false, false, false, false, false, 3411, 3410, null), 
  };
  t.methods = new Method[] {
      new Method("dragStart", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, true, false, false, false, false, false, true, true, false, true, false, 3412),
      new Method("dragStop", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, target__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Target_, }, false, false, false, false, false, false, true, false, false, true, false, 3413),
      new Method("getActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3414),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source", t);
  }
  private void c173() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target", 3415, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("actor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, com.badlogic.gdx.scenes.scene2d.Actor.class, true, true, false, false, false, false, false, false, 3417, 3416, null), 
  };
  t.methods = new Method[] {
      new Method("drag", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, boolean.class, new Parameter[] {source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_, payload__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Payload_, x__F, y__F, pointer__I, }, true, false, false, false, false, false, true, true, false, true, false, 3418),
      new Method("reset", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, void.class, new Parameter[] {source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_, payload__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Payload_, }, false, false, false, false, false, false, true, false, false, true, false, 3419),
      new Method("drop", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, void.class, new Parameter[] {source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_, payload__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Payload_, x__F, y__F, pointer__I, }, true, false, false, false, false, false, true, true, false, true, false, 3420),
      new Method("getActor", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3421),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target", t);
  }
  private void c174() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.DragListener", 3422, com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, com.badlogic.gdx.scenes.scene2d.InputListener.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.InputListener.class, com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("tapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, false, false, true, false, false, false, false, false, 3424, 3423, null), 
      new Field("touchDownX", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, false, false, true, false, false, false, false, false, 3426, 3425, null), 
      new Field("touchDownY", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, false, false, true, false, false, false, false, false, 3428, 3427, null), 
      new Field("pressedPointer", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, int.class, false, false, true, false, false, false, false, false, 3430, 3429, null), 
      new Field("button", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, int.class, false, false, true, false, false, false, false, false, 3432, 3431, null), 
      new Field("dragging", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, boolean.class, false, false, true, false, false, false, false, false, 3434, 3433, null), 
      new Field("deltaX", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, false, false, true, false, false, false, false, false, 3436, 3435, null), 
      new Field("deltaY", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, false, false, true, false, false, false, false, false, 3438, 3437, null), 
  };
  t.methods = new Method[] {
      new Method("touchDown", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3439),
      new Method("touchDragged", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 3440),
      new Method("touchUp", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3441),
      new Method("dragStart", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 3442),
      new Method("drag", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 3443),
      new Method("dragStop", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_, x__F, y__F, pointer__I, }, false, false, false, false, false, false, true, false, false, true, false, 3444),
      new Method("cancel", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3445),
      new Method("isDragging", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3446),
      new Method("setTapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {halfTapSquareSize__F, }, false, false, false, false, false, false, true, false, false, true, false, 3447),
      new Method("getTapSquareSize", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3448),
      new Method("getTouchDownX", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3449),
      new Method("getTouchDownY", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3450),
      new Method("getDeltaX", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3451),
      new Method("getDeltaY", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3452),
      new Method("getButton", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3453),
      new Method("setButton", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, void.class, new Parameter[] {button__I, }, false, false, false, false, false, false, true, false, false, true, false, 3454),
  };
  t.constructors = new Constructor[] {
      new Constructor("DragListener", com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, com.badlogic.gdx.scenes.scene2d.utils.DragListener.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3455),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.DragListener", t);
  }
  private void c175() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.Drawable", 3456, com.badlogic.gdx.scenes.scene2d.utils.Drawable.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.Drawable", t);
  }
  private void c176() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.FocusListener", 3457, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.EventListener.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.methods = new Method[] {
      new Method("handle", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.class, boolean.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_Event_, }, false, false, false, false, false, false, true, false, false, true, false, 3458),
      new Method("keyboardFocusChanged", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, focused__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3459),
      new Method("scrollFocusChanged", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.class, void.class, new Parameter[] {event__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent_, actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, focused__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3460),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.FocusListener", t);
  }
  private void c177() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", 3461, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.Event.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.Event.class, com.badlogic.gdx.utils.Pool.Poolable.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("focused", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, boolean.class, false, false, true, false, false, false, false, false, 3463, 3462, null), 
      new Field("type", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, false, false, true, false, false, false, false, false, 3465, 3464, null), 
      new Field("relatedActor", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.Actor.class, false, false, true, false, false, false, false, false, 3467, 3466, null), 
  };
  t.methods = new Method[] {
      new Method("reset", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3468),
      new Method("isFocused", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3469),
      new Method("setFocused", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, void.class, new Parameter[] {focused__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3470),
      new Method("getType", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3471),
      new Method("setType", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, void.class, new Parameter[] {focusType__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent$Type_, }, false, false, false, false, false, false, true, false, false, true, false, 3472),
      new Method("getRelatedActor", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.Actor.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3473),
      new Method("setRelatedActor", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, void.class, new Parameter[] {relatedActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_, }, false, false, false, false, false, false, true, false, false, true, false, 3474),
  };
  t.constructors = new Constructor[] {
      new Constructor("FocusEvent", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3475),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", t);
  }
  private void c178() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type", 3476, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, java.lang.Enum.class, new HashSet<Class>(Arrays.asList(java.lang.Enum.class, java.lang.Comparable.class, java.io.Serializable.class)));
  t.isEnum = true;
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("keyboard", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, true, false, false, false, true, true, false, false, 3478, 3477, null), 
      new Field("scroll", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, true, false, false, false, true, true, false, false, 3480, 3479, null), 
  };
  t.methods = new Method[] {
      new Method("values", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[].class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 3481),
      new Method("valueOf", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3482),
  };
  t.enumConstants = new Object[2];
  t.enumConstants[0] = com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.keyboard;
  t.enumConstants[1] = com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.scroll;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type", t);
  }
  private void c179() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[]", 3483, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[].class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[]", t);
  }
  private void c180() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.Layout", 3484, com.badlogic.gdx.scenes.scene2d.utils.Layout.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.scenes.scene2d.utils.Layout", t);
  }
  private void c181() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable", 3485, com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.Drawable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("patch", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, false, false, true, false, false, false, false, false, 3487, 3486, null), 
  };
  t.methods = new Method[] {
      new Method("draw", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, void.class, new Parameter[] {batch__Lcom_badlogic_gdx_graphics_g2d_Batch_, x__F, y__F, width__F, height__F, }, false, false, false, false, false, false, true, false, false, true, false, 3488),
      new Method("setPatch", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, void.class, new Parameter[] {patch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_, }, false, false, false, false, false, false, true, false, false, true, false, 3489),
      new Method("getPatch", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.graphics.g2d.NinePatch.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3490),
  };
  t.constructors = new Constructor[] {
      new Constructor("NinePatchDrawable", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3491),
      new Constructor("NinePatchDrawable", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, new Parameter[] {patch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_, }, false, false, false, false, false, false, true, false, false, false, true, 3492),
      new Constructor("NinePatchDrawable", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, new Parameter[] {drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_NinePatchDrawable_, }, false, false, false, false, false, false, true, false, false, false, true, 3493),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable", t);
  }
  private void c182() {
  Type t = new Type("com.badlogic.gdx.scenes.scene2d.utils.ScissorStack", 3494, com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("scissors", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.utils.Array.class, false, false, true, false, false, true, false, false, 3496, 3495, new Class[] {com.badlogic.gdx.math.Rectangle.class, }), 
      new Field("tmp", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.math.Vector3.class, false, true, false, false, false, true, false, false, 3498, 3497, null), 
      new Field("viewport", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.math.Rectangle.class, true, true, false, false, false, true, false, false, 3500, 3499, null), 
  };
  t.methods = new Method[] {
      new Method("pushScissors", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, boolean.class, new Parameter[] {scissor__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, false, false, true, false, false, true, false, 3501),
      new Method("popScissors", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.math.Rectangle.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 3502),
      new Method("fix", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, void.class, new Parameter[] {rect__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, true, false, false, false, false, true, false, 3503),
      new Method("calculateScissors", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, void.class, new Parameter[] {camera__Lcom_badlogic_gdx_graphics_Camera_, viewportX__F, viewportY__F, viewportWidth__F, viewportHeight__F, batchTransform__Lcom_badlogic_gdx_math_Matrix4_, area__Lcom_badlogic_gdx_math_Rectangle_, scissor__Lcom_badlogic_gdx_math_Rectangle_, }, false, false, true, false, false, false, true, false, false, true, false, 3504),
      new Method("getViewport", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.math.Rectangle.class, EMPTY_PARAMETERS,false, false, true, false, false, false, true, false, false, true, false, 3505),
      new Method("toWindowCoordinates", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.math.Vector2.class, new Parameter[] {camera__Lcom_badlogic_gdx_graphics_Camera_, transformMatrix__Lcom_badlogic_gdx_math_Matrix4_, point__Lcom_badlogic_gdx_math_Vector2_, }, false, false, true, false, false, false, true, false, false, true, false, 3506),
  };
  t.constructors = new Constructor[] {
      new Constructor("ScissorStack", com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, com.badlogic.gdx.scenes.scene2d.utils.ScissorStack.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3507),
  };
  types.put("com.badlogic.gdx.scenes.scene2d.utils.ScissorStack", t);
  }
  private void c183() {
  Type t = new Type("com.badlogic.gdx.utils.Array", 3508, com.badlogic.gdx.utils.Array.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("items", com.badlogic.gdx.utils.Array.class, java.lang.Object[].class, false, false, false, false, true, false, false, false, 3510, 3509, null), 
      new Field("size", com.badlogic.gdx.utils.Array.class, int.class, false, false, false, false, true, false, false, false, 3512, 3511, null), 
      new Field("ordered", com.badlogic.gdx.utils.Array.class, boolean.class, false, false, false, false, true, false, false, false, 3514, 3513, null), 
      new Field("iterable", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.ArrayIterable.class, false, false, true, false, false, false, false, false, 3516, 3515, null), 
      new Field("predicateIterable", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Predicate.PredicateIterable.class, false, false, true, false, false, false, false, false, 3518, 3517, null), 
  };
  t.methods = new Method[] {
      new Method("add", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3519),
      new Method("addAll", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, true, false, 3520),
      new Method("addAll", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 3521),
      new Method("addAll", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, true, true, false, 3522),
      new Method("addAll", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 3523),
      new Method("get", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3524),
      new Method("set", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3525),
      new Method("insert", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3526),
      new Method("swap", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__I, arg1__I, }, false, false, false, false, false, false, true, false, false, true, false, 3527),
      new Method("contains", com.badlogic.gdx.utils.Array.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3528),
      new Method("indexOf", com.badlogic.gdx.utils.Array.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3529),
      new Method("lastIndexOf", com.badlogic.gdx.utils.Array.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3530),
      new Method("removeValue", com.badlogic.gdx.utils.Array.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3531),
      new Method("removeIndex", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3532),
      new Method("removeAll", com.badlogic.gdx.utils.Array.class, boolean.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3533),
      new Method("pop", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3534),
      new Method("peek", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3535),
      new Method("first", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3536),
      new Method("clear", com.badlogic.gdx.utils.Array.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3537),
      new Method("shrink", com.badlogic.gdx.utils.Array.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3538),
      new Method("ensureCapacity", com.badlogic.gdx.utils.Array.class, java.lang.Object[].class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3539),
      new Method("resize", com.badlogic.gdx.utils.Array.class, java.lang.Object[].class, new Parameter[] {arg0__I, }, false, false, false, false, false, true, false, false, false, true, false, 3540),
      new Method("sort", com.badlogic.gdx.utils.Array.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3541),
      new Method("sort", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__Ljava_util_Comparator_, }, false, false, false, false, false, false, true, false, false, true, false, 3542),
      new Method("selectRanked", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_util_Comparator_, arg1__I, }, false, false, false, false, false, false, true, false, false, true, false, 3543),
      new Method("selectRankedIndex", com.badlogic.gdx.utils.Array.class, int.class, new Parameter[] {arg0__Ljava_util_Comparator_, arg1__I, }, false, false, false, false, false, false, true, false, false, true, false, 3544),
      new Method("reverse", com.badlogic.gdx.utils.Array.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3545),
      new Method("shuffle", com.badlogic.gdx.utils.Array.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3546),
      new Method("iterator", com.badlogic.gdx.utils.Array.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3547),
      new Method("select", com.badlogic.gdx.utils.Array.class, java.lang.Iterable.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Predicate_, }, false, false, false, false, false, false, true, false, false, true, false, 3548),
      new Method("truncate", com.badlogic.gdx.utils.Array.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3549),
      new Method("random", com.badlogic.gdx.utils.Array.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3550),
      new Method("toArray", com.badlogic.gdx.utils.Array.class, java.lang.Object[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3551),
      new Method("toArray", com.badlogic.gdx.utils.Array.class, java.lang.Object[].class, new Parameter[] {arg0__Ljava_lang_Class_, }, false, false, false, false, false, false, true, false, false, true, false, 3552),
      new Method("equals", com.badlogic.gdx.utils.Array.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3553),
      new Method("toString", com.badlogic.gdx.utils.Array.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3554),
      new Method("toString", com.badlogic.gdx.utils.Array.class, java.lang.String.class, new Parameter[] {arg0__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 3555),
      new Method("of", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Ljava_lang_Class_, }, false, false, true, false, false, false, true, false, false, true, false, 3556),
      new Method("of", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Z, arg1__I, arg2__Ljava_lang_Class_, }, false, false, true, false, false, false, true, false, false, true, false, 3557),
  };
  t.constructors = new Constructor[] {
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3558),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 3559),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Z, arg1__I, }, false, false, false, false, false, false, true, false, false, false, true, 3560),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Z, arg1__I, arg2__Ljava_lang_Class_, }, false, false, false, false, false, false, true, false, false, false, true, 3561),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Ljava_lang_Class_, }, false, false, false, false, false, false, true, false, false, false, true, 3562),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, false, true, 3563),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0___Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, false, true, 3564),
      new Constructor("Array", com.badlogic.gdx.utils.Array.class, com.badlogic.gdx.utils.Array.class, new Parameter[] {arg0__Z, arg1___Ljava_lang_Object_, arg2__I, arg3__I, }, false, false, false, false, false, false, true, false, false, false, true, 3565),
  };
  types.put("com.badlogic.gdx.utils.Array", t);
  }
  private void c184() {
  Type t = new Type("com.badlogic.gdx.utils.Array.ArrayIterable", 3566, com.badlogic.gdx.utils.Array.ArrayIterable.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("array", com.badlogic.gdx.utils.Array.ArrayIterable.class, com.badlogic.gdx.utils.Array.class, true, false, true, false, false, false, false, false, 3568, 3567, null), 
      new Field("allowRemove", com.badlogic.gdx.utils.Array.ArrayIterable.class, boolean.class, true, false, true, false, false, false, false, false, 3570, 3569, null), 
      new Field("iterator1", com.badlogic.gdx.utils.Array.ArrayIterable.class, com.badlogic.gdx.utils.Array.ArrayIterator.class, false, false, true, false, false, false, false, false, 3572, 3571, null), 
      new Field("iterator2", com.badlogic.gdx.utils.Array.ArrayIterable.class, com.badlogic.gdx.utils.Array.ArrayIterator.class, false, false, true, false, false, false, false, false, 3574, 3573, null), 
  };
  t.methods = new Method[] {
      new Method("iterator", com.badlogic.gdx.utils.Array.ArrayIterable.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3575),
  };
  t.constructors = new Constructor[] {
      new Constructor("ArrayIterable", com.badlogic.gdx.utils.Array.ArrayIterable.class, com.badlogic.gdx.utils.Array.ArrayIterable.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, false, true, 3576),
      new Constructor("ArrayIterable", com.badlogic.gdx.utils.Array.ArrayIterable.class, com.badlogic.gdx.utils.Array.ArrayIterable.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__Z, }, false, false, false, false, false, false, true, false, false, false, true, 3577),
  };
  types.put("com.badlogic.gdx.utils.Array.ArrayIterable", t);
  }
  private void c185() {
  Type t = new Type("com.badlogic.gdx.utils.Array.ArrayIterator", 3578, com.badlogic.gdx.utils.Array.ArrayIterator.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.util.Iterator.class, java.lang.Iterable.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("array", com.badlogic.gdx.utils.Array.ArrayIterator.class, com.badlogic.gdx.utils.Array.class, true, false, true, false, false, false, false, false, 3580, 3579, null), 
      new Field("allowRemove", com.badlogic.gdx.utils.Array.ArrayIterator.class, boolean.class, true, false, true, false, false, false, false, false, 3582, 3581, null), 
      new Field("index", com.badlogic.gdx.utils.Array.ArrayIterator.class, int.class, false, true, false, false, false, false, false, false, 3584, 3583, null), 
      new Field("valid", com.badlogic.gdx.utils.Array.ArrayIterator.class, boolean.class, false, true, false, false, false, false, false, false, 3586, 3585, null), 
  };
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.Array.ArrayIterator.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3587),
      new Method("next", com.badlogic.gdx.utils.Array.ArrayIterator.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3588),
      new Method("remove", com.badlogic.gdx.utils.Array.ArrayIterator.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3589),
      new Method("reset", com.badlogic.gdx.utils.Array.ArrayIterator.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3590),
      new Method("iterator", com.badlogic.gdx.utils.Array.ArrayIterator.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3591),
  };
  t.constructors = new Constructor[] {
      new Constructor("ArrayIterator", com.badlogic.gdx.utils.Array.ArrayIterator.class, com.badlogic.gdx.utils.Array.ArrayIterator.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, false, true, 3592),
      new Constructor("ArrayIterator", com.badlogic.gdx.utils.Array.ArrayIterator.class, com.badlogic.gdx.utils.Array.ArrayIterator.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, arg1__Z, }, false, false, false, false, false, false, true, false, false, false, true, 3593),
  };
  types.put("com.badlogic.gdx.utils.Array.ArrayIterator", t);
  }
  private void c186() {
  Type t = new Type("com.badlogic.gdx.utils.ArrayMap", 3594, com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("keys", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object[].class, false, false, false, false, true, false, false, false, 3596, 3595, null), 
      new Field("values", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object[].class, false, false, false, false, true, false, false, false, 3598, 3597, null), 
      new Field("size", com.badlogic.gdx.utils.ArrayMap.class, int.class, false, false, false, false, true, false, false, false, 3600, 3599, null), 
      new Field("ordered", com.badlogic.gdx.utils.ArrayMap.class, boolean.class, false, false, false, false, true, false, false, false, 3602, 3601, null), 
      new Field("entries1", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Entries.class, false, false, true, false, false, false, false, false, 3604, 3603, null), 
      new Field("entries2", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Entries.class, false, false, true, false, false, false, false, false, 3606, 3605, null), 
      new Field("valuesIter1", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Values.class, false, false, true, false, false, false, false, false, 3608, 3607, null), 
      new Field("valuesIter2", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Values.class, false, false, true, false, false, false, false, false, 3610, 3609, null), 
      new Field("keysIter1", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Keys.class, false, false, true, false, false, false, false, false, 3612, 3611, null), 
      new Field("keysIter2", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Keys.class, false, false, true, false, false, false, false, false, 3614, 3613, null), 
  };
  t.methods = new Method[] {
      new Method("put", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3615),
      new Method("put", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 3616),
      new Method("putAll", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, }, false, false, false, false, false, false, true, false, false, true, false, 3617),
      new Method("putAll", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, arg1__I, arg2__I, }, false, false, false, false, false, false, true, false, false, true, false, 3618),
      new Method("get", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3619),
      new Method("getKey", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3620),
      new Method("getKeyAt", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3621),
      new Method("getValueAt", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3622),
      new Method("firstKey", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3623),
      new Method("firstValue", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3624),
      new Method("setKey", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3625),
      new Method("setValue", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3626),
      new Method("insert", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, arg2__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3627),
      new Method("containsKey", com.badlogic.gdx.utils.ArrayMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3628),
      new Method("containsValue", com.badlogic.gdx.utils.ArrayMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3629),
      new Method("indexOfKey", com.badlogic.gdx.utils.ArrayMap.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3630),
      new Method("indexOfValue", com.badlogic.gdx.utils.ArrayMap.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3631),
      new Method("removeKey", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3632),
      new Method("removeValue", com.badlogic.gdx.utils.ArrayMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3633),
      new Method("removeIndex", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3634),
      new Method("peekKey", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3635),
      new Method("peekValue", com.badlogic.gdx.utils.ArrayMap.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3636),
      new Method("clear", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3637),
      new Method("clear", com.badlogic.gdx.utils.ArrayMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3638),
      new Method("shrink", com.badlogic.gdx.utils.ArrayMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3639),
      new Method("ensureCapacity", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3640),
      new Method("resize", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, true, false, false, false, true, false, 3641),
      new Method("reverse", com.badlogic.gdx.utils.ArrayMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3642),
      new Method("shuffle", com.badlogic.gdx.utils.ArrayMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3643),
      new Method("truncate", com.badlogic.gdx.utils.ArrayMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3644),
      new Method("toString", com.badlogic.gdx.utils.ArrayMap.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3645),
      new Method("entries", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Entries.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3646),
      new Method("values", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Values.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3647),
      new Method("keys", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.Keys.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3648),
  };
  t.constructors = new Constructor[] {
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3649),
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 3650),
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, new Parameter[] {arg0__Z, arg1__I, }, false, false, false, false, false, false, true, false, false, false, true, 3651),
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, new Parameter[] {arg0__Z, arg1__I, arg2__Ljava_lang_Class_, arg3__Ljava_lang_Class_, }, false, false, false, false, false, false, true, false, false, false, true, 3652),
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, new Parameter[] {arg0__Ljava_lang_Class_, arg1__Ljava_lang_Class_, }, false, false, false, false, false, false, true, false, false, false, true, 3653),
      new Constructor("ArrayMap", com.badlogic.gdx.utils.ArrayMap.class, com.badlogic.gdx.utils.ArrayMap.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3654),
  };
  types.put("com.badlogic.gdx.utils.ArrayMap", t);
  }
  private void c187() {
  Type t = new Type("com.badlogic.gdx.utils.ArrayMap.Entries", 3655, com.badlogic.gdx.utils.ArrayMap.Entries.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("map", com.badlogic.gdx.utils.ArrayMap.Entries.class, com.badlogic.gdx.utils.ArrayMap.class, true, false, true, false, false, false, false, false, 3657, 3656, null), 
      new Field("entry", com.badlogic.gdx.utils.ArrayMap.Entries.class, com.badlogic.gdx.utils.ObjectMap.Entry.class, false, true, false, false, false, false, false, false, 3659, 3658, null), 
      new Field("index", com.badlogic.gdx.utils.ArrayMap.Entries.class, int.class, false, true, false, false, false, false, false, false, 3661, 3660, null), 
      new Field("valid", com.badlogic.gdx.utils.ArrayMap.Entries.class, boolean.class, false, true, false, false, false, false, false, false, 3663, 3662, null), 
  };
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.ArrayMap.Entries.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3664),
      new Method("iterator", com.badlogic.gdx.utils.ArrayMap.Entries.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3665),
      new Method("next", com.badlogic.gdx.utils.ArrayMap.Entries.class, com.badlogic.gdx.utils.ObjectMap.Entry.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3666),
      new Method("remove", com.badlogic.gdx.utils.ArrayMap.Entries.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3667),
      new Method("reset", com.badlogic.gdx.utils.ArrayMap.Entries.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3668),
  };
  t.constructors = new Constructor[] {
      new Constructor("Entries", com.badlogic.gdx.utils.ArrayMap.Entries.class, com.badlogic.gdx.utils.ArrayMap.Entries.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3669),
  };
  types.put("com.badlogic.gdx.utils.ArrayMap.Entries", t);
  }
  private void c188() {
  Type t = new Type("com.badlogic.gdx.utils.ArrayMap.Keys", 3670, com.badlogic.gdx.utils.ArrayMap.Keys.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("map", com.badlogic.gdx.utils.ArrayMap.Keys.class, com.badlogic.gdx.utils.ArrayMap.class, true, false, true, false, false, false, false, false, 3672, 3671, null), 
      new Field("index", com.badlogic.gdx.utils.ArrayMap.Keys.class, int.class, false, true, false, false, false, false, false, false, 3674, 3673, null), 
      new Field("valid", com.badlogic.gdx.utils.ArrayMap.Keys.class, boolean.class, false, true, false, false, false, false, false, false, 3676, 3675, null), 
  };
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.ArrayMap.Keys.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3677),
      new Method("iterator", com.badlogic.gdx.utils.ArrayMap.Keys.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3678),
      new Method("next", com.badlogic.gdx.utils.ArrayMap.Keys.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3679),
      new Method("remove", com.badlogic.gdx.utils.ArrayMap.Keys.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3680),
      new Method("reset", com.badlogic.gdx.utils.ArrayMap.Keys.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3681),
      new Method("toArray", com.badlogic.gdx.utils.ArrayMap.Keys.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3682),
  };
  t.constructors = new Constructor[] {
      new Constructor("Keys", com.badlogic.gdx.utils.ArrayMap.Keys.class, com.badlogic.gdx.utils.ArrayMap.Keys.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3683),
  };
  types.put("com.badlogic.gdx.utils.ArrayMap.Keys", t);
  }
  private void c189() {
  Type t = new Type("com.badlogic.gdx.utils.ArrayMap.Values", 3684, com.badlogic.gdx.utils.ArrayMap.Values.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("map", com.badlogic.gdx.utils.ArrayMap.Values.class, com.badlogic.gdx.utils.ArrayMap.class, true, false, true, false, false, false, false, false, 3686, 3685, null), 
      new Field("index", com.badlogic.gdx.utils.ArrayMap.Values.class, int.class, false, true, false, false, false, false, false, false, 3688, 3687, null), 
      new Field("valid", com.badlogic.gdx.utils.ArrayMap.Values.class, boolean.class, false, true, false, false, false, false, false, false, 3690, 3689, null), 
  };
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.ArrayMap.Values.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3691),
      new Method("iterator", com.badlogic.gdx.utils.ArrayMap.Values.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3692),
      new Method("next", com.badlogic.gdx.utils.ArrayMap.Values.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3693),
      new Method("remove", com.badlogic.gdx.utils.ArrayMap.Values.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3694),
      new Method("reset", com.badlogic.gdx.utils.ArrayMap.Values.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3695),
      new Method("toArray", com.badlogic.gdx.utils.ArrayMap.Values.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3696),
  };
  t.constructors = new Constructor[] {
      new Constructor("Values", com.badlogic.gdx.utils.ArrayMap.Values.class, com.badlogic.gdx.utils.ArrayMap.Values.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ArrayMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3697),
  };
  types.put("com.badlogic.gdx.utils.ArrayMap.Values", t);
  }
  private void c190() {
  Type t = new Type("com.badlogic.gdx.utils.Disposable", 3698, com.badlogic.gdx.utils.Disposable.class, null, null);
  t.isPrimitive = true;
  types.put("com.badlogic.gdx.utils.Disposable", t);
  }
  private void c191() {
  Type t = new Type("com.badlogic.gdx.utils.ObjectMap", 3699, com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("PRIME1", com.badlogic.gdx.utils.ObjectMap.class, int.class, true, false, true, false, false, true, false, false, 3701, 3700, null), 
      new Field("PRIME2", com.badlogic.gdx.utils.ObjectMap.class, int.class, true, false, true, false, false, true, false, false, 3703, 3702, null), 
      new Field("PRIME3", com.badlogic.gdx.utils.ObjectMap.class, int.class, true, false, true, false, false, true, false, false, 3705, 3704, null), 
      new Field("size", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, false, false, true, false, false, false, 3707, 3706, null), 
      new Field("keyTable", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object[].class, false, true, false, false, false, false, false, false, 3709, 3708, null), 
      new Field("valueTable", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object[].class, false, true, false, false, false, false, false, false, 3711, 3710, null), 
      new Field("capacity", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, true, false, false, false, false, false, false, 3713, 3712, null), 
      new Field("stashSize", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, true, false, false, false, false, false, false, 3715, 3714, null), 
      new Field("loadFactor", com.badlogic.gdx.utils.ObjectMap.class, float.class, false, false, true, false, false, false, false, false, 3717, 3716, null), 
      new Field("hashShift", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, true, false, false, false, false, false, 3719, 3718, null), 
      new Field("mask", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, true, false, false, false, false, false, 3721, 3720, null), 
      new Field("threshold", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, true, false, false, false, false, false, 3723, 3722, null), 
      new Field("stashCapacity", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, true, false, false, false, false, false, 3725, 3724, null), 
      new Field("pushIterations", com.badlogic.gdx.utils.ObjectMap.class, int.class, false, false, true, false, false, false, false, false, 3727, 3726, null), 
      new Field("entries1", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Entries.class, false, false, true, false, false, false, false, false, 3729, 3728, null), 
      new Field("entries2", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Entries.class, false, false, true, false, false, false, false, false, 3731, 3730, null), 
      new Field("values1", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Values.class, false, false, true, false, false, false, false, false, 3733, 3732, null), 
      new Field("values2", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Values.class, false, false, true, false, false, false, false, false, 3735, 3734, null), 
      new Field("keys1", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Keys.class, false, false, true, false, false, false, false, false, 3737, 3736, null), 
      new Field("keys2", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Keys.class, false, false, true, false, false, false, false, false, 3739, 3738, null), 
  };
  t.methods = new Method[] {
      new Method("put", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3740),
      new Method("put_internal", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3741),
      new Method("putAll", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, true, false, 3742),
      new Method("putResize", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3743),
      new Method("push", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, arg2__I, arg3__Ljava_lang_Object_, arg4__I, arg5__Ljava_lang_Object_, arg6__I, arg7__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3744),
      new Method("putStash", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3745),
      new Method("get", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3746),
      new Method("get", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3747),
      new Method("getStash", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3748),
      new Method("getStash", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3749),
      new Method("remove", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3750),
      new Method("removeStash", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, true, false, false, false, false, false, true, false, 3751),
      new Method("removeStashIndex", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, true, false, false, false, false, false, true, false, 3752),
      new Method("shrink", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3753),
      new Method("clear", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3754),
      new Method("clear", com.badlogic.gdx.utils.ObjectMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3755),
      new Method("containsValue", com.badlogic.gdx.utils.ObjectMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3756),
      new Method("containsKey", com.badlogic.gdx.utils.ObjectMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3757),
      new Method("containsKeyStash", com.badlogic.gdx.utils.ObjectMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, true, false, false, false, false, true, false, 3758),
      new Method("findKey", com.badlogic.gdx.utils.ObjectMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Z, }, false, false, false, false, false, false, true, false, false, true, false, 3759),
      new Method("ensureCapacity", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3760),
      new Method("resize", com.badlogic.gdx.utils.ObjectMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, true, false, false, false, false, true, false, 3761),
      new Method("hash2", com.badlogic.gdx.utils.ObjectMap.class, int.class, new Parameter[] {arg0__I, }, false, false, false, false, true, false, false, false, false, true, false, 3762),
      new Method("hash3", com.badlogic.gdx.utils.ObjectMap.class, int.class, new Parameter[] {arg0__I, }, false, false, false, false, true, false, false, false, false, true, false, 3763),
      new Method("toString", com.badlogic.gdx.utils.ObjectMap.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3764),
      new Method("entries", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Entries.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3765),
      new Method("values", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Values.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3766),
      new Method("keys", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.Keys.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3767),
  };
  t.constructors = new Constructor[] {
      new Constructor("ObjectMap", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3768),
      new Constructor("ObjectMap", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 3769),
      new Constructor("ObjectMap", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.class, new Parameter[] {arg0__I, arg1__F, }, false, false, false, false, false, false, true, false, false, false, true, 3770),
      new Constructor("ObjectMap", com.badlogic.gdx.utils.ObjectMap.class, com.badlogic.gdx.utils.ObjectMap.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3771),
  };
  types.put("com.badlogic.gdx.utils.ObjectMap", t);
  }
  private void c192() {
  Type t = new Type("com.badlogic.gdx.utils.ObjectMap.Entries", 3772, com.badlogic.gdx.utils.ObjectMap.Entries.class, null, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("entry", com.badlogic.gdx.utils.ObjectMap.Entries.class, com.badlogic.gdx.utils.ObjectMap.Entry.class, false, true, false, false, false, false, false, false, 3774, 3773, null), 
  };
  t.methods = new Method[] {
      new Method("next", com.badlogic.gdx.utils.ObjectMap.Entries.class, com.badlogic.gdx.utils.ObjectMap.Entry.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3775),
      new Method("hasNext", com.badlogic.gdx.utils.ObjectMap.Entries.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3776),
      new Method("iterator", com.badlogic.gdx.utils.ObjectMap.Entries.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3777),
  };
  t.constructors = new Constructor[] {
      new Constructor("Entries", com.badlogic.gdx.utils.ObjectMap.Entries.class, com.badlogic.gdx.utils.ObjectMap.Entries.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3778),
  };
  types.put("com.badlogic.gdx.utils.ObjectMap.Entries", t);
  }
  private void c193() {
  Type t = new Type("com.badlogic.gdx.utils.ObjectMap.Entry", 3779, com.badlogic.gdx.utils.ObjectMap.Entry.class, java.lang.Object.class, null);
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("key", com.badlogic.gdx.utils.ObjectMap.Entry.class, java.lang.Object.class, false, false, false, false, true, false, false, false, 3781, 3780, null), 
      new Field("value", com.badlogic.gdx.utils.ObjectMap.Entry.class, java.lang.Object.class, false, false, false, false, true, false, false, false, 3783, 3782, null), 
  };
  t.methods = new Method[] {
      new Method("toString", com.badlogic.gdx.utils.ObjectMap.Entry.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3784),
  };
  t.constructors = new Constructor[] {
      new Constructor("Entry", com.badlogic.gdx.utils.ObjectMap.Entry.class, com.badlogic.gdx.utils.ObjectMap.Entry.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3785),
  };
  types.put("com.badlogic.gdx.utils.ObjectMap.Entry", t);
  }
  private void c194() {
  Type t = new Type("com.badlogic.gdx.utils.ObjectMap.Keys", 3786, com.badlogic.gdx.utils.ObjectMap.Keys.class, null, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.ObjectMap.Keys.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3787),
      new Method("next", com.badlogic.gdx.utils.ObjectMap.Keys.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3788),
      new Method("iterator", com.badlogic.gdx.utils.ObjectMap.Keys.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3789),
      new Method("toArray", com.badlogic.gdx.utils.ObjectMap.Keys.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3790),
  };
  t.constructors = new Constructor[] {
      new Constructor("Keys", com.badlogic.gdx.utils.ObjectMap.Keys.class, com.badlogic.gdx.utils.ObjectMap.Keys.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3791),
  };
  types.put("com.badlogic.gdx.utils.ObjectMap.Keys", t);
  }
  private void c195() {
  Type t = new Type("com.badlogic.gdx.utils.ObjectMap.Values", 3792, com.badlogic.gdx.utils.ObjectMap.Values.class, null, new HashSet<Class>(Arrays.asList(java.lang.Iterable.class, java.util.Iterator.class)));
  t.isMemberClass = true;
  t.isStatic = true;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("hasNext", com.badlogic.gdx.utils.ObjectMap.Values.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3793),
      new Method("next", com.badlogic.gdx.utils.ObjectMap.Values.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3794),
      new Method("iterator", com.badlogic.gdx.utils.ObjectMap.Values.class, java.util.Iterator.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3795),
      new Method("toArray", com.badlogic.gdx.utils.ObjectMap.Values.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3796),
      new Method("toArray", com.badlogic.gdx.utils.ObjectMap.Values.class, void.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_Array_, }, false, false, false, false, false, false, true, false, false, true, false, 3797),
  };
  t.constructors = new Constructor[] {
      new Constructor("Values", com.badlogic.gdx.utils.ObjectMap.Values.class, com.badlogic.gdx.utils.ObjectMap.Values.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3798),
  };
  types.put("com.badlogic.gdx.utils.ObjectMap.Values", t);
  }
  private void c196() {
  Type t = new Type("com.badlogic.gdx.utils.OrderedMap", 3799, com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.ObjectMap.class, new HashSet<Class>(Arrays.asList(com.badlogic.gdx.utils.ObjectMap.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("keys", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.Array.class, true, true, false, false, false, false, false, false, 3801, 3800, null), 
  };
  t.methods = new Method[] {
      new Method("put", com.badlogic.gdx.utils.OrderedMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3802),
      new Method("remove", com.badlogic.gdx.utils.OrderedMap.class, java.lang.Object.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3803),
      new Method("clear", com.badlogic.gdx.utils.OrderedMap.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 3804),
      new Method("clear", com.badlogic.gdx.utils.OrderedMap.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3805),
      new Method("orderedKeys", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.Array.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3806),
      new Method("entries", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.ObjectMap.Entries.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3807),
      new Method("keys", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.ObjectMap.Keys.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3808),
      new Method("values", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.ObjectMap.Values.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3809),
      new Method("toString", com.badlogic.gdx.utils.OrderedMap.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3810),
  };
  t.constructors = new Constructor[] {
      new Constructor("OrderedMap", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.OrderedMap.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3811),
      new Constructor("OrderedMap", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.OrderedMap.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 3812),
      new Constructor("OrderedMap", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.OrderedMap.class, new Parameter[] {arg0__I, arg1__F, }, false, false, false, false, false, false, true, false, false, false, true, 3813),
      new Constructor("OrderedMap", com.badlogic.gdx.utils.OrderedMap.class, com.badlogic.gdx.utils.OrderedMap.class, new Parameter[] {arg0__Lcom_badlogic_gdx_utils_ObjectMap_, }, false, false, false, false, false, false, true, false, false, false, true, 3814),
  };
  types.put("com.badlogic.gdx.utils.OrderedMap", t);
  }
  private void c197() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer", 3815, com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Boolean_, }, false, false, true, false, false, false, true, false, false, true, false, 3816),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, java.lang.Boolean.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3817),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Boolean_, }, false, false, true, false, false, false, true, false, false, true, false, 3818),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Boolean_, }, false, false, false, false, false, false, true, false, false, true, false, 3819),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3820),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, java.lang.Boolean.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3821),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Boolean_, }, false, false, false, false, false, false, true, false, false, true, false, 3822),
  };
  t.constructors = new Constructor[] {
      new Constructor("Boolean_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3823),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer", t);
  }
  private void c198() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer", 3824, com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Byte_, }, false, false, true, false, false, false, true, false, false, true, false, 3825),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, java.lang.Byte.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3826),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Byte_, }, false, false, true, false, false, false, true, false, false, true, false, 3827),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Byte_, }, false, false, false, false, false, false, true, false, false, true, false, 3828),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3829),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, java.lang.Byte.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3830),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Byte_, }, false, false, false, false, false, false, true, false, false, true, false, 3831),
  };
  t.constructors = new Constructor[] {
      new Constructor("Byte_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3832),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer", t);
  }
  private void c199() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer", 3833, com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Character_, }, false, false, true, false, false, false, true, false, false, true, false, 3834),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, java.lang.Character.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3835),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Character_, }, false, false, true, false, false, false, true, false, false, true, false, 3836),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Character_, }, false, false, false, false, false, false, true, false, false, true, false, 3837),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3838),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, java.lang.Character.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3839),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Character_, }, false, false, false, false, false, false, true, false, false, true, false, 3840),
  };
  t.constructors = new Constructor[] {
      new Constructor("Character_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3841),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer", t);
  }
  private void c200() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer", 3842, com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Double_, }, false, false, true, false, false, false, true, false, false, true, false, 3843),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, java.lang.Double.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3844),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Double_, }, false, false, true, false, false, false, true, false, false, true, false, 3845),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Double_, }, false, false, false, false, false, false, true, false, false, true, false, 3846),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3847),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, java.lang.Double.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3848),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Double_, }, false, false, false, false, false, false, true, false, false, true, false, 3849),
  };
  t.constructors = new Constructor[] {
      new Constructor("Double_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3850),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer", t);
  }
  private void c201() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer", 3851, com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Float_, }, false, false, true, false, false, false, true, false, false, true, false, 3852),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, java.lang.Float.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3853),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Float_, }, false, false, true, false, false, false, true, false, false, true, false, 3854),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Float_, }, false, false, false, false, false, false, true, false, false, true, false, 3855),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3856),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, java.lang.Float.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3857),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Float_, }, false, false, false, false, false, false, true, false, false, true, false, 3858),
  };
  t.constructors = new Constructor[] {
      new Constructor("Float_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3859),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer", t);
  }
  private void c202() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer", 3860, com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Integer_, }, false, false, true, false, false, false, true, false, false, true, false, 3861),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, java.lang.Integer.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3862),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Integer_, }, false, false, true, false, false, false, true, false, false, true, false, 3863),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Integer_, }, false, false, false, false, false, false, true, false, false, true, false, 3864),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3865),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, java.lang.Integer.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3866),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Integer_, }, false, false, false, false, false, false, true, false, false, true, false, 3867),
  };
  t.constructors = new Constructor[] {
      new Constructor("Integer_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3868),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer", t);
  }
  private void c203() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer", 3869, com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance___Ljava_lang_Object_, }, false, false, true, false, false, false, true, false, false, true, false, 3870),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance___Ljava_lang_Object_, }, false, false, true, false, false, false, true, false, false, true, false, 3871),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance___Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3872),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance___Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3873),
  };
  t.constructors = new Constructor[] {
      new Constructor("Object_Array_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3874),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer", t);
  }
  private void c204() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer", 3875, com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Short_, }, false, false, true, false, false, false, true, false, false, true, false, 3876),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, java.lang.Short.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3877),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Short_, }, false, false, true, false, false, false, true, false, false, true, false, 3878),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_Short_, }, false, false, false, false, false, false, true, false, false, true, false, 3879),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3880),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, java.lang.Short.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3881),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_Short_, }, false, false, false, false, false, false, true, false, false, true, false, 3882),
  };
  t.constructors = new Constructor[] {
      new Constructor("Short_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3883),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer", t);
  }
  private void c205() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer", 3884, com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3885),
      new Method("instantiate", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, java.lang.String.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, true, false, false, false, true, false, false, true, false, 3886),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3887),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 3888),
      new Method("hasCustomInstantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3889),
      new Method("instantiateInstance", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, java.lang.String.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, }, false, false, false, false, false, false, true, false, false, true, false, 3890),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 3891),
  };
  t.constructors = new Constructor[] {
      new Constructor("String_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3892),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer", t);
  }
  private void c206() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer", 3893, com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_util_ArrayList_, }, false, false, true, false, false, false, true, false, false, true, false, 3894),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_util_ArrayList_, }, false, false, true, false, false, false, true, false, false, true, false, 3895),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_util_ArrayList_, }, false, false, false, false, false, false, true, false, false, true, false, 3896),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_util_ArrayList_, }, false, false, false, false, false, false, true, false, false, true, false, 3897),
  };
  t.constructors = new Constructor[] {
      new Constructor("ArrayList_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3898),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer", t);
  }
  private void c207() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer", 3899, com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.CustomFieldSerializer.class, new HashSet<Class>(Arrays.asList(com.google.gwt.user.client.rpc.CustomFieldSerializer.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_util_HashMap_, }, false, false, true, false, false, false, true, false, false, true, false, 3900),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_util_HashMap_, }, false, false, true, false, false, false, true, false, false, true, false, 3901),
      new Method("deserializeInstance", com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_util_HashMap_, }, false, false, false, false, false, false, true, false, false, true, false, 3902),
      new Method("serializeInstance", com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_util_HashMap_, }, false, false, false, false, false, false, true, false, false, true, false, 3903),
  };
  t.constructors = new Constructor[] {
      new Constructor("HashMap_CustomFieldSerializer", com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3904),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer", t);
  }
  private void c208() {
  Type t = new Type("com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase", 3905, com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase.class, java.lang.Object.class, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.methods = new Method[] {
      new Method("deserialize", com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase.class, void.class, new Parameter[] {streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_, instance__Ljava_util_Map_, }, false, false, true, false, false, false, true, false, false, true, false, 3906),
      new Method("serialize", com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase.class, void.class, new Parameter[] {streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_, instance__Ljava_util_Map_, }, false, false, true, false, false, false, true, false, false, true, false, 3907),
  };
  t.constructors = new Constructor[] {
      new Constructor("Map_CustomFieldSerializerBase", com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase.class, com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 3908),
  };
  types.put("com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase", t);
  }
  private void c209() {
  Type p = new Type("double", 3909, double.class, null, null);
  p.isPrimitive = true;
  types.put("double", p);
  }
  private void c210() {
  Type t = new Type("double[]", 3910, double[].class, null, null);
  t.isPrimitive = true;
  types.put("double[]", t);
  }
  private void c211() {
  Type p = new Type("float", 3911, float.class, null, null);
  p.isPrimitive = true;
  types.put("float", p);
  }
  private void c212() {
  Type t = new Type("float[]", 3912, float[].class, null, null);
  t.isPrimitive = true;
  types.put("float[]", t);
  }
  private void c213() {
  Type t = new Type("float[][]", 3913, float[][].class, null, null);
  t.isPrimitive = true;
  types.put("float[][]", t);
  }
  private void c214() {
  Type p = new Type("int", 3914, int.class, null, null);
  p.isPrimitive = true;
  types.put("int", p);
  }
  private void c215() {
  Type t = new Type("int[]", 3915, int[].class, null, null);
  t.isPrimitive = true;
  types.put("int[]", t);
  }
  private void c216() {
  Type t = new Type("int[][]", 3916, int[][].class, null, null);
  t.isPrimitive = true;
  types.put("int[][]", t);
  }
  private void c217() {
  Type t = new Type("java.lang.Boolean", 3917, java.lang.Boolean.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("FALSE", java.lang.Boolean.class, java.lang.Boolean.class, true, false, false, false, true, true, false, false, 3919, 3918, null), 
      new Field("TRUE", java.lang.Boolean.class, java.lang.Boolean.class, true, false, false, false, true, true, false, false, 3921, 3920, null), 
      new Field("TYPE", java.lang.Boolean.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 3923, 3922, new Class[] {java.lang.Boolean.class, }), 
      new Field("value", java.lang.Boolean.class, boolean.class, true, false, true, false, false, false, true, false, 3925, 3924, null), 
  };
  t.methods = new Method[] {
      new Method("parseBoolean", java.lang.Boolean.class, boolean.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3926),
      new Method("toString", java.lang.Boolean.class, java.lang.String.class, new Parameter[] {x__Z, }, false, false, true, false, false, false, true, false, false, true, false, 3927),
      new Method("toString", java.lang.Boolean.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3928),
      new Method("valueOf", java.lang.Boolean.class, java.lang.Boolean.class, new Parameter[] {b__Z, }, false, false, true, false, false, false, true, false, false, true, false, 3929),
      new Method("valueOf", java.lang.Boolean.class, java.lang.Boolean.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3930),
      new Method("booleanValue", java.lang.Boolean.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3931),
      new Method("compareTo", java.lang.Boolean.class, int.class, new Parameter[] {other__Ljava_lang_Boolean_, }, false, false, false, false, false, false, true, false, false, true, false, 3932),
      new Method("equals", java.lang.Boolean.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3933),
      new Method("hashCode", java.lang.Boolean.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3934),
  };
  t.constructors = new Constructor[] {
      new Constructor("Boolean", java.lang.Boolean.class, java.lang.Boolean.class, new Parameter[] {value__Z, }, false, false, false, false, false, false, true, false, false, false, true, 3935),
      new Constructor("Boolean", java.lang.Boolean.class, java.lang.Boolean.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 3936),
  };
  types.put("java.lang.Boolean", t);
  }
  private void c218() {
  Type t = new Type("java.lang.Byte", 3937, java.lang.Byte.class, java.lang.Number.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.Number.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MIN_VALUE", java.lang.Byte.class, byte.class, true, false, false, false, true, true, false, false, 3939, 3938, null), 
      new Field("MAX_VALUE", java.lang.Byte.class, byte.class, true, false, false, false, true, true, false, false, 3941, 3940, null), 
      new Field("SIZE", java.lang.Byte.class, int.class, true, false, false, false, true, true, false, false, 3943, 3942, null), 
      new Field("TYPE", java.lang.Byte.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 3945, 3944, new Class[] {java.lang.Byte.class, }), 
      new Field("value", java.lang.Byte.class, byte.class, true, false, true, false, false, false, true, false, 3947, 3946, null), 
  };
  t.methods = new Method[] {
      new Method("decode", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3948),
      new Method("hashCode", java.lang.Byte.class, int.class, new Parameter[] {b__B, }, false, false, true, false, false, false, true, false, false, true, false, 3949),
      new Method("hashCode", java.lang.Byte.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3950),
      new Method("parseByte", java.lang.Byte.class, byte.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3951),
      new Method("parseByte", java.lang.Byte.class, byte.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 3952),
      new Method("toString", java.lang.Byte.class, java.lang.String.class, new Parameter[] {b__B, }, false, false, true, false, false, false, true, false, false, true, false, 3953),
      new Method("toString", java.lang.Byte.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3954),
      new Method("valueOf", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {b__B, }, false, false, true, false, false, false, true, false, false, true, false, 3955),
      new Method("valueOf", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 3956),
      new Method("valueOf", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 3957),
      new Method("byteValue", java.lang.Byte.class, byte.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3958),
      new Method("compareTo", java.lang.Byte.class, int.class, new Parameter[] {b__Ljava_lang_Byte_, }, false, false, false, false, false, false, true, false, false, true, false, 3959),
      new Method("doubleValue", java.lang.Byte.class, double.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3960),
      new Method("equals", java.lang.Byte.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 3961),
      new Method("floatValue", java.lang.Byte.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3962),
      new Method("intValue", java.lang.Byte.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3963),
      new Method("longValue", java.lang.Byte.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3964),
      new Method("shortValue", java.lang.Byte.class, short.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 3965),
  };
  t.constructors = new Constructor[] {
      new Constructor("Byte", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {value__B, }, false, false, false, false, false, false, true, false, false, false, true, 3966),
      new Constructor("Byte", java.lang.Byte.class, java.lang.Byte.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 3967),
  };
  types.put("java.lang.Byte", t);
  }
  private void c219() {
  Type t = new Type("java.lang.CharSequence", 3968, java.lang.CharSequence.class, null, null);
  t.isPrimitive = true;
  types.put("java.lang.CharSequence", t);
  }
  private void c220() {
  Type t = new Type("java.lang.Character", 3969, java.lang.Character.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("TYPE", java.lang.Character.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 3971, 3970, new Class[] {java.lang.Character.class, }), 
      new Field("MIN_RADIX", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3973, 3972, null), 
      new Field("MAX_RADIX", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3975, 3974, null), 
      new Field("MIN_VALUE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3977, 3976, null), 
      new Field("MAX_VALUE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3979, 3978, null), 
      new Field("MIN_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3981, 3980, null), 
      new Field("MAX_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3983, 3982, null), 
      new Field("MIN_LOW_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3985, 3984, null), 
      new Field("MAX_LOW_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3987, 3986, null), 
      new Field("MIN_HIGH_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3989, 3988, null), 
      new Field("MAX_HIGH_SURROGATE", java.lang.Character.class, char.class, true, false, false, false, true, true, false, false, 3991, 3990, null), 
      new Field("MIN_SUPPLEMENTARY_CODE_POINT", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3993, 3992, null), 
      new Field("MIN_CODE_POINT", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3995, 3994, null), 
      new Field("MAX_CODE_POINT", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3997, 3996, null), 
      new Field("SIZE", java.lang.Character.class, int.class, true, false, false, false, true, true, false, false, 3999, 3998, null), 
      new Field("value", java.lang.Character.class, char.class, true, false, true, false, false, false, true, false, 4001, 4000, null), 
  };
  t.methods = new Method[] {
      new Method("charCount", java.lang.Character.class, int.class, new Parameter[] {codePoint__I, }, false, false, true, false, false, false, true, false, false, true, false, 4002),
      new Method("codePointAt", java.lang.Character.class, int.class, new Parameter[] {a___C, index__I, }, false, false, true, false, false, false, true, false, false, true, false, 4003),
      new Method("codePointAt", java.lang.Character.class, int.class, new Parameter[] {a___C, index__I, limit__I, }, false, false, true, false, false, false, true, false, false, true, false, 4004),
      new Method("codePointAt", java.lang.Character.class, int.class, new Parameter[] {seq__Ljava_lang_CharSequence_, index__I, }, false, false, true, false, false, false, true, false, false, true, false, 4005),
      new Method("codePointAt", java.lang.Character.class, int.class, new Parameter[] {cs__Ljava_lang_CharSequence_, index__I, limit__I, }, false, false, true, true, false, false, false, false, false, true, false, 4006),
      new Method("codePointBefore", java.lang.Character.class, int.class, new Parameter[] {a___C, index__I, }, false, false, true, false, false, false, true, false, false, true, false, 4007),
      new Method("codePointBefore", java.lang.Character.class, int.class, new Parameter[] {a___C, index__I, start__I, }, false, false, true, false, false, false, true, false, false, true, false, 4008),
      new Method("codePointBefore", java.lang.Character.class, int.class, new Parameter[] {cs__Ljava_lang_CharSequence_, index__I, }, false, false, true, false, false, false, true, false, false, true, false, 4009),
      new Method("codePointBefore", java.lang.Character.class, int.class, new Parameter[] {cs__Ljava_lang_CharSequence_, index__I, start__I, }, false, false, true, true, false, false, false, false, false, true, false, 4010),
      new Method("codePointCount", java.lang.Character.class, int.class, new Parameter[] {a___C, offset__I, count__I, }, false, false, true, false, false, false, true, false, false, true, false, 4011),
      new Method("codePointCount", java.lang.Character.class, int.class, new Parameter[] {seq__Ljava_lang_CharSequence_, beginIndex__I, endIndex__I, }, false, false, true, false, false, false, true, false, false, true, false, 4012),
      new Method("digit", java.lang.Character.class, int.class, new Parameter[] {c__C, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4013),
      new Method("forDigit", java.lang.Character.class, char.class, new Parameter[] {digit__I, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4014),
      new Method("hashCode", java.lang.Character.class, int.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4015),
      new Method("hashCode", java.lang.Character.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4016),
      new Method("isDigit", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4017),
      new Method("isHighSurrogate", java.lang.Character.class, boolean.class, new Parameter[] {ch__C, }, false, false, true, false, false, false, true, false, false, true, false, 4018),
      new Method("isLetter", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4019),
      new Method("isLetterOrDigit", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4020),
      new Method("isLowerCase", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4021),
      new Method("isLowSurrogate", java.lang.Character.class, boolean.class, new Parameter[] {ch__C, }, false, false, true, false, false, false, true, false, false, true, false, 4022),
      new Method("isSpace", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4023),
      new Method("isSupplementaryCodePoint", java.lang.Character.class, boolean.class, new Parameter[] {codePoint__I, }, false, false, true, false, false, false, true, false, false, true, false, 4024),
      new Method("isSurrogatePair", java.lang.Character.class, boolean.class, new Parameter[] {highSurrogate__C, lowSurrogate__C, }, false, false, true, false, false, false, true, false, false, true, false, 4025),
      new Method("isUpperCase", java.lang.Character.class, boolean.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4026),
      new Method("isValidCodePoint", java.lang.Character.class, boolean.class, new Parameter[] {codePoint__I, }, false, false, true, false, false, false, true, false, false, true, false, 4027),
      new Method("offsetByCodePoints", java.lang.Character.class, int.class, new Parameter[] {a___C, start__I, count__I, index__I, codePointOffset__I, }, false, false, true, false, false, false, true, false, false, true, false, 4028),
      new Method("offsetByCodePoints", java.lang.Character.class, int.class, new Parameter[] {seq__Ljava_lang_CharSequence_, index__I, codePointOffset__I, }, false, false, true, false, false, false, true, false, false, true, false, 4029),
      new Method("toChars", java.lang.Character.class, char[].class, new Parameter[] {codePoint__I, }, false, false, true, false, false, false, true, false, false, true, false, 4030),
      new Method("toChars", java.lang.Character.class, int.class, new Parameter[] {codePoint__I, dst___C, dstIndex__I, }, false, false, true, false, false, false, true, false, false, true, false, 4031),
      new Method("toCodePoint", java.lang.Character.class, int.class, new Parameter[] {highSurrogate__C, lowSurrogate__C, }, false, false, true, false, false, false, true, false, false, true, false, 4032),
      new Method("toLowerCase", java.lang.Character.class, char.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4033),
      new Method("toString", java.lang.Character.class, java.lang.String.class, new Parameter[] {x__C, }, false, false, true, false, false, false, true, false, false, true, false, 4034),
      new Method("toString", java.lang.Character.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4035),
      new Method("toUpperCase", java.lang.Character.class, char.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4036),
      new Method("valueOf", java.lang.Character.class, java.lang.Character.class, new Parameter[] {c__C, }, false, false, true, false, false, false, true, false, false, true, false, 4037),
      new Method("getHighSurrogate", java.lang.Character.class, char.class, new Parameter[] {codePoint__I, }, false, false, true, true, false, false, false, false, false, true, false, 4038),
      new Method("getLowSurrogate", java.lang.Character.class, char.class, new Parameter[] {codePoint__I, }, false, false, true, true, false, false, false, false, false, true, false, 4039),
      new Method("charValue", java.lang.Character.class, char.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4040),
      new Method("compareTo", java.lang.Character.class, int.class, new Parameter[] {c__Ljava_lang_Character_, }, false, false, false, false, false, false, true, false, false, true, false, 4041),
      new Method("equals", java.lang.Character.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4042),
  };
  t.constructors = new Constructor[] {
      new Constructor("Character", java.lang.Character.class, java.lang.Character.class, new Parameter[] {value__C, }, false, false, false, false, false, false, true, false, false, false, true, 4043),
  };
  types.put("java.lang.Character", t);
  }
  private void c221() {
  Type t = new Type("java.lang.Double", 4044, java.lang.Double.class, java.lang.Number.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.Number.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MAX_VALUE", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4046, 4045, null), 
      new Field("MIN_VALUE", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4048, 4047, null), 
      new Field("MIN_NORMAL", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4050, 4049, null), 
      new Field("MAX_EXPONENT", java.lang.Double.class, int.class, true, false, false, false, true, true, false, false, 4052, 4051, null), 
      new Field("MIN_EXPONENT", java.lang.Double.class, int.class, true, false, false, false, true, true, false, false, 4054, 4053, null), 
      new Field("NaN", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4056, 4055, null), 
      new Field("NEGATIVE_INFINITY", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4058, 4057, null), 
      new Field("POSITIVE_INFINITY", java.lang.Double.class, double.class, true, false, false, false, true, true, false, false, 4060, 4059, null), 
      new Field("SIZE", java.lang.Double.class, int.class, true, false, false, false, true, true, false, false, 4062, 4061, null), 
      new Field("TYPE", java.lang.Double.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 4064, 4063, new Class[] {java.lang.Double.class, }), 
      new Field("POWER_512", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4066, 4065, null), 
      new Field("POWER_MINUS_512", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4068, 4067, null), 
      new Field("POWER_256", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4070, 4069, null), 
      new Field("POWER_MINUS_256", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4072, 4071, null), 
      new Field("POWER_128", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4074, 4073, null), 
      new Field("POWER_MINUS_128", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4076, 4075, null), 
      new Field("POWER_64", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4078, 4077, null), 
      new Field("POWER_MINUS_64", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4080, 4079, null), 
      new Field("POWER_52", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4082, 4081, null), 
      new Field("POWER_MINUS_52", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4084, 4083, null), 
      new Field("POWER_32", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4086, 4085, null), 
      new Field("POWER_MINUS_32", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4088, 4087, null), 
      new Field("POWER_31", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4090, 4089, null), 
      new Field("POWER_20", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4092, 4091, null), 
      new Field("POWER_MINUS_20", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4094, 4093, null), 
      new Field("POWER_16", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4096, 4095, null), 
      new Field("POWER_MINUS_16", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4098, 4097, null), 
      new Field("POWER_8", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4100, 4099, null), 
      new Field("POWER_MINUS_8", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4102, 4101, null), 
      new Field("POWER_4", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4104, 4103, null), 
      new Field("POWER_MINUS_4", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4106, 4105, null), 
      new Field("POWER_2", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4108, 4107, null), 
      new Field("POWER_MINUS_2", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4110, 4109, null), 
      new Field("POWER_1", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4112, 4111, null), 
      new Field("POWER_MINUS_1", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4114, 4113, null), 
      new Field("POWER_MINUS_1022", java.lang.Double.class, double.class, true, false, true, false, false, true, false, false, 4116, 4115, null), 
      new Field("powers", java.lang.Double.class, double[].class, true, false, true, false, false, true, false, false, 4118, 4117, null), 
      new Field("invPowers", java.lang.Double.class, double[].class, true, false, true, false, false, true, false, false, 4120, 4119, null), 
      new Field("value", java.lang.Double.class, double.class, true, false, true, false, false, false, true, false, 4122, 4121, null), 
  };
  t.methods = new Method[] {
      new Method("compare", java.lang.Double.class, int.class, new Parameter[] {x__D, y__D, }, false, false, true, false, false, false, true, false, false, true, false, 4123),
      new Method("doubleToLongBits", java.lang.Double.class, long.class, new Parameter[] {value__D, }, false, false, true, false, false, false, true, false, false, true, false, 4124),
      new Method("hashCode", java.lang.Double.class, int.class, new Parameter[] {d__D, }, false, false, true, false, false, false, true, false, false, true, false, 4125),
      new Method("hashCode", java.lang.Double.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4126),
      new Method("isInfinite", java.lang.Double.class, boolean.class, new Parameter[] {x__D, }, false, false, true, false, false, false, true, false, false, true, false, 4127),
      new Method("isInfinite", java.lang.Double.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4128),
      new Method("isNaN", java.lang.Double.class, boolean.class, new Parameter[] {x__D, }, false, false, true, false, false, false, true, false, false, true, false, 4129),
      new Method("isNaN", java.lang.Double.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4130),
      new Method("longBitsToDouble", java.lang.Double.class, double.class, new Parameter[] {bits__J, }, false, false, true, false, false, false, true, false, false, true, false, 4131),
      new Method("parseDouble", java.lang.Double.class, double.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4132),
      new Method("toString", java.lang.Double.class, java.lang.String.class, new Parameter[] {b__D, }, false, false, true, false, false, false, true, false, false, true, false, 4133),
      new Method("toString", java.lang.Double.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4134),
      new Method("valueOf", java.lang.Double.class, java.lang.Double.class, new Parameter[] {d__D, }, false, false, true, false, false, false, true, false, false, true, false, 4135),
      new Method("valueOf", java.lang.Double.class, java.lang.Double.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4136),
      new Method("byteValue", java.lang.Double.class, byte.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4137),
      new Method("compareTo", java.lang.Double.class, int.class, new Parameter[] {b__Ljava_lang_Double_, }, false, false, false, false, false, false, true, false, false, true, false, 4138),
      new Method("doubleValue", java.lang.Double.class, double.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4139),
      new Method("equals", java.lang.Double.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4140),
      new Method("floatValue", java.lang.Double.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4141),
      new Method("intValue", java.lang.Double.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4142),
      new Method("longValue", java.lang.Double.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4143),
      new Method("shortValue", java.lang.Double.class, short.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4144),
  };
  t.constructors = new Constructor[] {
      new Constructor("Double", java.lang.Double.class, java.lang.Double.class, new Parameter[] {value__D, }, false, false, false, false, false, false, true, false, false, false, true, 4145),
      new Constructor("Double", java.lang.Double.class, java.lang.Double.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4146),
  };
  types.put("java.lang.Double", t);
  }
  private void c222() {
  Type t = new Type("java.lang.Enum", 4147, java.lang.Enum.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = true;
  t.fields = new Field[] {
      new Field("name", java.lang.Enum.class, java.lang.String.class, true, false, true, false, false, false, false, false, 4149, 4148, null), 
      new Field("ordinal", java.lang.Enum.class, int.class, true, false, true, false, false, false, false, false, 4151, 4150, null), 
  };
  t.methods = new Method[] {
      new Method("valueOf", java.lang.Enum.class, java.lang.Enum.class, new Parameter[] {arg0__Ljava_lang_Class_, arg1__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4152),
      new Method("valueOf", java.lang.Enum.class, java.lang.Enum.class, new Parameter[] {arg0__Lcom_google_gwt_core_client_JavaScriptObject_, arg1__Ljava_lang_String_, }, false, false, true, false, false, true, false, false, false, true, false, 4153),
      new Method("createValueOfMap", java.lang.Enum.class, com.google.gwt.core.client.JavaScriptObject.class, new Parameter[] {arg0___Ljava_lang_Enum_, }, false, false, true, false, false, true, false, false, false, true, false, 4154),
      new Method("get0", java.lang.Enum.class, java.lang.Enum.class, new Parameter[] {arg0__Lcom_google_gwt_core_client_JavaScriptObject_, arg1__Ljava_lang_String_, }, false, false, true, false, true, false, false, false, false, true, false, 4155),
      new Method("invokeValueOf", java.lang.Enum.class, java.lang.Enum.class, new Parameter[] {arg0__Lcom_google_gwt_core_client_JavaScriptObject_, arg1__Ljava_lang_String_, }, false, false, true, false, true, false, false, false, false, true, false, 4156),
      new Method("put0", java.lang.Enum.class, void.class, new Parameter[] {arg0__Lcom_google_gwt_core_client_JavaScriptObject_, arg1__Ljava_lang_String_, arg2__Ljava_lang_Enum_, }, false, false, true, false, true, false, false, false, false, true, false, 4157),
      new Method("compareTo", java.lang.Enum.class, int.class, new Parameter[] {arg0__Ljava_lang_Enum_, }, false, true, false, false, false, false, true, false, false, true, false, 4158),
      new Method("equals", java.lang.Enum.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, true, false, false, false, false, true, false, false, true, false, 4159),
      new Method("getDeclaringClass", java.lang.Enum.class, java.lang.Class.class, EMPTY_PARAMETERS,false, true, false, false, false, false, true, false, false, true, false, 4160),
      new Method("hashCode", java.lang.Enum.class, int.class, EMPTY_PARAMETERS,false, true, false, false, false, false, true, false, false, true, false, 4161),
      new Method("name", java.lang.Enum.class, java.lang.String.class, EMPTY_PARAMETERS,false, true, false, false, false, false, true, false, false, true, false, 4162),
      new Method("obfuscatedName", java.lang.Enum.class, java.lang.String.class, EMPTY_PARAMETERS,false, true, false, false, false, false, true, false, false, true, false, 4163),
      new Method("ordinal", java.lang.Enum.class, int.class, EMPTY_PARAMETERS,false, true, false, false, false, false, true, false, false, true, false, 4164),
      new Method("toString", java.lang.Enum.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4165),
  };
  types.put("java.lang.Enum", t);
  }
  private void c223() {
  Type t = new Type("java.lang.Enum[]", 4166, java.lang.Enum[].class, null, null);
  t.isPrimitive = true;
  types.put("java.lang.Enum[]", t);
  }
  private void c224() {
  Type t = new Type("java.lang.Float", 4167, java.lang.Float.class, java.lang.Number.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.Number.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MAX_VALUE", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4169, 4168, null), 
      new Field("MIN_VALUE", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4171, 4170, null), 
      new Field("MAX_EXPONENT", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4173, 4172, null), 
      new Field("MIN_EXPONENT", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4175, 4174, null), 
      new Field("MIN_NORMAL", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4177, 4176, null), 
      new Field("NaN", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4179, 4178, null), 
      new Field("NEGATIVE_INFINITY", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4181, 4180, null), 
      new Field("POSITIVE_INFINITY", java.lang.Float.class, float.class, true, false, false, false, true, true, false, false, 4183, 4182, null), 
      new Field("SIZE", java.lang.Float.class, int.class, true, false, false, false, true, true, false, false, 4185, 4184, null), 
      new Field("TYPE", java.lang.Float.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 4187, 4186, new Class[] {java.lang.Float.class, }), 
      new Field("POWER_31_INT", java.lang.Float.class, long.class, true, false, true, false, false, true, false, false, 4189, 4188, null), 
      new Field("POWER_32_INT", java.lang.Float.class, long.class, true, false, true, false, false, true, false, false, 4191, 4190, null), 
      new Field("value", java.lang.Float.class, float.class, true, false, true, false, false, false, true, false, 4193, 4192, null), 
  };
  t.methods = new Method[] {
      new Method("compare", java.lang.Float.class, int.class, new Parameter[] {x__F, y__F, }, false, false, true, false, false, false, true, false, false, true, false, 4194),
      new Method("floatToIntBits", java.lang.Float.class, int.class, new Parameter[] {value__F, }, false, false, true, false, false, false, true, false, false, true, false, 4195),
      new Method("hashCode", java.lang.Float.class, int.class, new Parameter[] {f__F, }, false, false, true, false, false, false, true, false, false, true, false, 4196),
      new Method("hashCode", java.lang.Float.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4197),
      new Method("intBitsToFloat", java.lang.Float.class, float.class, new Parameter[] {bits__I, }, false, false, true, false, false, false, true, false, false, true, false, 4198),
      new Method("isInfinite", java.lang.Float.class, boolean.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 4199),
      new Method("isInfinite", java.lang.Float.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4200),
      new Method("isNaN", java.lang.Float.class, boolean.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 4201),
      new Method("isNaN", java.lang.Float.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4202),
      new Method("parseFloat", java.lang.Float.class, float.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4203),
      new Method("toString", java.lang.Float.class, java.lang.String.class, new Parameter[] {b__F, }, false, false, true, false, false, false, true, false, false, true, false, 4204),
      new Method("toString", java.lang.Float.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4205),
      new Method("valueOf", java.lang.Float.class, java.lang.Float.class, new Parameter[] {f__F, }, false, false, true, false, false, false, true, false, false, true, false, 4206),
      new Method("valueOf", java.lang.Float.class, java.lang.Float.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4207),
      new Method("byteValue", java.lang.Float.class, byte.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4208),
      new Method("compareTo", java.lang.Float.class, int.class, new Parameter[] {b__Ljava_lang_Float_, }, false, false, false, false, false, false, true, false, false, true, false, 4209),
      new Method("doubleValue", java.lang.Float.class, double.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4210),
      new Method("equals", java.lang.Float.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4211),
      new Method("floatValue", java.lang.Float.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4212),
      new Method("intValue", java.lang.Float.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4213),
      new Method("longValue", java.lang.Float.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4214),
      new Method("shortValue", java.lang.Float.class, short.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4215),
  };
  t.constructors = new Constructor[] {
      new Constructor("Float", java.lang.Float.class, java.lang.Float.class, new Parameter[] {value__D, }, false, false, false, false, false, false, true, false, false, false, true, 4216),
      new Constructor("Float", java.lang.Float.class, java.lang.Float.class, new Parameter[] {value__F, }, false, false, false, false, false, false, true, false, false, false, true, 4217),
      new Constructor("Float", java.lang.Float.class, java.lang.Float.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4218),
  };
  types.put("java.lang.Float", t);
  }
  private void c225() {
  Type t = new Type("java.lang.Integer", 4219, java.lang.Integer.class, java.lang.Number.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.Number.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MAX_VALUE", java.lang.Integer.class, int.class, true, false, false, false, true, true, false, false, 4221, 4220, null), 
      new Field("MIN_VALUE", java.lang.Integer.class, int.class, true, false, false, false, true, true, false, false, 4223, 4222, null), 
      new Field("SIZE", java.lang.Integer.class, int.class, true, false, false, false, true, true, false, false, 4225, 4224, null), 
      new Field("TYPE", java.lang.Integer.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 4227, 4226, new Class[] {java.lang.Integer.class, }), 
      new Field("value", java.lang.Integer.class, int.class, true, false, true, false, false, false, true, false, 4229, 4228, null), 
  };
  t.methods = new Method[] {
      new Method("bitCount", java.lang.Integer.class, int.class, new Parameter[] {x__I, }, false, false, true, false, false, false, true, false, false, true, false, 4230),
      new Method("decode", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4231),
      new Method("hashCode", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4232),
      new Method("hashCode", java.lang.Integer.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4233),
      new Method("highestOneBit", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4234),
      new Method("lowestOneBit", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4235),
      new Method("numberOfLeadingZeros", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4236),
      new Method("numberOfTrailingZeros", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4237),
      new Method("parseInt", java.lang.Integer.class, int.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4238),
      new Method("parseInt", java.lang.Integer.class, int.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4239),
      new Method("reverse", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4240),
      new Method("reverseBytes", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4241),
      new Method("rotateLeft", java.lang.Integer.class, int.class, new Parameter[] {i__I, distance__I, }, false, false, true, false, false, false, true, false, false, true, false, 4242),
      new Method("rotateRight", java.lang.Integer.class, int.class, new Parameter[] {i__I, distance__I, }, false, false, true, false, false, false, true, false, false, true, false, 4243),
      new Method("signum", java.lang.Integer.class, int.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4244),
      new Method("toBinaryString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 4245),
      new Method("toHexString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 4246),
      new Method("toOctalString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 4247),
      new Method("toString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, }, false, false, true, false, false, false, true, false, false, true, false, 4248),
      new Method("toString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4249),
      new Method("toString", java.lang.Integer.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4250),
      new Method("valueOf", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {i__I, }, false, false, true, false, false, false, true, false, false, true, false, 4251),
      new Method("valueOf", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4252),
      new Method("valueOf", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4253),
      new Method("toPowerOfTwoString", java.lang.Integer.class, java.lang.String.class, new Parameter[] {value__I, shift__I, }, false, false, true, false, true, false, false, false, false, true, false, 4254),
      new Method("byteValue", java.lang.Integer.class, byte.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4255),
      new Method("compareTo", java.lang.Integer.class, int.class, new Parameter[] {b__Ljava_lang_Integer_, }, false, false, false, false, false, false, true, false, false, true, false, 4256),
      new Method("doubleValue", java.lang.Integer.class, double.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4257),
      new Method("equals", java.lang.Integer.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4258),
      new Method("floatValue", java.lang.Integer.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4259),
      new Method("intValue", java.lang.Integer.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4260),
      new Method("longValue", java.lang.Integer.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4261),
      new Method("shortValue", java.lang.Integer.class, short.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4262),
  };
  t.constructors = new Constructor[] {
      new Constructor("Integer", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {value__I, }, false, false, false, false, false, false, true, false, false, false, true, 4263),
      new Constructor("Integer", java.lang.Integer.class, java.lang.Integer.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4264),
  };
  types.put("java.lang.Integer", t);
  }
  private void c226() {
  Type t = new Type("java.lang.Object", 4265, java.lang.Object.class, null, null);
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("___clazz", java.lang.Object.class, java.lang.Class.class, false, false, true, false, false, false, true, false, 4267, 4266, new Class[] {Object.class, }), 
      new Field("expando", java.lang.Object.class, com.google.gwt.core.client.JavaScriptObject.class, false, false, true, false, false, false, true, false, 4269, 4268, null), 
      new Field("castableTypeMap", java.lang.Object.class, com.google.gwt.core.client.JavaScriptObject.class, false, false, true, false, false, false, true, false, 4271, 4270, null), 
      new Field("typeMarker", java.lang.Object.class, com.google.gwt.core.client.JavaScriptObject.class, false, false, true, false, false, false, true, false, 4273, 4272, null), 
  };
  t.methods = new Method[] {
      new Method("equals", java.lang.Object.class, boolean.class, new Parameter[] {other__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4274),
      new Method("getClass", java.lang.Object.class, java.lang.Class.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4275),
      new Method("hashCode", java.lang.Object.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4276),
      new Method("toString", java.lang.Object.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4277),
      new Method("finalize", java.lang.Object.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, true, false, false, false, true, false, 4278),
  };
  t.constructors = new Constructor[] {
      new Constructor("Object", java.lang.Object.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4279),
  };
  types.put("java.lang.Object", t);
  }
  private void c227() {
  Type t = new Type("java.lang.Object[]", 4280, java.lang.Object[].class, null, null);
  t.isPrimitive = true;
  types.put("java.lang.Object[]", t);
  }
  private void c228() {
  Type t = new Type("java.lang.Short", 4281, java.lang.Short.class, java.lang.Number.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.Number.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("MIN_VALUE", java.lang.Short.class, short.class, true, false, false, false, true, true, false, false, 4283, 4282, null), 
      new Field("MAX_VALUE", java.lang.Short.class, short.class, true, false, false, false, true, true, false, false, 4285, 4284, null), 
      new Field("SIZE", java.lang.Short.class, int.class, true, false, false, false, true, true, false, false, 4287, 4286, null), 
      new Field("TYPE", java.lang.Short.class, java.lang.Class.class, true, false, false, false, true, true, false, false, 4289, 4288, new Class[] {java.lang.Short.class, }), 
      new Field("value", java.lang.Short.class, short.class, true, false, true, false, false, false, true, false, 4291, 4290, null), 
  };
  t.methods = new Method[] {
      new Method("decode", java.lang.Short.class, java.lang.Short.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4292),
      new Method("hashCode", java.lang.Short.class, int.class, new Parameter[] {s__S, }, false, false, true, false, false, false, true, false, false, true, false, 4293),
      new Method("hashCode", java.lang.Short.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4294),
      new Method("parseShort", java.lang.Short.class, short.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4295),
      new Method("parseShort", java.lang.Short.class, short.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4296),
      new Method("reverseBytes", java.lang.Short.class, short.class, new Parameter[] {s__S, }, false, false, true, false, false, false, true, false, false, true, false, 4297),
      new Method("toString", java.lang.Short.class, java.lang.String.class, new Parameter[] {b__S, }, false, false, true, false, false, false, true, false, false, true, false, 4298),
      new Method("toString", java.lang.Short.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4299),
      new Method("valueOf", java.lang.Short.class, java.lang.Short.class, new Parameter[] {s__S, }, false, false, true, false, false, false, true, false, false, true, false, 4300),
      new Method("valueOf", java.lang.Short.class, java.lang.Short.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, true, false, false, false, true, false, false, true, false, 4301),
      new Method("valueOf", java.lang.Short.class, java.lang.Short.class, new Parameter[] {s__Ljava_lang_String_, radix__I, }, false, false, true, false, false, false, true, false, false, true, false, 4302),
      new Method("byteValue", java.lang.Short.class, byte.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4303),
      new Method("compareTo", java.lang.Short.class, int.class, new Parameter[] {b__Ljava_lang_Short_, }, false, false, false, false, false, false, true, false, false, true, false, 4304),
      new Method("doubleValue", java.lang.Short.class, double.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4305),
      new Method("equals", java.lang.Short.class, boolean.class, new Parameter[] {o__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4306),
      new Method("floatValue", java.lang.Short.class, float.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4307),
      new Method("intValue", java.lang.Short.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4308),
      new Method("longValue", java.lang.Short.class, long.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4309),
      new Method("shortValue", java.lang.Short.class, short.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4310),
  };
  t.constructors = new Constructor[] {
      new Constructor("Short", java.lang.Short.class, java.lang.Short.class, new Parameter[] {value__S, }, false, false, false, false, false, false, true, false, false, false, true, 4311),
      new Constructor("Short", java.lang.Short.class, java.lang.Short.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4312),
  };
  types.put("java.lang.Short", t);
  }
  private void c229() {
  Type t = new Type("java.lang.String", 4313, java.lang.String.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.Comparable.class, java.lang.CharSequence.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("CASE_INSENSITIVE_ORDER", java.lang.String.class, java.util.Comparator.class, true, false, false, false, true, true, false, false, 4315, 4314, new Class[] {java.lang.String.class, }), 
      new Field("CHARSET_8859_1", java.lang.String.class, java.lang.String.class, true, false, true, false, false, true, false, false, 4317, 4316, null), 
      new Field("CHARSET_LATIN1", java.lang.String.class, java.lang.String.class, true, false, true, false, false, true, false, false, 4319, 4318, null), 
      new Field("CHARSET_UTF8", java.lang.String.class, java.lang.String.class, true, false, true, false, false, true, false, false, 4321, 4320, null), 
  };
  t.methods = new Method[] {
      new Method("copyValueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {v___C, }, false, false, true, false, false, false, true, false, false, true, false, 4322),
      new Method("copyValueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {v___C, offset__I, count__I, }, false, false, true, false, false, false, true, false, false, true, false, 4323),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__Z, }, false, false, true, false, false, false, true, false, false, true, false, 4324),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__C, }, false, false, true, false, false, false, true, false, false, true, false, 4325),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x___C, offset__I, count__I, }, false, false, true, false, false, false, true, false, false, true, false, 4326),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x___C, }, false, false, true, false, false, false, true, false, false, true, false, 4327),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__D, }, false, false, true, false, false, false, true, false, false, true, false, 4328),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__F, }, false, false, true, false, false, false, true, false, false, true, false, 4329),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__I, }, false, false, true, false, false, false, true, false, false, true, false, 4330),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__J, }, false, false, true, false, false, false, true, false, false, true, false, 4331),
      new Method("valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x__Ljava_lang_Object_, }, false, false, true, false, false, false, true, false, false, true, false, 4332),
      new Method("__checkBounds", java.lang.String.class, void.class, new Parameter[] {legalCount__I, start__I, end__I, }, false, false, true, true, false, false, false, false, false, true, false, 4333),
      new Method("__createArray", java.lang.String.class, java.lang.String[].class, new Parameter[] {numElements__I, }, false, false, true, true, false, false, false, false, false, true, false, 4334),
      new Method("__translateReplaceString", java.lang.String.class, java.lang.String.class, new Parameter[] {replaceStr__Ljava_lang_String_, }, false, false, true, true, false, false, false, false, false, true, false, 4335),
      new Method("__valueOf", java.lang.String.class, java.lang.String.class, new Parameter[] {x___C, start__I, end__I, }, false, false, true, true, false, false, false, false, false, true, false, 4336),
      new Method("_String", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, true, true, false, false, false, false, false, true, false, 4337),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, }, false, false, true, true, false, false, false, false, false, true, false, 4338),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, }, false, false, true, true, false, false, false, false, false, true, false, 4339),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, charset__Ljava_lang_String_, }, false, false, true, true, false, false, false, false, false, true, false, 4340),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, charsetName__Ljava_lang_String_, }, false, false, true, true, false, false, false, false, false, true, false, 4341),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {value___C, }, false, false, true, true, false, false, false, false, false, true, false, 4342),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {value___C, offset__I, count__I, }, false, false, true, true, false, false, false, false, false, true, false, 4343),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {codePoints___I, offset__I, count__I, }, false, false, true, true, false, false, false, false, false, true, false, 4344),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {other__Ljava_lang_String_, }, false, false, true, true, false, false, false, false, false, true, false, 4345),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {sb__Ljava_lang_StringBuffer_, }, false, false, true, true, false, false, false, false, false, true, false, 4346),
      new Method("_String", java.lang.String.class, java.lang.String.class, new Parameter[] {sb__Ljava_lang_StringBuilder_, }, false, false, true, true, false, false, false, false, false, true, false, 4347),
      new Method("__equals", java.lang.String.class, boolean.class, new Parameter[] {me__Ljava_lang_String_, other__Ljava_lang_Object_, }, false, false, true, false, true, false, false, false, false, true, false, 4348),
      new Method("compareTo", java.lang.String.class, int.class, new Parameter[] {thisStr__Ljava_lang_String_, otherStr__Ljava_lang_String_, }, false, false, true, false, true, false, false, false, false, true, false, 4349),
      new Method("compareTo", java.lang.String.class, int.class, new Parameter[] {other__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4350),
      new Method("encodeUtf8", java.lang.String.class, int.class, new Parameter[] {bytes___B, ofs__I, codePoint__I, }, false, false, true, false, true, false, false, false, false, true, false, 4351),
      new Method("fromCharCode", java.lang.String.class, java.lang.String.class, new Parameter[] {ch__C, }, false, false, true, false, true, false, false, false, false, true, false, 4352),
      new Method("fromCodePoint", java.lang.String.class, java.lang.String.class, new Parameter[] {codePoint__I, }, false, false, true, false, true, false, false, false, false, true, false, 4353),
      new Method("getBytesLatin1", java.lang.String.class, byte[].class, new Parameter[] {str__Ljava_lang_String_, }, false, false, true, false, true, false, false, false, false, true, false, 4354),
      new Method("getBytesUtf8", java.lang.String.class, byte[].class, new Parameter[] {str__Ljava_lang_String_, }, false, false, true, false, true, false, false, false, false, true, false, 4355),
      new Method("latin1ToString", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, }, false, false, true, false, true, false, false, false, false, true, false, 4356),
      new Method("regionMatches", java.lang.String.class, boolean.class, new Parameter[] {thisStr__Ljava_lang_String_, ignoreCase__Z, toffset__I, other__Ljava_lang_String_, ooffset__I, len__I, }, false, false, true, false, true, false, false, false, false, true, false, 4357),
      new Method("regionMatches", java.lang.String.class, boolean.class, new Parameter[] {ignoreCase__Z, toffset__I, other__Ljava_lang_String_, ooffset__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4358),
      new Method("regionMatches", java.lang.String.class, boolean.class, new Parameter[] {toffset__I, other__Ljava_lang_String_, ooffset__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4359),
      new Method("utf8ToString", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, }, false, false, true, false, true, false, false, false, false, true, false, 4360),
      new Method("charAt", java.lang.String.class, char.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 4361),
      new Method("codePointAt", java.lang.String.class, int.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 4362),
      new Method("codePointBefore", java.lang.String.class, int.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 4363),
      new Method("codePointCount", java.lang.String.class, int.class, new Parameter[] {beginIndex__I, endIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4364),
      new Method("compareToIgnoreCase", java.lang.String.class, int.class, new Parameter[] {other__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4365),
      new Method("concat", java.lang.String.class, java.lang.String.class, new Parameter[] {str__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4366),
      new Method("contains", java.lang.String.class, boolean.class, new Parameter[] {s__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4367),
      new Method("contentEquals", java.lang.String.class, boolean.class, new Parameter[] {cs__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4368),
      new Method("contentEquals", java.lang.String.class, boolean.class, new Parameter[] {sb__Ljava_lang_StringBuffer_, }, false, false, false, false, false, false, true, false, false, true, false, 4369),
      new Method("endsWith", java.lang.String.class, boolean.class, new Parameter[] {suffix__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4370),
      new Method("equals", java.lang.String.class, boolean.class, new Parameter[] {other__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4371),
      new Method("equalsIgnoreCase", java.lang.String.class, boolean.class, new Parameter[] {other__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4372),
      new Method("getBytes", java.lang.String.class, byte[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4373),
      new Method("getBytes", java.lang.String.class, byte[].class, new Parameter[] {charSet__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4374),
      new Method("getChars", java.lang.String.class, void.class, new Parameter[] {srcBegin__I, srcEnd__I, dst___C, dstBegin__I, }, false, false, false, false, false, false, true, false, false, true, false, 4375),
      new Method("hashCode", java.lang.String.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4376),
      new Method("indexOf", java.lang.String.class, int.class, new Parameter[] {codePoint__I, }, false, false, false, false, false, false, true, false, false, true, false, 4377),
      new Method("indexOf", java.lang.String.class, int.class, new Parameter[] {codePoint__I, startIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4378),
      new Method("indexOf", java.lang.String.class, int.class, new Parameter[] {str__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4379),
      new Method("indexOf", java.lang.String.class, int.class, new Parameter[] {str__Ljava_lang_String_, startIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4380),
      new Method("intern", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4381),
      new Method("isEmpty", java.lang.String.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4382),
      new Method("lastIndexOf", java.lang.String.class, int.class, new Parameter[] {codePoint__I, }, false, false, false, false, false, false, true, false, false, true, false, 4383),
      new Method("lastIndexOf", java.lang.String.class, int.class, new Parameter[] {codePoint__I, startIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4384),
      new Method("lastIndexOf", java.lang.String.class, int.class, new Parameter[] {str__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4385),
      new Method("lastIndexOf", java.lang.String.class, int.class, new Parameter[] {str__Ljava_lang_String_, start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4386),
      new Method("length", java.lang.String.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4387),
      new Method("matches", java.lang.String.class, boolean.class, new Parameter[] {regex__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4388),
      new Method("offsetByCodePoints", java.lang.String.class, int.class, new Parameter[] {index__I, codePointOffset__I, }, false, false, false, false, false, false, true, false, false, true, false, 4389),
      new Method("replace", java.lang.String.class, java.lang.String.class, new Parameter[] {from__C, to__C, }, false, false, false, false, false, false, true, false, false, true, false, 4390),
      new Method("replace", java.lang.String.class, java.lang.String.class, new Parameter[] {from__Ljava_lang_CharSequence_, to__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4391),
      new Method("replaceAll", java.lang.String.class, java.lang.String.class, new Parameter[] {regex__Ljava_lang_String_, replace__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4392),
      new Method("replaceFirst", java.lang.String.class, java.lang.String.class, new Parameter[] {regex__Ljava_lang_String_, replace__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4393),
      new Method("split", java.lang.String.class, java.lang.String[].class, new Parameter[] {regex__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4394),
      new Method("split", java.lang.String.class, java.lang.String[].class, new Parameter[] {regex__Ljava_lang_String_, maxMatch__I, }, false, false, false, false, false, false, true, false, false, true, false, 4395),
      new Method("startsWith", java.lang.String.class, boolean.class, new Parameter[] {prefix__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4396),
      new Method("startsWith", java.lang.String.class, boolean.class, new Parameter[] {prefix__Ljava_lang_String_, toffset__I, }, false, false, false, false, false, false, true, false, false, true, false, 4397),
      new Method("subSequence", java.lang.String.class, java.lang.CharSequence.class, new Parameter[] {beginIndex__I, endIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4398),
      new Method("substring", java.lang.String.class, java.lang.String.class, new Parameter[] {beginIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4399),
      new Method("substring", java.lang.String.class, java.lang.String.class, new Parameter[] {beginIndex__I, endIndex__I, }, false, false, false, false, false, false, true, false, false, true, false, 4400),
      new Method("toCharArray", java.lang.String.class, char[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4401),
      new Method("toLowerCase", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4402),
      new Method("toString", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4403),
      new Method("toUpperCase", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4404),
      new Method("trim", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4405),
  };
  t.constructors = new Constructor[] {
      new Constructor("String", java.lang.String.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4406),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, }, false, false, false, false, false, false, true, false, false, false, true, 4407),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, }, false, false, false, false, false, false, true, false, false, false, true, 4408),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, ofs__I, len__I, charsetName__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4409),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {bytes___B, charsetName__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4410),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {value___C, }, false, false, false, false, false, false, true, false, false, false, true, 4411),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {value___C, offset__I, count__I, }, false, false, false, false, false, false, true, false, false, false, true, 4412),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {codePoints___I, offset__I, count__I, }, false, false, false, false, false, false, true, false, false, false, true, 4413),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {other__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4414),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {sb__Ljava_lang_StringBuffer_, }, false, false, false, false, false, false, true, false, false, false, true, 4415),
      new Constructor("String", java.lang.String.class, java.lang.String.class, new Parameter[] {sb__Ljava_lang_StringBuilder_, }, false, false, false, false, false, false, true, false, false, false, true, 4416),
  };
  types.put("java.lang.String", t);
  }
  private void c230() {
  Type t = new Type("java.lang.StringBuffer", 4417, java.lang.StringBuffer.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.CharSequence.class, java.lang.Appendable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("impl", java.lang.StringBuffer.class, com.google.gwt.core.client.impl.StringBufferImpl.class, true, false, true, false, false, false, false, false, 4419, 4418, null), 
      new Field("data", java.lang.StringBuffer.class, java.lang.Object.class, true, false, true, false, false, false, false, false, 4421, 4420, null), 
  };
  t.methods = new Method[] {
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Z, }, false, false, false, false, false, false, true, false, false, true, false, 4422),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4423),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x___C, }, false, false, false, false, false, false, true, false, false, true, false, 4424),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x___C, start__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4425),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4426),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4427),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__D, }, false, false, false, false, false, false, true, false, false, true, false, 4428),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 4429),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__I, }, false, false, false, false, false, false, true, false, false, true, false, 4430),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__J, }, false, false, false, false, false, false, true, false, false, true, false, 4431),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4432),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4433),
      new Method("append", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {x__Ljava_lang_StringBuffer_, }, false, false, false, false, false, false, true, false, false, true, false, 4434),
      new Method("capacity", java.lang.StringBuffer.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4435),
      new Method("charAt", java.lang.StringBuffer.class, char.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 4436),
      new Method("delete", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4437),
      new Method("deleteCharAt", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4438),
      new Method("ensureCapacity", java.lang.StringBuffer.class, void.class, new Parameter[] {ignoredCapacity__I, }, false, false, false, false, false, false, true, false, false, true, false, 4439),
      new Method("getChars", java.lang.StringBuffer.class, void.class, new Parameter[] {srcStart__I, srcEnd__I, dst___C, dstStart__I, }, false, false, false, false, false, false, true, false, false, true, false, 4440),
      new Method("indexOf", java.lang.StringBuffer.class, int.class, new Parameter[] {x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4441),
      new Method("indexOf", java.lang.StringBuffer.class, int.class, new Parameter[] {x__Ljava_lang_String_, start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4442),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__Z, }, false, false, false, false, false, false, true, false, false, true, false, 4443),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4444),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x___C, }, false, false, false, false, false, false, true, false, false, true, false, 4445),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x___C, offset__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4446),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, chars__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4447),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, chars__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4448),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__D, }, false, false, false, false, false, false, true, false, false, true, false, 4449),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__F, }, false, false, false, false, false, false, true, false, false, true, false, 4450),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__I, }, false, false, false, false, false, false, true, false, false, true, false, 4451),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__J, }, false, false, false, false, false, false, true, false, false, true, false, 4452),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4453),
      new Method("insert", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {index__I, x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4454),
      new Method("lastIndexOf", java.lang.StringBuffer.class, int.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4455),
      new Method("lastIndexOf", java.lang.StringBuffer.class, int.class, new Parameter[] {s__Ljava_lang_String_, start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4456),
      new Method("length", java.lang.StringBuffer.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4457),
      new Method("replace", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {start__I, end__I, toInsert__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4458),
      new Method("setCharAt", java.lang.StringBuffer.class, void.class, new Parameter[] {index__I, x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4459),
      new Method("setLength", java.lang.StringBuffer.class, void.class, new Parameter[] {newLength__I, }, false, false, false, false, false, false, true, false, false, true, false, 4460),
      new Method("subSequence", java.lang.StringBuffer.class, java.lang.CharSequence.class, new Parameter[] {start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4461),
      new Method("substring", java.lang.StringBuffer.class, java.lang.String.class, new Parameter[] {begin__I, }, false, false, false, false, false, false, true, false, false, true, false, 4462),
      new Method("substring", java.lang.StringBuffer.class, java.lang.String.class, new Parameter[] {begin__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4463),
      new Method("toString", java.lang.StringBuffer.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4464),
      new Method("trimToSize", java.lang.StringBuffer.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4465),
  };
  t.constructors = new Constructor[] {
      new Constructor("StringBuffer", java.lang.StringBuffer.class, java.lang.StringBuffer.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4466),
      new Constructor("StringBuffer", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {s__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, false, true, 4467),
      new Constructor("StringBuffer", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {ignoredCapacity__I, }, false, false, false, false, false, false, true, false, false, false, true, 4468),
      new Constructor("StringBuffer", java.lang.StringBuffer.class, java.lang.StringBuffer.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4469),
  };
  types.put("java.lang.StringBuffer", t);
  }
  private void c231() {
  Type t = new Type("java.lang.StringBuilder", 4470, java.lang.StringBuilder.class, java.lang.Object.class, new HashSet<Class>(Arrays.asList(java.lang.CharSequence.class, java.lang.Appendable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("impl", java.lang.StringBuilder.class, com.google.gwt.core.client.impl.StringBufferImpl.class, true, false, true, false, false, false, false, false, 4472, 4471, null), 
      new Field("data", java.lang.StringBuilder.class, java.lang.Object.class, true, false, true, false, false, false, false, false, 4474, 4473, null), 
  };
  t.methods = new Method[] {
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Z, }, false, false, false, false, false, false, true, false, false, true, false, 4475),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4476),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x___C, }, false, false, false, false, false, false, true, false, false, true, false, 4477),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x___C, start__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4478),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4479),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4480),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__D, }, false, false, false, false, false, false, true, false, false, true, false, 4481),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__F, }, false, false, false, false, false, false, true, false, false, true, false, 4482),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__I, }, false, false, false, false, false, false, true, false, false, true, false, 4483),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__J, }, false, false, false, false, false, false, true, false, false, true, false, 4484),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4485),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4486),
      new Method("append", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {x__Ljava_lang_StringBuilder_, }, false, false, false, false, false, false, true, false, false, true, false, 4487),
      new Method("capacity", java.lang.StringBuilder.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4488),
      new Method("charAt", java.lang.StringBuilder.class, char.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, true, false, 4489),
      new Method("delete", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4490),
      new Method("deleteCharAt", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4491),
      new Method("ensureCapacity", java.lang.StringBuilder.class, void.class, new Parameter[] {ignoredCapacity__I, }, false, false, false, false, false, false, true, false, false, true, false, 4492),
      new Method("getChars", java.lang.StringBuilder.class, void.class, new Parameter[] {srcStart__I, srcEnd__I, dst___C, dstStart__I, }, false, false, false, false, false, false, true, false, false, true, false, 4493),
      new Method("indexOf", java.lang.StringBuilder.class, int.class, new Parameter[] {x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4494),
      new Method("indexOf", java.lang.StringBuilder.class, int.class, new Parameter[] {x__Ljava_lang_String_, start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4495),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__Z, }, false, false, false, false, false, false, true, false, false, true, false, 4496),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4497),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x___C, }, false, false, false, false, false, false, true, false, false, true, false, 4498),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x___C, offset__I, len__I, }, false, false, false, false, false, false, true, false, false, true, false, 4499),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, chars__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, true, false, 4500),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, chars__Ljava_lang_CharSequence_, start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4501),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__D, }, false, false, false, false, false, false, true, false, false, true, false, 4502),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__F, }, false, false, false, false, false, false, true, false, false, true, false, 4503),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__I, }, false, false, false, false, false, false, true, false, false, true, false, 4504),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__J, }, false, false, false, false, false, false, true, false, false, true, false, 4505),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4506),
      new Method("insert", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {index__I, x__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4507),
      new Method("lastIndexOf", java.lang.StringBuilder.class, int.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4508),
      new Method("lastIndexOf", java.lang.StringBuilder.class, int.class, new Parameter[] {s__Ljava_lang_String_, start__I, }, false, false, false, false, false, false, true, false, false, true, false, 4509),
      new Method("length", java.lang.StringBuilder.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4510),
      new Method("replace", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {start__I, end__I, toInsert__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, true, false, 4511),
      new Method("setCharAt", java.lang.StringBuilder.class, void.class, new Parameter[] {index__I, x__C, }, false, false, false, false, false, false, true, false, false, true, false, 4512),
      new Method("setLength", java.lang.StringBuilder.class, void.class, new Parameter[] {newLength__I, }, false, false, false, false, false, false, true, false, false, true, false, 4513),
      new Method("subSequence", java.lang.StringBuilder.class, java.lang.CharSequence.class, new Parameter[] {start__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4514),
      new Method("substring", java.lang.StringBuilder.class, java.lang.String.class, new Parameter[] {begin__I, }, false, false, false, false, false, false, true, false, false, true, false, 4515),
      new Method("substring", java.lang.StringBuilder.class, java.lang.String.class, new Parameter[] {begin__I, end__I, }, false, false, false, false, false, false, true, false, false, true, false, 4516),
      new Method("toString", java.lang.StringBuilder.class, java.lang.String.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4517),
      new Method("trimToSize", java.lang.StringBuilder.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4518),
  };
  t.constructors = new Constructor[] {
      new Constructor("StringBuilder", java.lang.StringBuilder.class, java.lang.StringBuilder.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4519),
      new Constructor("StringBuilder", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {s__Ljava_lang_CharSequence_, }, false, false, false, false, false, false, true, false, false, false, true, 4520),
      new Constructor("StringBuilder", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {ignoredCapacity__I, }, false, false, false, false, false, false, true, false, false, false, true, 4521),
      new Constructor("StringBuilder", java.lang.StringBuilder.class, java.lang.StringBuilder.class, new Parameter[] {s__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4522),
  };
  types.put("java.lang.StringBuilder", t);
  }
  private void c232() {
  Type t = new Type("java.lang.StringIndexOutOfBoundsException", 4523, java.lang.StringIndexOutOfBoundsException.class, java.lang.IndexOutOfBoundsException.class, new HashSet<Class>(Arrays.asList(java.lang.IndexOutOfBoundsException.class, java.lang.RuntimeException.class, java.lang.Exception.class, java.lang.Throwable.class, java.io.Serializable.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.constructors = new Constructor[] {
      new Constructor("StringIndexOutOfBoundsException", java.lang.StringIndexOutOfBoundsException.class, java.lang.StringIndexOutOfBoundsException.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4524),
      new Constructor("StringIndexOutOfBoundsException", java.lang.StringIndexOutOfBoundsException.class, java.lang.StringIndexOutOfBoundsException.class, new Parameter[] {message__Ljava_lang_String_, }, false, false, false, false, false, false, true, false, false, false, true, 4525),
      new Constructor("StringIndexOutOfBoundsException", java.lang.StringIndexOutOfBoundsException.class, java.lang.StringIndexOutOfBoundsException.class, new Parameter[] {index__I, }, false, false, false, false, false, false, true, false, false, false, true, 4526),
  };
  types.put("java.lang.StringIndexOutOfBoundsException", t);
  }
  private void c233() {
  Type t = new Type("java.lang.String[]", 4527, java.lang.String[].class, null, null);
  t.isPrimitive = true;
  types.put("java.lang.String[]", t);
  }
  private void c234() {
  Type t = new Type("java.util.ArrayList", 4528, java.util.ArrayList.class, java.util.AbstractList.class, new HashSet<Class>(Arrays.asList(java.util.List.class, java.util.Collection.class, java.lang.Iterable.class, java.lang.Cloneable.class, java.util.RandomAccess.class, java.io.Serializable.class, java.util.AbstractList.class, java.util.AbstractCollection.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("array", java.util.ArrayList.class, java.lang.Object[].class, false, false, true, false, false, false, true, false, 4530, 4529, null), 
      new Field("exposeElement", java.util.ArrayList.class, java.lang.Object.class, false, false, true, false, false, false, false, false, 4532, 4531, null), 
      new Field("size", java.util.ArrayList.class, int.class, false, false, true, false, false, false, false, false, 4534, 4533, null), 
  };
  t.methods = new Method[] {
      new Method("setCapacity", java.util.ArrayList.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, arg1__I, }, false, false, true, false, true, false, false, false, false, true, false, 4535),
      new Method("splice", java.util.ArrayList.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, arg1__I, arg2__I, }, false, false, true, false, true, false, false, false, false, true, false, 4536),
      new Method("splice", java.util.ArrayList.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, arg1__I, arg2__I, arg3__Ljava_lang_Object_, }, false, false, true, false, true, false, false, false, false, true, false, 4537),
      new Method("spliceArray", java.util.ArrayList.class, void.class, new Parameter[] {arg0___Ljava_lang_Object_, arg1__I, arg2__I, arg3___Ljava_lang_Object_, }, false, false, true, false, true, false, false, false, false, true, false, 4538),
      new Method("add", java.util.ArrayList.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4539),
      new Method("add", java.util.ArrayList.class, void.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4540),
      new Method("addAll", java.util.ArrayList.class, boolean.class, new Parameter[] {arg0__Ljava_util_Collection_, }, false, false, false, false, false, false, true, false, false, true, false, 4541),
      new Method("addAll", java.util.ArrayList.class, boolean.class, new Parameter[] {arg0__I, arg1__Ljava_util_Collection_, }, false, false, false, false, false, false, true, false, false, true, false, 4542),
      new Method("clear", java.util.ArrayList.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4543),
      new Method("clone", java.util.ArrayList.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4544),
      new Method("contains", java.util.ArrayList.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4545),
      new Method("ensureCapacity", java.util.ArrayList.class, void.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 4546),
      new Method("get", java.util.ArrayList.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 4547),
      new Method("indexOf", java.util.ArrayList.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4548),
      new Method("indexOf", java.util.ArrayList.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__I, }, false, false, false, true, false, false, false, false, false, true, false, 4549),
      new Method("isEmpty", java.util.ArrayList.class, boolean.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4550),
      new Method("lastIndexOf", java.util.ArrayList.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4551),
      new Method("lastIndexOf", java.util.ArrayList.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__I, }, false, false, false, true, false, false, false, false, false, true, false, 4552),
      new Method("remove", java.util.ArrayList.class, java.lang.Object.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, true, false, 4553),
      new Method("remove", java.util.ArrayList.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4554),
      new Method("set", java.util.ArrayList.class, java.lang.Object.class, new Parameter[] {arg0__I, arg1__Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4555),
      new Method("size", java.util.ArrayList.class, int.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4556),
      new Method("toArray", java.util.ArrayList.class, java.lang.Object[].class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4557),
      new Method("toArray", java.util.ArrayList.class, java.lang.Object[].class, new Parameter[] {arg0___Ljava_lang_Object_, }, false, false, false, false, false, false, true, false, false, true, false, 4558),
      new Method("trimToSize", java.util.ArrayList.class, void.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4559),
      new Method("removeRange", java.util.ArrayList.class, void.class, new Parameter[] {arg0__I, arg1__I, }, false, false, false, false, false, true, false, false, false, true, false, 4560),
      new Method("capacity", java.util.ArrayList.class, int.class, EMPTY_PARAMETERS,false, false, false, true, false, false, false, false, false, true, false, 4561),
      new Method("setSize", java.util.ArrayList.class, void.class, new Parameter[] {arg0__I, }, false, false, false, true, false, false, false, false, false, true, false, 4562),
  };
  t.constructors = new Constructor[] {
      new Constructor("ArrayList", java.util.ArrayList.class, java.util.ArrayList.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4563),
      new Constructor("ArrayList", java.util.ArrayList.class, java.util.ArrayList.class, new Parameter[] {arg0__Ljava_util_Collection_, }, false, false, false, false, false, false, true, false, false, false, true, 4564),
      new Constructor("ArrayList", java.util.ArrayList.class, java.util.ArrayList.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 4565),
  };
  types.put("java.util.ArrayList", t);
  }
  private void c235() {
  Type t = new Type("java.util.HashMap", 4566, java.util.HashMap.class, null, new HashSet<Class>(Arrays.asList(java.lang.Cloneable.class, java.io.Serializable.class, java.util.AbstractMap.class, java.util.Map.class)));
  t.isStatic = false;
  t.isAbstract = false;
  t.fields = new Field[] {
      new Field("exposeKey", java.util.HashMap.class, java.lang.Object.class, false, false, true, false, false, false, false, false, 4568, 4567, null), 
      new Field("exposeValue", java.util.HashMap.class, java.lang.Object.class, false, false, true, false, false, false, false, false, 4570, 4569, null), 
  };
  t.methods = new Method[] {
      new Method("clone", java.util.HashMap.class, java.lang.Object.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, true, false, 4571),
      new Method("equals", java.util.HashMap.class, boolean.class, new Parameter[] {arg0__Ljava_lang_Object_, arg1__Ljava_lang_Object_, }, false, false, false, false, false, true, false, false, false, true, false, 4572),
      new Method("getHashCode", java.util.HashMap.class, int.class, new Parameter[] {arg0__Ljava_lang_Object_, }, false, false, false, false, false, true, false, false, false, true, false, 4573),
  };
  t.constructors = new Constructor[] {
      new Constructor("HashMap", java.util.HashMap.class, java.util.HashMap.class, EMPTY_PARAMETERS,false, false, false, false, false, false, true, false, false, false, true, 4574),
      new Constructor("HashMap", java.util.HashMap.class, java.util.HashMap.class, new Parameter[] {arg0__I, }, false, false, false, false, false, false, true, false, false, false, true, 4575),
      new Constructor("HashMap", java.util.HashMap.class, java.util.HashMap.class, new Parameter[] {arg0__I, arg1__F, }, false, false, false, false, false, false, true, false, false, false, true, 4576),
      new Constructor("HashMap", java.util.HashMap.class, java.util.HashMap.class, new Parameter[] {arg0__Ljava_util_Map_, }, false, false, false, false, false, false, true, false, false, false, true, 4577),
  };
  types.put("java.util.HashMap", t);
  }
  private void c236() {
  Type t = new Type("java.util.List", 4578, java.util.List.class, null, null);
  t.isPrimitive = true;
  types.put("java.util.List", t);
  }
  private void c237() {
  Type t = new Type("java.util.ListIterator", 4579, java.util.ListIterator.class, null, null);
  t.isPrimitive = true;
  types.put("java.util.ListIterator", t);
  }
  private void c238() {
  Type t = new Type("java.util.Map", 4580, java.util.Map.class, null, null);
  t.isPrimitive = true;
  types.put("java.util.Map", t);
  }
  private void c239() {
  Type p = new Type("long", 4581, long.class, null, null);
  p.isPrimitive = true;
  types.put("long", p);
  }
  private void c240() {
  Type p = new Type("short", 4582, short.class, null, null);
  p.isPrimitive = true;
  types.put("short", p);
  }
  private void c241() {
  Type t = new Type("short[]", 4583, short[].class, null, null);
  t.isPrimitive = true;
  types.put("short[]", t);
  }
  private void c242() {
  Type p = new Type("void", 4584, void.class, null, null);
  p.isPrimitive = true;
  types.put("void", p);
  }
  private static final Parameter[] EMPTY_PARAMETERS = new Parameter[0];
  private Parameter arg1__Z;
  private Parameter target__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter v___C;
  private Parameter b__Ljava_lang_Float_;
  private Parameter origin__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter sorted__Z;
  private Parameter power__F;
  private Parameter r2__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter translation__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter legalCount__I;
  private Parameter power__I;
  private Parameter position__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter xz__F;
  private Parameter p3x__F;
  private Parameter scalarX__F;
  private Parameter rotation__F;
  private Parameter arg1__I;
  private Parameter e__I;
  private Parameter a_vec__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter start__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter arg1__F;
  private Parameter v__F;
  private Parameter beginIndex__I;
  private Parameter c__F;
  private Parameter c__C;
  private Parameter delta__F;
  private Parameter c__D;
  private Parameter xx__F;
  private Parameter velocityX__F;
  private Parameter scale__F;
  private Parameter target__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter arg4__Lcom_badlogic_gdx_math_Vector_;
  private Parameter codePointOffset__I;
  private Parameter arg3__Z;
  private Parameter touchOffsetX__F;
  private Parameter end__I;
  private Parameter end__F;
  private Parameter values___F;
  private Parameter glyphPositions__Lcom_badlogic_gdx_utils_FloatArray_;
  private Parameter indent__Ljava_lang_String_;
  private Parameter event__Lcom_badlogic_gdx_scenes_scene2d_Event_;
  private Parameter intersection__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter arg3__I;
  private Parameter plane__Lcom_badlogic_gdx_math_Plane_;
  private Parameter touchOffsetY__F;
  private Parameter sphere__Lcom_badlogic_gdx_math_collision_Sphere_;
  private Parameter rightWidth__F;
  private Parameter arg3__Lcom_badlogic_gdx_math_Vector_;
  private Parameter yAmount__F;
  private Parameter u__F;
  private Parameter t1__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter srcBegin__I;
  private Parameter p2__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter s__Z;
  private Parameter endIndex__I;
  private Parameter type__I;
  private Parameter pixmap__Lcom_badlogic_gdx_graphics_Pixmap_;
  private Parameter s__S;
  private Parameter vec___F;
  private Parameter cy__F;
  private Parameter arg0__Lcom_badlogic_gdx_math_Vector_;
  private Parameter mesh__Lcom_badlogic_gdx_graphics_g3d_model_data_ModelMesh_;
  private Parameter w__F;
  private Parameter viewportHeight__F;
  private Parameter s__I;
  private Parameter c1__Lcom_badlogic_gdx_math_Circle_;
  private Parameter spacing__F;
  private Parameter s__F;
  private Parameter touchable__Z;
  private Parameter begin__I;
  private Parameter front__Z;
  private Parameter window_size__I;
  private Parameter page__I;
  private Parameter deltaY__F;
  private Parameter value___C;
  private Parameter arg0__Ljava_lang_Object_;
  private Parameter payload__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Payload_;
  private Parameter amountInDegrees__F;
  private Parameter obj__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter action4__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter arg5__Lcom_badlogic_gdx_math_Vector_;
  private Parameter points___Lcom_badlogic_gdx_math_Vector3_;
  private Parameter y1__F;
  private Parameter arg0___Lcom_badlogic_gdx_math_Vector_;
  private Parameter ellipse__Lcom_badlogic_gdx_math_Ellipse_;
  private Parameter yaw__F;
  private Parameter srcStart__I;
  private Parameter arg0__Z;
  private Parameter rgba8888__I;
  private Parameter dst___C;
  private Parameter points___F;
  private Parameter id__Ljava_lang_String_;
  private Parameter glyphCount__I;
  private Parameter area__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter instance__Ljava_lang_Short_;
  private Parameter p1y__F;
  private Parameter p1__Lcom_badlogic_gdx_math_Polygon_;
  private Parameter range__I;
  private Parameter arg0__Ljava_lang_String_;
  private Parameter i__I;
  private Parameter range__F;
  private Parameter arg0__I;
  private Parameter arg0__F;
  private Parameter keyCode__I;
  private Parameter vertexSize__I;
  private Parameter bottomHeight__F;
  private Parameter arg1__Ljava_util_Collection_;
  private Parameter toInsert__Ljava_lang_String_;
  private Parameter aX__F;
  private Parameter v1__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter pointZ__F;
  private Parameter b__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter p3__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter left__I;
  private Parameter matb___F;
  private Parameter scale__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_;
  private Parameter p3y__F;
  private Parameter widths___F;
  private Parameter bounces__I;
  private Parameter start__Lcom_badlogic_gdx_math_GridPoint2_;
  private Parameter arg0__Lcom_badlogic_gdx_utils_Predicate_;
  private Parameter pointer2__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter halfDepth__F;
  private Parameter margin__F;
  private Parameter streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_;
  private Parameter e__Lcom_badlogic_gdx_scenes_scene2d_Event_;
  private Parameter d__D;
  private Parameter viewportY__F;
  private Parameter x4__F;
  private Parameter d__F;
  private Parameter earTipIndex__I;
  private Parameter spriteBatch__Lcom_badlogic_gdx_graphics_g2d_Batch_;
  private Parameter radians__F;
  private Parameter count__I;
  private Parameter str__Ljava_lang_CharSequence_;
  private Parameter translation__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter codePoints___I;
  private Parameter dragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter x1__F;
  private Parameter recursive__Z;
  private Parameter point__Lcom_badlogic_gdx_math_GridPoint2_;
  private Parameter instance__Ljava_lang_Float_;
  private Parameter dragMillis__I;
  private Parameter dstStart__I;
  private Parameter wrapWidth__F;
  private Parameter material__Lcom_badlogic_gdx_graphics_g3d_Material_;
  private Parameter amountY__F;
  private Parameter isStretchW__Z;
  private Parameter ownsTexture__Z;
  private Parameter nearest__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter dir__I;
  private Parameter y__F;
  private Parameter texture__Lcom_badlogic_gdx_graphics_Texture_;
  private Parameter useMipMaps__Z;
  private Parameter a__F;
  private Parameter g__F;
  private Parameter scaleZ__F;
  private Parameter y__D;
  private Parameter initialPointer1__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter fov__F;
  private Parameter a__D;
  private Parameter barycentric__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter instance__Ljava_lang_Integer_;
  private Parameter hull___F;
  private Parameter split__Lcom_badlogic_gdx_math_Intersector$SplitTriangle_;
  private Parameter a__I;
  private Parameter u2__F;
  private Parameter other__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_;
  private Parameter vertices___F;
  private Parameter size__I;
  private Parameter m__Lcom_badlogic_gdx_math_Matrix3_;
  private Parameter instance___Ljava_lang_Object_;
  private Parameter size__F;
  private Parameter y__I;
  private Parameter v__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter type__Ljava_lang_Class_;
  private Parameter left__F;
  private Parameter b__Lcom_badlogic_gdx_math_collision_BoundingBox_;
  private Parameter verts2___F;
  private Parameter halfWidth__F;
  private Parameter point3__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter translationY__F;
  private Parameter sizeXY__F;
  private Parameter y__Z;
  private Parameter s__Ljava_lang_String_;
  private Parameter userObject__Ljava_lang_Object_;
  private Parameter v2__F;
  private Parameter color__F;
  private Parameter regex__Ljava_lang_String_;
  private Parameter arg0__Ljava_util_Collection_;
  private Parameter norZ__F;
  private Parameter g__I;
  private Parameter scale__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter v__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter availableWidth__F;
  private Parameter relatedActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter x__Ljava_lang_String_;
  private Parameter duration__F;
  private Parameter p2x__F;
  private Parameter arg2__Lcom_badlogic_gdx_math_Vector_;
  private Parameter focused__Z;
  private Parameter b__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter polygon___F;
  private Parameter numAttributes__I;
  private Parameter o__Ljava_lang_Object_;
  private Parameter invalidDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter minimum__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter transform__Z;
  private Parameter obj__Ljava_lang_Object_;
  private Parameter top__F;
  private Parameter radius__F;
  private Parameter copyFrom__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_;
  private Parameter top__I;
  private Parameter width__F;
  private Parameter far__F;
  private Parameter width__I;
  private Parameter str__Ljava_lang_String_;
  private Parameter vy__F;
  private Parameter camera__Lcom_badlogic_gdx_graphics_Camera_;
  private Parameter matrix___F;
  private Parameter patch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_;
  private Parameter aY__F;
  private Parameter t3__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter zy__F;
  private Parameter descendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter tapCountInterval__F;
  private Parameter px__F;
  private Parameter out__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter scaleXY__F;
  private Parameter interpolatedOut__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter round__Z;
  private Parameter dx__F;
  private Parameter replaceStr__Ljava_lang_String_;
  private Parameter dragActorX__F;
  private Parameter r__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter arg1__Ljava_lang_String_;
  private Parameter ny__F;
  private Parameter middleWidth__F;
  private Parameter textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_;
  private Parameter vector__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter amount__I;
  private Parameter quaternionX__F;
  private Parameter v2__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter index__I;
  private Parameter ninePatch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_;
  private Parameter coords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter z__I;
  private Parameter z__F;
  private Parameter ooffset__I;
  private Parameter luminance__F;
  private Parameter viewportWidth__F;
  private Parameter actorBefore__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter amount__F;
  private Parameter nx__F;
  private Parameter startX__F;
  private Parameter startX__I;
  private Parameter obj__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter dragActorY__F;
  private Parameter keycode__I;
  private Parameter bubbles__Z;
  private Parameter rectangle1__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_;
  private Parameter a___C;
  private Parameter message__Ljava_lang_String_;
  private Parameter zx__F;
  private Parameter rgba__I;
  private Parameter p2__Lcom_badlogic_gdx_math_Polygon_;
  private Parameter stageCoords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter startIndex__I;
  private Parameter pitch__F;
  private Parameter x__Ljava_lang_CharSequence_;
  private Parameter arg1___Ljava_lang_Object_;
  private Parameter transformMatrix__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter translationZ__F;
  private Parameter arg0__Ljava_util_Map_;
  private Parameter usage__I;
  private Parameter translationX__F;
  private Parameter values__F;
  private Parameter ignoreCase__Z;
  private Parameter zAxis__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter zz__F;
  private Parameter validDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter startY__I;
  private Parameter sb__Ljava_lang_StringBuilder_;
  private Parameter linePoint1__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter action1__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter norY__F;
  private Parameter halfHeight__F;
  private Parameter me__Ljava_lang_String_;
  private Parameter len__I;
  private Parameter transform__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter from__C;
  private Parameter data__Lcom_badlogic_gdx_graphics_TextureData_;
  private Parameter vecs___F;
  private Parameter box__Lcom_badlogic_gdx_math_collision_BoundingBox_;
  private Parameter degrees__F;
  private Parameter viewportX__F;
  private Parameter yz__F;
  private Parameter arg2___Lcom_badlogic_gdx_math_Vector_;
  private Parameter point1__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter alignment__I;
  private Parameter chance__F;
  private Parameter srcEnd__I;
  private Parameter action2__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter pos__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter batchTransform__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter ch__I;
  private Parameter direction__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter middleHeight__F;
  private Parameter stageX__F;
  private Parameter topHeight__F;
  private Parameter barycentricOut__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter rect__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter xAxis__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter removeActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter startY__F;
  private Parameter parentCoords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter by__F;
  private Parameter angle__F;
  private Parameter vector__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter keepAspectRatio__Z;
  private Parameter y3__F;
  private Parameter glyphs__Ljava_lang_CharSequence_;
  private Parameter stride__I;
  private Parameter start__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter action3__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter ch__C;
  private Parameter heights___F;
  private Parameter r1__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter p1__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter scaledAction__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter lower__I;
  private Parameter position__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter listenerActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter fontFile__Lcom_badlogic_gdx_files_FileHandle_;
  private Parameter points__Lcom_badlogic_gdx_utils_FloatArray_;
  private Parameter charSet__Ljava_lang_String_;
  private Parameter rotationAmount__F;
  private Parameter tint__Lcom_badlogic_gdx_graphics_Color_;
  private Parameter b__B;
  private Parameter thisStr__Ljava_lang_String_;
  private Parameter b__D;
  private Parameter charsetName__Ljava_lang_String_;
  private Parameter b__F;
  private Parameter arg0__Lcom_badlogic_gdx_utils_Array_;
  private Parameter b__I;
  private Parameter instance__Ljava_util_HashMap_;
  private Parameter velocityY__F;
  private Parameter b__S;
  private Parameter bX__F;
  private Parameter count2__I;
  private Parameter vertex___F;
  private Parameter value__I;
  private Parameter arg7__Ljava_lang_Object_;
  private Parameter arg1__Ljava_lang_Class_;
  private Parameter minWidth__F;
  private Parameter action__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter value__D;
  private Parameter linePoint1Y__F;
  private Parameter value__C;
  private Parameter b__Z;
  private Parameter value__B;
  private Parameter arg1__Ljava_lang_Object_;
  private Parameter circle__Lcom_badlogic_gdx_math_Circle_;
  private Parameter value__F;
  private Parameter value__Z;
  private Parameter out__Lcom_badlogic_gdx_graphics_g3d_Renderable_;
  private Parameter second__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter polygon__Lcom_badlogic_gdx_utils_Array_;
  private Parameter value__S;
  private Parameter prefix__Ljava_lang_String_;
  private Parameter instance__Ljava_util_Map_;
  private Parameter instance__Ljava_lang_Double_;
  private Parameter epsilon__F;
  private Parameter chars__Ljava_lang_CharSequence_;
  private Parameter scaleX__F;
  private Parameter instance__Ljava_lang_String_;
  private Parameter arg0__Ljava_lang_Class_;
  private Parameter cullingArea__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter other__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter yAxis__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter fillParent__Z;
  private Parameter mata___F;
  private Parameter linePoint1X__F;
  private Parameter arg4__I;
  private Parameter initialDistance__F;
  private Parameter split___F;
  private Parameter inverseProjectionView__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter originalIndices___S;
  private Parameter polygon__Lcom_badlogic_gdx_math_Polygon_;
  private Parameter axisY__F;
  private Parameter aZ__F;
  private Parameter initialPointer2__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter reverse__Z;
  private Parameter target__Lcom_badlogic_gdx_graphics_Color_;
  private Parameter type__Lcom_badlogic_gdx_scenes_scene2d_InputEvent$Type_;
  private Parameter time__F;
  private Parameter arg5__Z;
  private Parameter arg4__Z;
  private Parameter c2__Lcom_badlogic_gdx_math_Circle_;
  private Parameter longPressDuration__F;
  private Parameter meshPart__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_;
  private Parameter other__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter instance__Ljava_lang_Byte_;
  private Parameter x__Z;
  private Parameter orientation__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter size__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter y2__F;
  private Parameter name__Ljava_lang_String_;
  private Parameter delayedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter tileWidth__I;
  private Parameter arg6__I;
  private Parameter repeatedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter visible__Z;
  private Parameter idx__I;
  private Parameter bottom__F;
  private Parameter data__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$BitmapFontData_;
  private Parameter numVecs__I;
  private Parameter bottom__I;
  private Parameter batch__Lcom_badlogic_gdx_graphics_g2d_Batch_;
  private Parameter first__I;
  private Parameter internalPath__Ljava_lang_String_;
  private Parameter stageY__F;
  private Parameter object__Ljava_lang_Object_;
  private Parameter endY__F;
  private Parameter b__Ljava_lang_Byte_;
  private Parameter endY__I;
  private Parameter arg3__Ljava_lang_Class_;
  private Parameter a__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter height__I;
  private Parameter seq__Ljava_lang_CharSequence_;
  private Parameter quat__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter pool__Lcom_badlogic_gdx_utils_Pool_;
  private Parameter vz__F;
  private Parameter interpolation__Lcom_badlogic_gdx_math_Interpolation_;
  private Parameter to__C;
  private Parameter x__Ljava_lang_Object_;
  private Parameter source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_;
  private Parameter arg2__Ljava_lang_Enum_;
  private Parameter p2y__F;
  private Parameter ray__Lcom_badlogic_gdx_math_collision_Ray_;
  private Parameter character__C;
  private Parameter arg0___Ljava_lang_Enum_;
  private Parameter count1__I;
  private Parameter codePoint__I;
  private Parameter rectangle__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter arg0__Ljava_lang_Enum_;
  private Parameter normalizeAxes__Z;
  private Parameter a__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter p1x__F;
  private Parameter originY__F;
  private Parameter runnable__Ljava_lang_Runnable_;
  private Parameter height__F;
  private Parameter t2__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter linePoint2Y__F;
  private Parameter event__Lcom_badlogic_gdx_scenes_scene2d_utils_ChangeListener$ChangeEvent_;
  private Parameter args___Ljava_lang_String_;
  private Parameter near__F;
  private Parameter alpha__F;
  private Parameter maximum__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter matrix__Lcom_badlogic_gdx_math_Matrix3_;
  private Parameter other__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter t__F;
  private Parameter offset2__I;
  private Parameter windowSize__I;
  private Parameter yy__F;
  private Parameter pointX__F;
  private Parameter to__Ljava_lang_CharSequence_;
  private Parameter arg0__Lcom_badlogic_gdx_utils_ObjectMap_;
  private Parameter bY__F;
  private Parameter ax__F;
  private Parameter scalarZ__F;
  private Parameter sb__Ljava_lang_StringBuffer_;
  private Parameter c__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter imageFile__Lcom_badlogic_gdx_files_FileHandle_;
  private Parameter q__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter p4__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter bx__F;
  private Parameter axisX__F;
  private Parameter endX__F;
  private Parameter toffset__I;
  private Parameter alignmentWidth__F;
  private Parameter arg0__Lcom_google_gwt_core_client_JavaScriptObject_;
  private Parameter endX__I;
  private Parameter amountX__F;
  private Parameter hex__Ljava_lang_String_;
  private Parameter quaternionW__F;
  private Parameter axisZ__F;
  private Parameter shift__I;
  private Parameter start__F;
  private Parameter start__I;
  private Parameter glyph__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$Glyph_;
  private Parameter matrix__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter tileHeight__I;
  private Parameter scrollAmount__I;
  private Parameter arg6__Lcom_badlogic_gdx_math_Vector_;
  private Parameter other__Ljava_lang_Object_;
  private Parameter format__Lcom_badlogic_gdx_graphics_Pixmap$Format_;
  private Parameter quaternionY__F;
  private Parameter radix__I;
  private Parameter quaternionZ__F;
  private Parameter stage__Lcom_badlogic_gdx_scenes_scene2d_Stage_;
  private Parameter arg0__Lcom_badlogic_gdx_utils_ArrayMap_;
  private Parameter charset__Ljava_lang_String_;
  private Parameter color__Lcom_badlogic_gdx_graphics_Color_;
  private Parameter squareRadius__F;
  private Parameter first__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter localCoords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter x2__F;
  private Parameter scaleY__F;
  private Parameter verts1___F;
  private Parameter roll__F;
  private Parameter second__I;
  private Parameter a_bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_;
  private Parameter mat__Lcom_badlogic_gdx_math_Matrix3_;
  private Parameter instance__Ljava_util_ArrayList_;
  private Parameter arg3___Lcom_badlogic_gdx_math_Vector_;
  private Parameter end__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter xAmount__F;
  private Parameter actions___Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter max__I;
  private Parameter point__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter arg2__Ljava_lang_Class_;
  private Parameter actorCoords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter action5__Lcom_badlogic_gdx_scenes_scene2d_Action_;
  private Parameter max__F;
  private Parameter x___C;
  private Parameter other__Lcom_badlogic_gdx_graphics_VertexAttribute_;
  private Parameter max__S;
  private Parameter ofs__I;
  private Parameter font__Lcom_badlogic_gdx_graphics_g2d_BitmapFont_;
  private Parameter yx__F;
  private Parameter event__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent_;
  private Parameter scalar__F;
  private Parameter pointer__I;
  private Parameter end__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter mat__Lcom_badlogic_gdx_math_Matrix4_;
  private Parameter b__Ljava_lang_Short_;
  private Parameter ignoredCapacity__I;
  private Parameter minHeight__F;
  private Parameter triangles__Ljava_util_List_;
  private Parameter screenCoords__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter xy__F;
  private Parameter button__I;
  private Parameter x__Ljava_lang_StringBuilder_;
  private Parameter percentDelta__F;
  private Parameter overLast__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter point__Lcom_badlogic_gdx_math_GridPoint3_;
  private Parameter instance__Ljava_lang_Character_;
  private Parameter offset1__I;
  private Parameter instance__Ljava_lang_Boolean_;
  private Parameter glyphAdvances__Lcom_badlogic_gdx_utils_FloatArray_;
  private Parameter mtv__Lcom_badlogic_gdx_math_Intersector$MinimumTranslationVector_;
  private Parameter aspectRatio__F;
  private Parameter bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_;
  private Parameter cx__F;
  private Parameter arg0__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter limit__F;
  private Parameter centroid__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter quaternion__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter limit__I;
  private Parameter drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_NinePatchDrawable_;
  private Parameter b__Ljava_lang_Double_;
  private Parameter right__I;
  private Parameter indices___S;
  private Parameter numElements__I;
  private Parameter cs__Ljava_lang_CharSequence_;
  private Parameter streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_;
  private Parameter c__Ljava_lang_Character_;
  private Parameter right__F;
  private Parameter b__Ljava_lang_Integer_;
  private Parameter text__Ljava_lang_CharSequence_;
  private Parameter y4__F;
  private Parameter arg0___Ljava_lang_Object_;
  private Parameter flip__Z;
  private Parameter region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_;
  private Parameter vertices__Lcom_badlogic_gdx_utils_FloatArray_;
  private Parameter halfTapSquareSize__F;
  private Parameter isStretchH__Z;
  private Parameter target__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Target_;
  private Parameter screenY__I;
  private Parameter parent__Lcom_badlogic_gdx_scenes_scene2d_Group_;
  private Parameter scalingZ__F;
  private Parameter other__Ljava_lang_Boolean_;
  private Parameter listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_;
  private Parameter arg2__Z;
  private Parameter leftWidth__F;
  private Parameter pointY__F;
  private Parameter file__Lcom_badlogic_gdx_files_FileHandle_;
  private Parameter alphaModulation__F;
  private Parameter scissor__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter output__Lcom_badlogic_gdx_utils_Array_;
  private Parameter arg2__F;
  private Parameter highSurrogate__C;
  private Parameter arg2__I;
  private Parameter r__I;
  private Parameter displacement__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter maxFlingDelay__F;
  private Parameter nodes__Lcom_badlogic_gdx_utils_Array_;
  private Parameter r__F;
  private Parameter arg2__Ljava_lang_Object_;
  private Parameter x3__F;
  private Parameter dstIndex__I;
  private Parameter arg0__Ljava_util_Comparator_;
  private Parameter vx__F;
  private Parameter unit__I;
  private Parameter digit__I;
  private Parameter intersection__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter x__J;
  private Parameter maxMatch__I;
  private Parameter other__Ljava_lang_String_;
  private Parameter norX__F;
  private Parameter x__I;
  private Parameter dz__F;
  private Parameter stageWidth__F;
  private Parameter end__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter center__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter regions___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_;
  private Parameter x__C;
  private Parameter arg3___Ljava_lang_Object_;
  private Parameter x__Ljava_lang_StringBuffer_;
  private Parameter touchable__Lcom_badlogic_gdx_scenes_scene2d_Touchable_;
  private Parameter axis__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter x__F;
  private Parameter x__D;
  private Parameter nz__F;
  private Parameter drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_Drawable_;
  private Parameter bZ__F;
  private Parameter ay__F;
  private Parameter manager__Lcom_badlogic_gdx_assets_AssetManager_;
  private Parameter attributes___Lcom_badlogic_gdx_graphics_VertexAttribute_;
  private Parameter triangle___F;
  private Parameter points__Ljava_util_List_;
  private Parameter end__Lcom_badlogic_gdx_math_GridPoint2_;
  private Parameter min__I;
  private Parameter dstBegin__I;
  private Parameter min__F;
  private Parameter rotation__Lcom_badlogic_gdx_math_Quaternion_;
  private Parameter screenX__I;
  private Parameter dimensions__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter arg0__Lcom_badlogic_gdx_scenes_scene2d_Event_;
  private Parameter linePoint2__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter min__S;
  private Parameter out__Lcom_badlogic_gdx_math_collision_BoundingBox_;
  private Parameter intersection__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter arg3__Ljava_lang_Object_;
  private Parameter c__Lcom_badlogic_gdx_math_Circle_;
  private Parameter use__Z;
  private Parameter scaling__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter from__Ljava_lang_CharSequence_;
  private Parameter lowSurrogate__C;
  private Parameter center__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter py__F;
  private Parameter arg5__Ljava_lang_Object_;
  private Parameter triangles__Lcom_badlogic_gdx_utils_ShortArray_;
  private Parameter integer__Z;
  private Parameter patches___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_;
  private Parameter yDown__Z;
  private Parameter dy__F;
  private Parameter xp__F;
  private Parameter z2__F;
  private Parameter mesh__Lcom_badlogic_gdx_graphics_Mesh_;
  private Parameter stageHeight__F;
  private Parameter newLength__I;
  private Parameter deltaX__F;
  private Parameter linePoint2X__F;
  private Parameter normal__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter app__Lcom_badlogic_gdx_Application_;
  private Parameter percent__F;
  private Parameter toActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter originX__F;
  private Parameter bytes___B;
  private Parameter bounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_;
  private Parameter p__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter parentAlpha__F;
  private Parameter numComponents__I;
  private Parameter forward__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter yp__F;
  private Parameter scalingX__F;
  private Parameter triangles___F;
  private Parameter suffix__Ljava_lang_String_;
  private Parameter focusType__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent$Type_;
  private Parameter fromActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter capture__Z;
  private Parameter val___F;
  private Parameter actorAfter__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter ascendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter scalingY__F;
  private Parameter s__Ljava_lang_CharSequence_;
  private Parameter bits__J;
  private Parameter alias__Ljava_lang_String_;
  private Parameter z1__F;
  private Parameter f__F;
  private Parameter enabled__Z;
  private Parameter rectangle2__Lcom_badlogic_gdx_math_Rectangle_;
  private Parameter bits__I;
  private Parameter pointer1__Lcom_badlogic_gdx_math_Vector2_;
  private Parameter offset__I;
  private Parameter otherStr__Ljava_lang_String_;
  private Parameter point2__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter up__Lcom_badlogic_gdx_math_Vector3_;
  private Parameter scalarY__F;
  private Parameter target__Lcom_badlogic_gdx_scenes_scene2d_Actor_;
  private Parameter distance__I;
  private Parameter upper__I;
  private Parameter replace__Ljava_lang_String_;
  private Parameter distance__F;
  private Parameter mat___F;
  private Parameter point__Lcom_badlogic_gdx_math_Vector3_;
  private void initializeParameters() {
      arg1__Z = new Parameter("arg1", boolean.class, "Z");
      target__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("target", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      v___C = new Parameter("v", char[].class, "[C");
      b__Ljava_lang_Float_ = new Parameter("b", java.lang.Float.class, "Ljava/lang/Float;");
      origin__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("origin", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      sorted__Z = new Parameter("sorted", boolean.class, "Z");
      power__F = new Parameter("power", float.class, "F");
      r2__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("r2", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      translation__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("translation", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      legalCount__I = new Parameter("legalCount", int.class, "I");
      power__I = new Parameter("power", int.class, "I");
      position__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("position", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      xz__F = new Parameter("xz", float.class, "F");
      p3x__F = new Parameter("p3x", float.class, "F");
      scalarX__F = new Parameter("scalarX", float.class, "F");
      rotation__F = new Parameter("rotation", float.class, "F");
      arg1__I = new Parameter("arg1", int.class, "I");
      e__I = new Parameter("e", int.class, "I");
      a_vec__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("a_vec", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      start__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("start", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      arg1__F = new Parameter("arg1", float.class, "F");
      v__F = new Parameter("v", float.class, "F");
      beginIndex__I = new Parameter("beginIndex", int.class, "I");
      c__F = new Parameter("c", float.class, "F");
      c__C = new Parameter("c", char.class, "C");
      delta__F = new Parameter("delta", float.class, "F");
      c__D = new Parameter("c", double.class, "D");
      xx__F = new Parameter("xx", float.class, "F");
      velocityX__F = new Parameter("velocityX", float.class, "F");
      scale__F = new Parameter("scale", float.class, "F");
      target__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("target", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      arg4__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg4", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      codePointOffset__I = new Parameter("codePointOffset", int.class, "I");
      arg3__Z = new Parameter("arg3", boolean.class, "Z");
      touchOffsetX__F = new Parameter("touchOffsetX", float.class, "F");
      end__I = new Parameter("end", int.class, "I");
      end__F = new Parameter("end", float.class, "F");
      values___F = new Parameter("values", float[].class, "[F");
      glyphPositions__Lcom_badlogic_gdx_utils_FloatArray_ = new Parameter("glyphPositions", com.badlogic.gdx.utils.FloatArray.class, "Lcom/badlogic/gdx/utils/FloatArray;");
      indent__Ljava_lang_String_ = new Parameter("indent", java.lang.String.class, "Ljava/lang/String;");
      event__Lcom_badlogic_gdx_scenes_scene2d_Event_ = new Parameter("event", com.badlogic.gdx.scenes.scene2d.Event.class, "Lcom/badlogic/gdx/scenes/scene2d/Event;");
      intersection__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("intersection", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      arg3__I = new Parameter("arg3", int.class, "I");
      plane__Lcom_badlogic_gdx_math_Plane_ = new Parameter("plane", com.badlogic.gdx.math.Plane.class, "Lcom/badlogic/gdx/math/Plane;");
      touchOffsetY__F = new Parameter("touchOffsetY", float.class, "F");
      sphere__Lcom_badlogic_gdx_math_collision_Sphere_ = new Parameter("sphere", com.badlogic.gdx.math.collision.Sphere.class, "Lcom/badlogic/gdx/math/collision/Sphere;");
      rightWidth__F = new Parameter("rightWidth", float.class, "F");
      arg3__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg3", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      yAmount__F = new Parameter("yAmount", float.class, "F");
      u__F = new Parameter("u", float.class, "F");
      t1__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("t1", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      srcBegin__I = new Parameter("srcBegin", int.class, "I");
      p2__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("p2", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      s__Z = new Parameter("s", boolean.class, "Z");
      endIndex__I = new Parameter("endIndex", int.class, "I");
      type__I = new Parameter("type", int.class, "I");
      pixmap__Lcom_badlogic_gdx_graphics_Pixmap_ = new Parameter("pixmap", com.badlogic.gdx.graphics.Pixmap.class, "Lcom/badlogic/gdx/graphics/Pixmap;");
      s__S = new Parameter("s", short.class, "S");
      vec___F = new Parameter("vec", float[].class, "[F");
      cy__F = new Parameter("cy", float.class, "F");
      arg0__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg0", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      mesh__Lcom_badlogic_gdx_graphics_g3d_model_data_ModelMesh_ = new Parameter("mesh", com.badlogic.gdx.graphics.g3d.model.data.ModelMesh.class, "Lcom/badlogic/gdx/graphics/g3d/model/data/ModelMesh;");
      w__F = new Parameter("w", float.class, "F");
      viewportHeight__F = new Parameter("viewportHeight", float.class, "F");
      s__I = new Parameter("s", int.class, "I");
      c1__Lcom_badlogic_gdx_math_Circle_ = new Parameter("c1", com.badlogic.gdx.math.Circle.class, "Lcom/badlogic/gdx/math/Circle;");
      spacing__F = new Parameter("spacing", float.class, "F");
      s__F = new Parameter("s", float.class, "F");
      touchable__Z = new Parameter("touchable", boolean.class, "Z");
      begin__I = new Parameter("begin", int.class, "I");
      front__Z = new Parameter("front", boolean.class, "Z");
      window_size__I = new Parameter("window_size", int.class, "I");
      page__I = new Parameter("page", int.class, "I");
      deltaY__F = new Parameter("deltaY", float.class, "F");
      value___C = new Parameter("value", char[].class, "[C");
      arg0__Ljava_lang_Object_ = new Parameter("arg0", java.lang.Object.class, "Ljava/lang/Object;");
      payload__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Payload_ = new Parameter("payload", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Payload;");
      amountInDegrees__F = new Parameter("amountInDegrees", float.class, "F");
      obj__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("obj", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      action4__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action4", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      arg5__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg5", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      points___Lcom_badlogic_gdx_math_Vector3_ = new Parameter("points", com.badlogic.gdx.math.Vector3[].class, "[Lcom/badlogic/gdx/math/Vector3;");
      y1__F = new Parameter("y1", float.class, "F");
      arg0___Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg0", com.badlogic.gdx.math.Vector[].class, "[Lcom/badlogic/gdx/math/Vector;");
      ellipse__Lcom_badlogic_gdx_math_Ellipse_ = new Parameter("ellipse", com.badlogic.gdx.math.Ellipse.class, "Lcom/badlogic/gdx/math/Ellipse;");
      yaw__F = new Parameter("yaw", float.class, "F");
      srcStart__I = new Parameter("srcStart", int.class, "I");
      arg0__Z = new Parameter("arg0", boolean.class, "Z");
      rgba8888__I = new Parameter("rgba8888", int.class, "I");
      dst___C = new Parameter("dst", char[].class, "[C");
      points___F = new Parameter("points", float[].class, "[F");
      id__Ljava_lang_String_ = new Parameter("id", java.lang.String.class, "Ljava/lang/String;");
      glyphCount__I = new Parameter("glyphCount", int.class, "I");
      area__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("area", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      instance__Ljava_lang_Short_ = new Parameter("instance", java.lang.Short.class, "Ljava/lang/Short;");
      p1y__F = new Parameter("p1y", float.class, "F");
      p1__Lcom_badlogic_gdx_math_Polygon_ = new Parameter("p1", com.badlogic.gdx.math.Polygon.class, "Lcom/badlogic/gdx/math/Polygon;");
      range__I = new Parameter("range", int.class, "I");
      arg0__Ljava_lang_String_ = new Parameter("arg0", java.lang.String.class, "Ljava/lang/String;");
      i__I = new Parameter("i", int.class, "I");
      range__F = new Parameter("range", float.class, "F");
      arg0__I = new Parameter("arg0", int.class, "I");
      arg0__F = new Parameter("arg0", float.class, "F");
      keyCode__I = new Parameter("keyCode", int.class, "I");
      vertexSize__I = new Parameter("vertexSize", int.class, "I");
      bottomHeight__F = new Parameter("bottomHeight", float.class, "F");
      arg1__Ljava_util_Collection_ = new Parameter("arg1", java.util.Collection.class, "Ljava/util/Collection;");
      toInsert__Ljava_lang_String_ = new Parameter("toInsert", java.lang.String.class, "Ljava/lang/String;");
      aX__F = new Parameter("aX", float.class, "F");
      v1__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("v1", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      pointZ__F = new Parameter("pointZ", float.class, "F");
      b__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("b", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      p3__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("p3", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      left__I = new Parameter("left", int.class, "I");
      matb___F = new Parameter("matb", float[].class, "[F");
      scale__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("scale", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      event__Lcom_badlogic_gdx_scenes_scene2d_InputEvent_ = new Parameter("event", com.badlogic.gdx.scenes.scene2d.InputEvent.class, "Lcom/badlogic/gdx/scenes/scene2d/InputEvent;");
      p3y__F = new Parameter("p3y", float.class, "F");
      widths___F = new Parameter("widths", float[].class, "[F");
      bounces__I = new Parameter("bounces", int.class, "I");
      start__Lcom_badlogic_gdx_math_GridPoint2_ = new Parameter("start", com.badlogic.gdx.math.GridPoint2.class, "Lcom/badlogic/gdx/math/GridPoint2;");
      arg0__Lcom_badlogic_gdx_utils_Predicate_ = new Parameter("arg0", com.badlogic.gdx.utils.Predicate.class, "Lcom/badlogic/gdx/utils/Predicate;");
      pointer2__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("pointer2", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      halfDepth__F = new Parameter("halfDepth", float.class, "F");
      margin__F = new Parameter("margin", float.class, "F");
      streamWriter__Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_ = new Parameter("streamWriter", com.google.gwt.user.client.rpc.SerializationStreamWriter.class, "Lcom/google/gwt/user/client/rpc/SerializationStreamWriter;");
      e__Lcom_badlogic_gdx_scenes_scene2d_Event_ = new Parameter("e", com.badlogic.gdx.scenes.scene2d.Event.class, "Lcom/badlogic/gdx/scenes/scene2d/Event;");
      d__D = new Parameter("d", double.class, "D");
      viewportY__F = new Parameter("viewportY", float.class, "F");
      x4__F = new Parameter("x4", float.class, "F");
      d__F = new Parameter("d", float.class, "F");
      earTipIndex__I = new Parameter("earTipIndex", int.class, "I");
      spriteBatch__Lcom_badlogic_gdx_graphics_g2d_Batch_ = new Parameter("spriteBatch", com.badlogic.gdx.graphics.g2d.Batch.class, "Lcom/badlogic/gdx/graphics/g2d/Batch;");
      radians__F = new Parameter("radians", float.class, "F");
      count__I = new Parameter("count", int.class, "I");
      str__Ljava_lang_CharSequence_ = new Parameter("str", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      translation__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("translation", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      codePoints___I = new Parameter("codePoints", int[].class, "[I");
      dragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("dragActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      x1__F = new Parameter("x1", float.class, "F");
      recursive__Z = new Parameter("recursive", boolean.class, "Z");
      point__Lcom_badlogic_gdx_math_GridPoint2_ = new Parameter("point", com.badlogic.gdx.math.GridPoint2.class, "Lcom/badlogic/gdx/math/GridPoint2;");
      instance__Ljava_lang_Float_ = new Parameter("instance", java.lang.Float.class, "Ljava/lang/Float;");
      dragMillis__I = new Parameter("dragMillis", int.class, "I");
      dstStart__I = new Parameter("dstStart", int.class, "I");
      wrapWidth__F = new Parameter("wrapWidth", float.class, "F");
      material__Lcom_badlogic_gdx_graphics_g3d_Material_ = new Parameter("material", com.badlogic.gdx.graphics.g3d.Material.class, "Lcom/badlogic/gdx/graphics/g3d/Material;");
      amountY__F = new Parameter("amountY", float.class, "F");
      isStretchW__Z = new Parameter("isStretchW", boolean.class, "Z");
      ownsTexture__Z = new Parameter("ownsTexture", boolean.class, "Z");
      nearest__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("nearest", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      dir__I = new Parameter("dir", int.class, "I");
      y__F = new Parameter("y", float.class, "F");
      texture__Lcom_badlogic_gdx_graphics_Texture_ = new Parameter("texture", com.badlogic.gdx.graphics.Texture.class, "Lcom/badlogic/gdx/graphics/Texture;");
      useMipMaps__Z = new Parameter("useMipMaps", boolean.class, "Z");
      a__F = new Parameter("a", float.class, "F");
      g__F = new Parameter("g", float.class, "F");
      scaleZ__F = new Parameter("scaleZ", float.class, "F");
      y__D = new Parameter("y", double.class, "D");
      initialPointer1__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("initialPointer1", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      fov__F = new Parameter("fov", float.class, "F");
      a__D = new Parameter("a", double.class, "D");
      barycentric__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("barycentric", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      instance__Ljava_lang_Integer_ = new Parameter("instance", java.lang.Integer.class, "Ljava/lang/Integer;");
      hull___F = new Parameter("hull", float[].class, "[F");
      split__Lcom_badlogic_gdx_math_Intersector$SplitTriangle_ = new Parameter("split", com.badlogic.gdx.math.Intersector.SplitTriangle.class, "Lcom/badlogic/gdx/math/Intersector$SplitTriangle;");
      a__I = new Parameter("a", int.class, "I");
      u2__F = new Parameter("u2", float.class, "F");
      other__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_ = new Parameter("other", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, "Lcom/badlogic/gdx/graphics/g3d/model/MeshPart;");
      vertices___F = new Parameter("vertices", float[].class, "[F");
      size__I = new Parameter("size", int.class, "I");
      m__Lcom_badlogic_gdx_math_Matrix3_ = new Parameter("m", com.badlogic.gdx.math.Matrix3.class, "Lcom/badlogic/gdx/math/Matrix3;");
      instance___Ljava_lang_Object_ = new Parameter("instance", java.lang.Object[].class, "[Ljava/lang/Object;");
      size__F = new Parameter("size", float.class, "F");
      y__I = new Parameter("y", int.class, "I");
      v__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("v", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      type__Ljava_lang_Class_ = new Parameter("type", java.lang.Class.class, "Ljava/lang/Class;");
      left__F = new Parameter("left", float.class, "F");
      b__Lcom_badlogic_gdx_math_collision_BoundingBox_ = new Parameter("b", com.badlogic.gdx.math.collision.BoundingBox.class, "Lcom/badlogic/gdx/math/collision/BoundingBox;");
      verts2___F = new Parameter("verts2", float[].class, "[F");
      halfWidth__F = new Parameter("halfWidth", float.class, "F");
      point3__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("point3", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      translationY__F = new Parameter("translationY", float.class, "F");
      sizeXY__F = new Parameter("sizeXY", float.class, "F");
      y__Z = new Parameter("y", boolean.class, "Z");
      s__Ljava_lang_String_ = new Parameter("s", java.lang.String.class, "Ljava/lang/String;");
      userObject__Ljava_lang_Object_ = new Parameter("userObject", java.lang.Object.class, "Ljava/lang/Object;");
      v2__F = new Parameter("v2", float.class, "F");
      color__F = new Parameter("color", float.class, "F");
      regex__Ljava_lang_String_ = new Parameter("regex", java.lang.String.class, "Ljava/lang/String;");
      arg0__Ljava_util_Collection_ = new Parameter("arg0", java.util.Collection.class, "Ljava/util/Collection;");
      norZ__F = new Parameter("norZ", float.class, "F");
      g__I = new Parameter("g", int.class, "I");
      scale__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("scale", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      v__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("v", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      availableWidth__F = new Parameter("availableWidth", float.class, "F");
      relatedActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("relatedActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      x__Ljava_lang_String_ = new Parameter("x", java.lang.String.class, "Ljava/lang/String;");
      duration__F = new Parameter("duration", float.class, "F");
      p2x__F = new Parameter("p2x", float.class, "F");
      arg2__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg2", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      focused__Z = new Parameter("focused", boolean.class, "Z");
      b__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("b", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      polygon___F = new Parameter("polygon", float[].class, "[F");
      numAttributes__I = new Parameter("numAttributes", int.class, "I");
      o__Ljava_lang_Object_ = new Parameter("o", java.lang.Object.class, "Ljava/lang/Object;");
      invalidDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("invalidDragActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      minimum__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("minimum", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      transform__Z = new Parameter("transform", boolean.class, "Z");
      obj__Ljava_lang_Object_ = new Parameter("obj", java.lang.Object.class, "Ljava/lang/Object;");
      top__F = new Parameter("top", float.class, "F");
      radius__F = new Parameter("radius", float.class, "F");
      copyFrom__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_ = new Parameter("copyFrom", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, "Lcom/badlogic/gdx/graphics/g3d/model/MeshPart;");
      top__I = new Parameter("top", int.class, "I");
      width__F = new Parameter("width", float.class, "F");
      far__F = new Parameter("far", float.class, "F");
      width__I = new Parameter("width", int.class, "I");
      str__Ljava_lang_String_ = new Parameter("str", java.lang.String.class, "Ljava/lang/String;");
      vy__F = new Parameter("vy", float.class, "F");
      camera__Lcom_badlogic_gdx_graphics_Camera_ = new Parameter("camera", com.badlogic.gdx.graphics.Camera.class, "Lcom/badlogic/gdx/graphics/Camera;");
      matrix___F = new Parameter("matrix", float[].class, "[F");
      patch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_ = new Parameter("patch", com.badlogic.gdx.graphics.g2d.NinePatch.class, "Lcom/badlogic/gdx/graphics/g2d/NinePatch;");
      aY__F = new Parameter("aY", float.class, "F");
      t3__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("t3", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      zy__F = new Parameter("zy", float.class, "F");
      descendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("descendant", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      tapCountInterval__F = new Parameter("tapCountInterval", float.class, "F");
      px__F = new Parameter("px", float.class, "F");
      out__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("out", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      scaleXY__F = new Parameter("scaleXY", float.class, "F");
      interpolatedOut__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("interpolatedOut", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      round__Z = new Parameter("round", boolean.class, "Z");
      dx__F = new Parameter("dx", float.class, "F");
      replaceStr__Ljava_lang_String_ = new Parameter("replaceStr", java.lang.String.class, "Ljava/lang/String;");
      dragActorX__F = new Parameter("dragActorX", float.class, "F");
      r__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("r", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      arg1__Ljava_lang_String_ = new Parameter("arg1", java.lang.String.class, "Ljava/lang/String;");
      ny__F = new Parameter("ny", float.class, "F");
      middleWidth__F = new Parameter("middleWidth", float.class, "F");
      textBounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_ = new Parameter("textBounds", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;");
      vector__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("vector", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      amount__I = new Parameter("amount", int.class, "I");
      quaternionX__F = new Parameter("quaternionX", float.class, "F");
      v2__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("v2", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      index__I = new Parameter("index", int.class, "I");
      ninePatch__Lcom_badlogic_gdx_graphics_g2d_NinePatch_ = new Parameter("ninePatch", com.badlogic.gdx.graphics.g2d.NinePatch.class, "Lcom/badlogic/gdx/graphics/g2d/NinePatch;");
      coords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("coords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      z__I = new Parameter("z", int.class, "I");
      z__F = new Parameter("z", float.class, "F");
      ooffset__I = new Parameter("ooffset", int.class, "I");
      luminance__F = new Parameter("luminance", float.class, "F");
      viewportWidth__F = new Parameter("viewportWidth", float.class, "F");
      actorBefore__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("actorBefore", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      amount__F = new Parameter("amount", float.class, "F");
      nx__F = new Parameter("nx", float.class, "F");
      startX__F = new Parameter("startX", float.class, "F");
      startX__I = new Parameter("startX", int.class, "I");
      obj__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("obj", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      dragActorY__F = new Parameter("dragActorY", float.class, "F");
      keycode__I = new Parameter("keycode", int.class, "I");
      bubbles__Z = new Parameter("bubbles", boolean.class, "Z");
      rectangle1__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("rectangle1", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      alignment__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$HAlignment_ = new Parameter("alignment", com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;");
      a___C = new Parameter("a", char[].class, "[C");
      message__Ljava_lang_String_ = new Parameter("message", java.lang.String.class, "Ljava/lang/String;");
      zx__F = new Parameter("zx", float.class, "F");
      rgba__I = new Parameter("rgba", int.class, "I");
      p2__Lcom_badlogic_gdx_math_Polygon_ = new Parameter("p2", com.badlogic.gdx.math.Polygon.class, "Lcom/badlogic/gdx/math/Polygon;");
      stageCoords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("stageCoords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      startIndex__I = new Parameter("startIndex", int.class, "I");
      pitch__F = new Parameter("pitch", float.class, "F");
      x__Ljava_lang_CharSequence_ = new Parameter("x", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      arg1___Ljava_lang_Object_ = new Parameter("arg1", java.lang.Object[].class, "[Ljava/lang/Object;");
      transformMatrix__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("transformMatrix", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      translationZ__F = new Parameter("translationZ", float.class, "F");
      arg0__Ljava_util_Map_ = new Parameter("arg0", java.util.Map.class, "Ljava/util/Map;");
      usage__I = new Parameter("usage", int.class, "I");
      translationX__F = new Parameter("translationX", float.class, "F");
      values__F = new Parameter("values", float.class, "F");
      ignoreCase__Z = new Parameter("ignoreCase", boolean.class, "Z");
      zAxis__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("zAxis", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      zz__F = new Parameter("zz", float.class, "F");
      validDragActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("validDragActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      startY__I = new Parameter("startY", int.class, "I");
      sb__Ljava_lang_StringBuilder_ = new Parameter("sb", java.lang.StringBuilder.class, "Ljava/lang/StringBuilder;");
      linePoint1__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("linePoint1", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      action1__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action1", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      norY__F = new Parameter("norY", float.class, "F");
      halfHeight__F = new Parameter("halfHeight", float.class, "F");
      me__Ljava_lang_String_ = new Parameter("me", java.lang.String.class, "Ljava/lang/String;");
      len__I = new Parameter("len", int.class, "I");
      transform__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("transform", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      from__C = new Parameter("from", char.class, "C");
      data__Lcom_badlogic_gdx_graphics_TextureData_ = new Parameter("data", com.badlogic.gdx.graphics.TextureData.class, "Lcom/badlogic/gdx/graphics/TextureData;");
      vecs___F = new Parameter("vecs", float[].class, "[F");
      box__Lcom_badlogic_gdx_math_collision_BoundingBox_ = new Parameter("box", com.badlogic.gdx.math.collision.BoundingBox.class, "Lcom/badlogic/gdx/math/collision/BoundingBox;");
      degrees__F = new Parameter("degrees", float.class, "F");
      viewportX__F = new Parameter("viewportX", float.class, "F");
      yz__F = new Parameter("yz", float.class, "F");
      arg2___Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg2", com.badlogic.gdx.math.Vector[].class, "[Lcom/badlogic/gdx/math/Vector;");
      point1__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("point1", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      alignment__I = new Parameter("alignment", int.class, "I");
      chance__F = new Parameter("chance", float.class, "F");
      srcEnd__I = new Parameter("srcEnd", int.class, "I");
      action2__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action2", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      pos__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("pos", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      batchTransform__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("batchTransform", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      ch__I = new Parameter("ch", int.class, "I");
      direction__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("direction", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      middleHeight__F = new Parameter("middleHeight", float.class, "F");
      stageX__F = new Parameter("stageX", float.class, "F");
      topHeight__F = new Parameter("topHeight", float.class, "F");
      barycentricOut__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("barycentricOut", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      rect__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("rect", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      xAxis__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("xAxis", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      removeActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("removeActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      startY__F = new Parameter("startY", float.class, "F");
      parentCoords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("parentCoords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      by__F = new Parameter("by", float.class, "F");
      angle__F = new Parameter("angle", float.class, "F");
      vector__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("vector", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      keepAspectRatio__Z = new Parameter("keepAspectRatio", boolean.class, "Z");
      y3__F = new Parameter("y3", float.class, "F");
      glyphs__Ljava_lang_CharSequence_ = new Parameter("glyphs", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      stride__I = new Parameter("stride", int.class, "I");
      start__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("start", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      action3__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action3", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      ch__C = new Parameter("ch", char.class, "C");
      heights___F = new Parameter("heights", float[].class, "[F");
      r1__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("r1", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      p1__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("p1", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      scaledAction__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("scaledAction", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      lower__I = new Parameter("lower", int.class, "I");
      position__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("position", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      listenerActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("listenerActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      fontFile__Lcom_badlogic_gdx_files_FileHandle_ = new Parameter("fontFile", com.badlogic.gdx.files.FileHandle.class, "Lcom/badlogic/gdx/files/FileHandle;");
      points__Lcom_badlogic_gdx_utils_FloatArray_ = new Parameter("points", com.badlogic.gdx.utils.FloatArray.class, "Lcom/badlogic/gdx/utils/FloatArray;");
      charSet__Ljava_lang_String_ = new Parameter("charSet", java.lang.String.class, "Ljava/lang/String;");
      rotationAmount__F = new Parameter("rotationAmount", float.class, "F");
      tint__Lcom_badlogic_gdx_graphics_Color_ = new Parameter("tint", com.badlogic.gdx.graphics.Color.class, "Lcom/badlogic/gdx/graphics/Color;");
      b__B = new Parameter("b", byte.class, "B");
      thisStr__Ljava_lang_String_ = new Parameter("thisStr", java.lang.String.class, "Ljava/lang/String;");
      b__D = new Parameter("b", double.class, "D");
      charsetName__Ljava_lang_String_ = new Parameter("charsetName", java.lang.String.class, "Ljava/lang/String;");
      b__F = new Parameter("b", float.class, "F");
      arg0__Lcom_badlogic_gdx_utils_Array_ = new Parameter("arg0", com.badlogic.gdx.utils.Array.class, "Lcom/badlogic/gdx/utils/Array;");
      b__I = new Parameter("b", int.class, "I");
      instance__Ljava_util_HashMap_ = new Parameter("instance", java.util.HashMap.class, "Ljava/util/HashMap;");
      velocityY__F = new Parameter("velocityY", float.class, "F");
      b__S = new Parameter("b", short.class, "S");
      bX__F = new Parameter("bX", float.class, "F");
      count2__I = new Parameter("count2", int.class, "I");
      vertex___F = new Parameter("vertex", float[].class, "[F");
      value__I = new Parameter("value", int.class, "I");
      arg7__Ljava_lang_Object_ = new Parameter("arg7", java.lang.Object.class, "Ljava/lang/Object;");
      arg1__Ljava_lang_Class_ = new Parameter("arg1", java.lang.Class.class, "Ljava/lang/Class;");
      minWidth__F = new Parameter("minWidth", float.class, "F");
      action__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      value__D = new Parameter("value", double.class, "D");
      linePoint1Y__F = new Parameter("linePoint1Y", float.class, "F");
      value__C = new Parameter("value", char.class, "C");
      b__Z = new Parameter("b", boolean.class, "Z");
      value__B = new Parameter("value", byte.class, "B");
      arg1__Ljava_lang_Object_ = new Parameter("arg1", java.lang.Object.class, "Ljava/lang/Object;");
      circle__Lcom_badlogic_gdx_math_Circle_ = new Parameter("circle", com.badlogic.gdx.math.Circle.class, "Lcom/badlogic/gdx/math/Circle;");
      value__F = new Parameter("value", float.class, "F");
      value__Z = new Parameter("value", boolean.class, "Z");
      out__Lcom_badlogic_gdx_graphics_g3d_Renderable_ = new Parameter("out", com.badlogic.gdx.graphics.g3d.Renderable.class, "Lcom/badlogic/gdx/graphics/g3d/Renderable;");
      second__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("second", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      polygon__Lcom_badlogic_gdx_utils_Array_ = new Parameter("polygon", com.badlogic.gdx.utils.Array.class, "Lcom/badlogic/gdx/utils/Array;");
      value__S = new Parameter("value", short.class, "S");
      prefix__Ljava_lang_String_ = new Parameter("prefix", java.lang.String.class, "Ljava/lang/String;");
      instance__Ljava_util_Map_ = new Parameter("instance", java.util.Map.class, "Ljava/util/Map;");
      instance__Ljava_lang_Double_ = new Parameter("instance", java.lang.Double.class, "Ljava/lang/Double;");
      epsilon__F = new Parameter("epsilon", float.class, "F");
      chars__Ljava_lang_CharSequence_ = new Parameter("chars", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      scaleX__F = new Parameter("scaleX", float.class, "F");
      instance__Ljava_lang_String_ = new Parameter("instance", java.lang.String.class, "Ljava/lang/String;");
      arg0__Ljava_lang_Class_ = new Parameter("arg0", java.lang.Class.class, "Ljava/lang/Class;");
      cullingArea__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("cullingArea", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      other__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("other", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      yAxis__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("yAxis", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      fillParent__Z = new Parameter("fillParent", boolean.class, "Z");
      mata___F = new Parameter("mata", float[].class, "[F");
      linePoint1X__F = new Parameter("linePoint1X", float.class, "F");
      arg4__I = new Parameter("arg4", int.class, "I");
      initialDistance__F = new Parameter("initialDistance", float.class, "F");
      split___F = new Parameter("split", float[].class, "[F");
      inverseProjectionView__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("inverseProjectionView", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      originalIndices___S = new Parameter("originalIndices", short[].class, "[S");
      polygon__Lcom_badlogic_gdx_math_Polygon_ = new Parameter("polygon", com.badlogic.gdx.math.Polygon.class, "Lcom/badlogic/gdx/math/Polygon;");
      axisY__F = new Parameter("axisY", float.class, "F");
      aZ__F = new Parameter("aZ", float.class, "F");
      initialPointer2__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("initialPointer2", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      reverse__Z = new Parameter("reverse", boolean.class, "Z");
      target__Lcom_badlogic_gdx_graphics_Color_ = new Parameter("target", com.badlogic.gdx.graphics.Color.class, "Lcom/badlogic/gdx/graphics/Color;");
      type__Lcom_badlogic_gdx_scenes_scene2d_InputEvent$Type_ = new Parameter("type", com.badlogic.gdx.scenes.scene2d.InputEvent.Type.class, "Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;");
      time__F = new Parameter("time", float.class, "F");
      arg5__Z = new Parameter("arg5", boolean.class, "Z");
      arg4__Z = new Parameter("arg4", boolean.class, "Z");
      c2__Lcom_badlogic_gdx_math_Circle_ = new Parameter("c2", com.badlogic.gdx.math.Circle.class, "Lcom/badlogic/gdx/math/Circle;");
      longPressDuration__F = new Parameter("longPressDuration", float.class, "F");
      meshPart__Lcom_badlogic_gdx_graphics_g3d_model_MeshPart_ = new Parameter("meshPart", com.badlogic.gdx.graphics.g3d.model.MeshPart.class, "Lcom/badlogic/gdx/graphics/g3d/model/MeshPart;");
      other__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("other", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      instance__Ljava_lang_Byte_ = new Parameter("instance", java.lang.Byte.class, "Ljava/lang/Byte;");
      x__Z = new Parameter("x", boolean.class, "Z");
      orientation__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("orientation", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      size__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("size", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      y2__F = new Parameter("y2", float.class, "F");
      name__Ljava_lang_String_ = new Parameter("name", java.lang.String.class, "Ljava/lang/String;");
      delayedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("delayedAction", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      tileWidth__I = new Parameter("tileWidth", int.class, "I");
      arg6__I = new Parameter("arg6", int.class, "I");
      repeatedAction__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("repeatedAction", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      visible__Z = new Parameter("visible", boolean.class, "Z");
      idx__I = new Parameter("idx", int.class, "I");
      bottom__F = new Parameter("bottom", float.class, "F");
      data__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$BitmapFontData_ = new Parameter("data", com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData;");
      numVecs__I = new Parameter("numVecs", int.class, "I");
      bottom__I = new Parameter("bottom", int.class, "I");
      batch__Lcom_badlogic_gdx_graphics_g2d_Batch_ = new Parameter("batch", com.badlogic.gdx.graphics.g2d.Batch.class, "Lcom/badlogic/gdx/graphics/g2d/Batch;");
      first__I = new Parameter("first", int.class, "I");
      internalPath__Ljava_lang_String_ = new Parameter("internalPath", java.lang.String.class, "Ljava/lang/String;");
      stageY__F = new Parameter("stageY", float.class, "F");
      object__Ljava_lang_Object_ = new Parameter("object", java.lang.Object.class, "Ljava/lang/Object;");
      endY__F = new Parameter("endY", float.class, "F");
      b__Ljava_lang_Byte_ = new Parameter("b", java.lang.Byte.class, "Ljava/lang/Byte;");
      endY__I = new Parameter("endY", int.class, "I");
      arg3__Ljava_lang_Class_ = new Parameter("arg3", java.lang.Class.class, "Ljava/lang/Class;");
      a__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("a", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      height__I = new Parameter("height", int.class, "I");
      seq__Ljava_lang_CharSequence_ = new Parameter("seq", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      quat__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("quat", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      pool__Lcom_badlogic_gdx_utils_Pool_ = new Parameter("pool", com.badlogic.gdx.utils.Pool.class, "Lcom/badlogic/gdx/utils/Pool;");
      vz__F = new Parameter("vz", float.class, "F");
      interpolation__Lcom_badlogic_gdx_math_Interpolation_ = new Parameter("interpolation", com.badlogic.gdx.math.Interpolation.class, "Lcom/badlogic/gdx/math/Interpolation;");
      to__C = new Parameter("to", char.class, "C");
      x__Ljava_lang_Object_ = new Parameter("x", java.lang.Object.class, "Ljava/lang/Object;");
      source__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Source_ = new Parameter("source", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;");
      arg2__Ljava_lang_Enum_ = new Parameter("arg2", java.lang.Enum.class, "Ljava/lang/Enum;");
      p2y__F = new Parameter("p2y", float.class, "F");
      ray__Lcom_badlogic_gdx_math_collision_Ray_ = new Parameter("ray", com.badlogic.gdx.math.collision.Ray.class, "Lcom/badlogic/gdx/math/collision/Ray;");
      character__C = new Parameter("character", char.class, "C");
      arg0___Ljava_lang_Enum_ = new Parameter("arg0", java.lang.Enum[].class, "[Ljava/lang/Enum;");
      count1__I = new Parameter("count1", int.class, "I");
      codePoint__I = new Parameter("codePoint", int.class, "I");
      rectangle__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("rectangle", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      arg0__Ljava_lang_Enum_ = new Parameter("arg0", java.lang.Enum.class, "Ljava/lang/Enum;");
      normalizeAxes__Z = new Parameter("normalizeAxes", boolean.class, "Z");
      a__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("a", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      p1x__F = new Parameter("p1x", float.class, "F");
      originY__F = new Parameter("originY", float.class, "F");
      runnable__Ljava_lang_Runnable_ = new Parameter("runnable", java.lang.Runnable.class, "Ljava/lang/Runnable;");
      height__F = new Parameter("height", float.class, "F");
      t2__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("t2", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      linePoint2Y__F = new Parameter("linePoint2Y", float.class, "F");
      event__Lcom_badlogic_gdx_scenes_scene2d_utils_ChangeListener$ChangeEvent_ = new Parameter("event", com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/ChangeListener$ChangeEvent;");
      args___Ljava_lang_String_ = new Parameter("args", java.lang.String[].class, "[Ljava/lang/String;");
      near__F = new Parameter("near", float.class, "F");
      alpha__F = new Parameter("alpha", float.class, "F");
      maximum__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("maximum", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      matrix__Lcom_badlogic_gdx_math_Matrix3_ = new Parameter("matrix", com.badlogic.gdx.math.Matrix3.class, "Lcom/badlogic/gdx/math/Matrix3;");
      other__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("other", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      t__F = new Parameter("t", float.class, "F");
      offset2__I = new Parameter("offset2", int.class, "I");
      windowSize__I = new Parameter("windowSize", int.class, "I");
      yy__F = new Parameter("yy", float.class, "F");
      pointX__F = new Parameter("pointX", float.class, "F");
      to__Ljava_lang_CharSequence_ = new Parameter("to", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      arg0__Lcom_badlogic_gdx_utils_ObjectMap_ = new Parameter("arg0", com.badlogic.gdx.utils.ObjectMap.class, "Lcom/badlogic/gdx/utils/ObjectMap;");
      bY__F = new Parameter("bY", float.class, "F");
      ax__F = new Parameter("ax", float.class, "F");
      scalarZ__F = new Parameter("scalarZ", float.class, "F");
      sb__Ljava_lang_StringBuffer_ = new Parameter("sb", java.lang.StringBuffer.class, "Ljava/lang/StringBuffer;");
      c__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("c", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      imageFile__Lcom_badlogic_gdx_files_FileHandle_ = new Parameter("imageFile", com.badlogic.gdx.files.FileHandle.class, "Lcom/badlogic/gdx/files/FileHandle;");
      q__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("q", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      p4__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("p4", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      bx__F = new Parameter("bx", float.class, "F");
      axisX__F = new Parameter("axisX", float.class, "F");
      endX__F = new Parameter("endX", float.class, "F");
      toffset__I = new Parameter("toffset", int.class, "I");
      alignmentWidth__F = new Parameter("alignmentWidth", float.class, "F");
      arg0__Lcom_google_gwt_core_client_JavaScriptObject_ = new Parameter("arg0", com.google.gwt.core.client.JavaScriptObject.class, "Lcom/google/gwt/core/client/JavaScriptObject;");
      endX__I = new Parameter("endX", int.class, "I");
      amountX__F = new Parameter("amountX", float.class, "F");
      hex__Ljava_lang_String_ = new Parameter("hex", java.lang.String.class, "Ljava/lang/String;");
      quaternionW__F = new Parameter("quaternionW", float.class, "F");
      axisZ__F = new Parameter("axisZ", float.class, "F");
      shift__I = new Parameter("shift", int.class, "I");
      start__F = new Parameter("start", float.class, "F");
      start__I = new Parameter("start", int.class, "I");
      glyph__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$Glyph_ = new Parameter("glyph", com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;");
      matrix__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("matrix", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      tileHeight__I = new Parameter("tileHeight", int.class, "I");
      scrollAmount__I = new Parameter("scrollAmount", int.class, "I");
      arg6__Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg6", com.badlogic.gdx.math.Vector.class, "Lcom/badlogic/gdx/math/Vector;");
      other__Ljava_lang_Object_ = new Parameter("other", java.lang.Object.class, "Ljava/lang/Object;");
      format__Lcom_badlogic_gdx_graphics_Pixmap$Format_ = new Parameter("format", com.badlogic.gdx.graphics.Pixmap.Format.class, "Lcom/badlogic/gdx/graphics/Pixmap$Format;");
      quaternionY__F = new Parameter("quaternionY", float.class, "F");
      radix__I = new Parameter("radix", int.class, "I");
      quaternionZ__F = new Parameter("quaternionZ", float.class, "F");
      stage__Lcom_badlogic_gdx_scenes_scene2d_Stage_ = new Parameter("stage", com.badlogic.gdx.scenes.scene2d.Stage.class, "Lcom/badlogic/gdx/scenes/scene2d/Stage;");
      arg0__Lcom_badlogic_gdx_utils_ArrayMap_ = new Parameter("arg0", com.badlogic.gdx.utils.ArrayMap.class, "Lcom/badlogic/gdx/utils/ArrayMap;");
      charset__Ljava_lang_String_ = new Parameter("charset", java.lang.String.class, "Ljava/lang/String;");
      color__Lcom_badlogic_gdx_graphics_Color_ = new Parameter("color", com.badlogic.gdx.graphics.Color.class, "Lcom/badlogic/gdx/graphics/Color;");
      squareRadius__F = new Parameter("squareRadius", float.class, "F");
      first__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("first", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      localCoords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("localCoords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      actor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("actor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      x2__F = new Parameter("x2", float.class, "F");
      scaleY__F = new Parameter("scaleY", float.class, "F");
      verts1___F = new Parameter("verts1", float[].class, "[F");
      roll__F = new Parameter("roll", float.class, "F");
      second__I = new Parameter("second", int.class, "I");
      a_bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_ = new Parameter("a_bounds", com.badlogic.gdx.math.collision.BoundingBox.class, "Lcom/badlogic/gdx/math/collision/BoundingBox;");
      mat__Lcom_badlogic_gdx_math_Matrix3_ = new Parameter("mat", com.badlogic.gdx.math.Matrix3.class, "Lcom/badlogic/gdx/math/Matrix3;");
      instance__Ljava_util_ArrayList_ = new Parameter("instance", java.util.ArrayList.class, "Ljava/util/ArrayList;");
      arg3___Lcom_badlogic_gdx_math_Vector_ = new Parameter("arg3", com.badlogic.gdx.math.Vector[].class, "[Lcom/badlogic/gdx/math/Vector;");
      end__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("end", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      xAmount__F = new Parameter("xAmount", float.class, "F");
      actions___Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("actions", com.badlogic.gdx.scenes.scene2d.Action[].class, "[Lcom/badlogic/gdx/scenes/scene2d/Action;");
      max__I = new Parameter("max", int.class, "I");
      point__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("point", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      arg2__Ljava_lang_Class_ = new Parameter("arg2", java.lang.Class.class, "Ljava/lang/Class;");
      actorCoords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("actorCoords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      action5__Lcom_badlogic_gdx_scenes_scene2d_Action_ = new Parameter("action5", com.badlogic.gdx.scenes.scene2d.Action.class, "Lcom/badlogic/gdx/scenes/scene2d/Action;");
      max__F = new Parameter("max", float.class, "F");
      x___C = new Parameter("x", char[].class, "[C");
      other__Lcom_badlogic_gdx_graphics_VertexAttribute_ = new Parameter("other", com.badlogic.gdx.graphics.VertexAttribute.class, "Lcom/badlogic/gdx/graphics/VertexAttribute;");
      max__S = new Parameter("max", short.class, "S");
      ofs__I = new Parameter("ofs", int.class, "I");
      font__Lcom_badlogic_gdx_graphics_g2d_BitmapFont_ = new Parameter("font", com.badlogic.gdx.graphics.g2d.BitmapFont.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont;");
      yx__F = new Parameter("yx", float.class, "F");
      event__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent_ = new Parameter("event", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;");
      scalar__F = new Parameter("scalar", float.class, "F");
      pointer__I = new Parameter("pointer", int.class, "I");
      end__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("end", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      mat__Lcom_badlogic_gdx_math_Matrix4_ = new Parameter("mat", com.badlogic.gdx.math.Matrix4.class, "Lcom/badlogic/gdx/math/Matrix4;");
      b__Ljava_lang_Short_ = new Parameter("b", java.lang.Short.class, "Ljava/lang/Short;");
      ignoredCapacity__I = new Parameter("ignoredCapacity", int.class, "I");
      minHeight__F = new Parameter("minHeight", float.class, "F");
      triangles__Ljava_util_List_ = new Parameter("triangles", java.util.List.class, "Ljava/util/List;");
      screenCoords__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("screenCoords", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      xy__F = new Parameter("xy", float.class, "F");
      button__I = new Parameter("button", int.class, "I");
      x__Ljava_lang_StringBuilder_ = new Parameter("x", java.lang.StringBuilder.class, "Ljava/lang/StringBuilder;");
      percentDelta__F = new Parameter("percentDelta", float.class, "F");
      overLast__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("overLast", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      point__Lcom_badlogic_gdx_math_GridPoint3_ = new Parameter("point", com.badlogic.gdx.math.GridPoint3.class, "Lcom/badlogic/gdx/math/GridPoint3;");
      instance__Ljava_lang_Character_ = new Parameter("instance", java.lang.Character.class, "Ljava/lang/Character;");
      offset1__I = new Parameter("offset1", int.class, "I");
      instance__Ljava_lang_Boolean_ = new Parameter("instance", java.lang.Boolean.class, "Ljava/lang/Boolean;");
      glyphAdvances__Lcom_badlogic_gdx_utils_FloatArray_ = new Parameter("glyphAdvances", com.badlogic.gdx.utils.FloatArray.class, "Lcom/badlogic/gdx/utils/FloatArray;");
      mtv__Lcom_badlogic_gdx_math_Intersector$MinimumTranslationVector_ = new Parameter("mtv", com.badlogic.gdx.math.Intersector.MinimumTranslationVector.class, "Lcom/badlogic/gdx/math/Intersector$MinimumTranslationVector;");
      aspectRatio__F = new Parameter("aspectRatio", float.class, "F");
      bounds__Lcom_badlogic_gdx_math_collision_BoundingBox_ = new Parameter("bounds", com.badlogic.gdx.math.collision.BoundingBox.class, "Lcom/badlogic/gdx/math/collision/BoundingBox;");
      cx__F = new Parameter("cx", float.class, "F");
      arg0__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("arg0", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      limit__F = new Parameter("limit", float.class, "F");
      centroid__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("centroid", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      quaternion__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("quaternion", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      limit__I = new Parameter("limit", int.class, "I");
      drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_NinePatchDrawable_ = new Parameter("drawable", com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable;");
      b__Ljava_lang_Double_ = new Parameter("b", java.lang.Double.class, "Ljava/lang/Double;");
      right__I = new Parameter("right", int.class, "I");
      indices___S = new Parameter("indices", short[].class, "[S");
      numElements__I = new Parameter("numElements", int.class, "I");
      cs__Ljava_lang_CharSequence_ = new Parameter("cs", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      streamReader__Lcom_google_gwt_user_client_rpc_SerializationStreamReader_ = new Parameter("streamReader", com.google.gwt.user.client.rpc.SerializationStreamReader.class, "Lcom/google/gwt/user/client/rpc/SerializationStreamReader;");
      c__Ljava_lang_Character_ = new Parameter("c", java.lang.Character.class, "Ljava/lang/Character;");
      right__F = new Parameter("right", float.class, "F");
      b__Ljava_lang_Integer_ = new Parameter("b", java.lang.Integer.class, "Ljava/lang/Integer;");
      text__Ljava_lang_CharSequence_ = new Parameter("text", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      y4__F = new Parameter("y4", float.class, "F");
      arg0___Ljava_lang_Object_ = new Parameter("arg0", java.lang.Object[].class, "[Ljava/lang/Object;");
      flip__Z = new Parameter("flip", boolean.class, "Z");
      region__Lcom_badlogic_gdx_graphics_g2d_TextureRegion_ = new Parameter("region", com.badlogic.gdx.graphics.g2d.TextureRegion.class, "Lcom/badlogic/gdx/graphics/g2d/TextureRegion;");
      vertices__Lcom_badlogic_gdx_utils_FloatArray_ = new Parameter("vertices", com.badlogic.gdx.utils.FloatArray.class, "Lcom/badlogic/gdx/utils/FloatArray;");
      halfTapSquareSize__F = new Parameter("halfTapSquareSize", float.class, "F");
      isStretchH__Z = new Parameter("isStretchH", boolean.class, "Z");
      target__Lcom_badlogic_gdx_scenes_scene2d_utils_DragAndDrop$Target_ = new Parameter("target", com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Target;");
      screenY__I = new Parameter("screenY", int.class, "I");
      parent__Lcom_badlogic_gdx_scenes_scene2d_Group_ = new Parameter("parent", com.badlogic.gdx.scenes.scene2d.Group.class, "Lcom/badlogic/gdx/scenes/scene2d/Group;");
      scalingZ__F = new Parameter("scalingZ", float.class, "F");
      other__Ljava_lang_Boolean_ = new Parameter("other", java.lang.Boolean.class, "Ljava/lang/Boolean;");
      listener__Lcom_badlogic_gdx_scenes_scene2d_EventListener_ = new Parameter("listener", com.badlogic.gdx.scenes.scene2d.EventListener.class, "Lcom/badlogic/gdx/scenes/scene2d/EventListener;");
      arg2__Z = new Parameter("arg2", boolean.class, "Z");
      leftWidth__F = new Parameter("leftWidth", float.class, "F");
      pointY__F = new Parameter("pointY", float.class, "F");
      file__Lcom_badlogic_gdx_files_FileHandle_ = new Parameter("file", com.badlogic.gdx.files.FileHandle.class, "Lcom/badlogic/gdx/files/FileHandle;");
      alphaModulation__F = new Parameter("alphaModulation", float.class, "F");
      scissor__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("scissor", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      targetActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("targetActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      output__Lcom_badlogic_gdx_utils_Array_ = new Parameter("output", com.badlogic.gdx.utils.Array.class, "Lcom/badlogic/gdx/utils/Array;");
      arg2__F = new Parameter("arg2", float.class, "F");
      highSurrogate__C = new Parameter("highSurrogate", char.class, "C");
      arg2__I = new Parameter("arg2", int.class, "I");
      r__I = new Parameter("r", int.class, "I");
      displacement__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("displacement", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      maxFlingDelay__F = new Parameter("maxFlingDelay", float.class, "F");
      nodes__Lcom_badlogic_gdx_utils_Array_ = new Parameter("nodes", com.badlogic.gdx.utils.Array.class, "Lcom/badlogic/gdx/utils/Array;");
      r__F = new Parameter("r", float.class, "F");
      arg2__Ljava_lang_Object_ = new Parameter("arg2", java.lang.Object.class, "Ljava/lang/Object;");
      x3__F = new Parameter("x3", float.class, "F");
      dstIndex__I = new Parameter("dstIndex", int.class, "I");
      arg0__Ljava_util_Comparator_ = new Parameter("arg0", java.util.Comparator.class, "Ljava/util/Comparator;");
      vx__F = new Parameter("vx", float.class, "F");
      unit__I = new Parameter("unit", int.class, "I");
      digit__I = new Parameter("digit", int.class, "I");
      intersection__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("intersection", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      x__J = new Parameter("x", long.class, "J");
      maxMatch__I = new Parameter("maxMatch", int.class, "I");
      other__Ljava_lang_String_ = new Parameter("other", java.lang.String.class, "Ljava/lang/String;");
      norX__F = new Parameter("norX", float.class, "F");
      x__I = new Parameter("x", int.class, "I");
      dz__F = new Parameter("dz", float.class, "F");
      stageWidth__F = new Parameter("stageWidth", float.class, "F");
      end__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("end", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      center__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("center", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      regions___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_ = new Parameter("regions", com.badlogic.gdx.graphics.g2d.TextureRegion[].class, "[Lcom/badlogic/gdx/graphics/g2d/TextureRegion;");
      x__C = new Parameter("x", char.class, "C");
      arg3___Ljava_lang_Object_ = new Parameter("arg3", java.lang.Object[].class, "[Ljava/lang/Object;");
      x__Ljava_lang_StringBuffer_ = new Parameter("x", java.lang.StringBuffer.class, "Ljava/lang/StringBuffer;");
      touchable__Lcom_badlogic_gdx_scenes_scene2d_Touchable_ = new Parameter("touchable", com.badlogic.gdx.scenes.scene2d.Touchable.class, "Lcom/badlogic/gdx/scenes/scene2d/Touchable;");
      axis__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("axis", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      x__F = new Parameter("x", float.class, "F");
      x__D = new Parameter("x", double.class, "D");
      nz__F = new Parameter("nz", float.class, "F");
      drawable__Lcom_badlogic_gdx_scenes_scene2d_utils_Drawable_ = new Parameter("drawable", com.badlogic.gdx.scenes.scene2d.utils.Drawable.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/Drawable;");
      bZ__F = new Parameter("bZ", float.class, "F");
      ay__F = new Parameter("ay", float.class, "F");
      manager__Lcom_badlogic_gdx_assets_AssetManager_ = new Parameter("manager", com.badlogic.gdx.assets.AssetManager.class, "Lcom/badlogic/gdx/assets/AssetManager;");
      attributes___Lcom_badlogic_gdx_graphics_VertexAttribute_ = new Parameter("attributes", com.badlogic.gdx.graphics.VertexAttribute[].class, "[Lcom/badlogic/gdx/graphics/VertexAttribute;");
      triangle___F = new Parameter("triangle", float[].class, "[F");
      points__Ljava_util_List_ = new Parameter("points", java.util.List.class, "Ljava/util/List;");
      end__Lcom_badlogic_gdx_math_GridPoint2_ = new Parameter("end", com.badlogic.gdx.math.GridPoint2.class, "Lcom/badlogic/gdx/math/GridPoint2;");
      min__I = new Parameter("min", int.class, "I");
      dstBegin__I = new Parameter("dstBegin", int.class, "I");
      min__F = new Parameter("min", float.class, "F");
      rotation__Lcom_badlogic_gdx_math_Quaternion_ = new Parameter("rotation", com.badlogic.gdx.math.Quaternion.class, "Lcom/badlogic/gdx/math/Quaternion;");
      screenX__I = new Parameter("screenX", int.class, "I");
      dimensions__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("dimensions", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      arg0__Lcom_badlogic_gdx_scenes_scene2d_Event_ = new Parameter("arg0", com.badlogic.gdx.scenes.scene2d.Event.class, "Lcom/badlogic/gdx/scenes/scene2d/Event;");
      linePoint2__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("linePoint2", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      min__S = new Parameter("min", short.class, "S");
      out__Lcom_badlogic_gdx_math_collision_BoundingBox_ = new Parameter("out", com.badlogic.gdx.math.collision.BoundingBox.class, "Lcom/badlogic/gdx/math/collision/BoundingBox;");
      intersection__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("intersection", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      arg3__Ljava_lang_Object_ = new Parameter("arg3", java.lang.Object.class, "Ljava/lang/Object;");
      c__Lcom_badlogic_gdx_math_Circle_ = new Parameter("c", com.badlogic.gdx.math.Circle.class, "Lcom/badlogic/gdx/math/Circle;");
      use__Z = new Parameter("use", boolean.class, "Z");
      scaling__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("scaling", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      from__Ljava_lang_CharSequence_ = new Parameter("from", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      lowSurrogate__C = new Parameter("lowSurrogate", char.class, "C");
      center__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("center", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      py__F = new Parameter("py", float.class, "F");
      arg5__Ljava_lang_Object_ = new Parameter("arg5", java.lang.Object.class, "Ljava/lang/Object;");
      triangles__Lcom_badlogic_gdx_utils_ShortArray_ = new Parameter("triangles", com.badlogic.gdx.utils.ShortArray.class, "Lcom/badlogic/gdx/utils/ShortArray;");
      integer__Z = new Parameter("integer", boolean.class, "Z");
      patches___Lcom_badlogic_gdx_graphics_g2d_TextureRegion_ = new Parameter("patches", com.badlogic.gdx.graphics.g2d.TextureRegion[].class, "[Lcom/badlogic/gdx/graphics/g2d/TextureRegion;");
      yDown__Z = new Parameter("yDown", boolean.class, "Z");
      dy__F = new Parameter("dy", float.class, "F");
      xp__F = new Parameter("xp", float.class, "F");
      z2__F = new Parameter("z2", float.class, "F");
      mesh__Lcom_badlogic_gdx_graphics_Mesh_ = new Parameter("mesh", com.badlogic.gdx.graphics.Mesh.class, "Lcom/badlogic/gdx/graphics/Mesh;");
      stageHeight__F = new Parameter("stageHeight", float.class, "F");
      newLength__I = new Parameter("newLength", int.class, "I");
      deltaX__F = new Parameter("deltaX", float.class, "F");
      linePoint2X__F = new Parameter("linePoint2X", float.class, "F");
      normal__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("normal", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      app__Lcom_badlogic_gdx_Application_ = new Parameter("app", com.badlogic.gdx.Application.class, "Lcom/badlogic/gdx/Application;");
      percent__F = new Parameter("percent", float.class, "F");
      toActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("toActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      originX__F = new Parameter("originX", float.class, "F");
      bytes___B = new Parameter("bytes", byte[].class, "[B");
      bounds__Lcom_badlogic_gdx_graphics_g2d_BitmapFont$TextBounds_ = new Parameter("bounds", com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds.class, "Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;");
      p__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("p", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      parentAlpha__F = new Parameter("parentAlpha", float.class, "F");
      numComponents__I = new Parameter("numComponents", int.class, "I");
      forward__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("forward", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      yp__F = new Parameter("yp", float.class, "F");
      scalingX__F = new Parameter("scalingX", float.class, "F");
      triangles___F = new Parameter("triangles", float[].class, "[F");
      suffix__Ljava_lang_String_ = new Parameter("suffix", java.lang.String.class, "Ljava/lang/String;");
      focusType__Lcom_badlogic_gdx_scenes_scene2d_utils_FocusListener$FocusEvent$Type_ = new Parameter("focusType", com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type.class, "Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;");
      fromActor__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("fromActor", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      capture__Z = new Parameter("capture", boolean.class, "Z");
      val___F = new Parameter("val", float[].class, "[F");
      actorAfter__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("actorAfter", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      ascendant__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("ascendant", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      scalingY__F = new Parameter("scalingY", float.class, "F");
      s__Ljava_lang_CharSequence_ = new Parameter("s", java.lang.CharSequence.class, "Ljava/lang/CharSequence;");
      bits__J = new Parameter("bits", long.class, "J");
      alias__Ljava_lang_String_ = new Parameter("alias", java.lang.String.class, "Ljava/lang/String;");
      z1__F = new Parameter("z1", float.class, "F");
      f__F = new Parameter("f", float.class, "F");
      enabled__Z = new Parameter("enabled", boolean.class, "Z");
      rectangle2__Lcom_badlogic_gdx_math_Rectangle_ = new Parameter("rectangle2", com.badlogic.gdx.math.Rectangle.class, "Lcom/badlogic/gdx/math/Rectangle;");
      bits__I = new Parameter("bits", int.class, "I");
      pointer1__Lcom_badlogic_gdx_math_Vector2_ = new Parameter("pointer1", com.badlogic.gdx.math.Vector2.class, "Lcom/badlogic/gdx/math/Vector2;");
      offset__I = new Parameter("offset", int.class, "I");
      otherStr__Ljava_lang_String_ = new Parameter("otherStr", java.lang.String.class, "Ljava/lang/String;");
      point2__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("point2", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      up__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("up", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
      scalarY__F = new Parameter("scalarY", float.class, "F");
      target__Lcom_badlogic_gdx_scenes_scene2d_Actor_ = new Parameter("target", com.badlogic.gdx.scenes.scene2d.Actor.class, "Lcom/badlogic/gdx/scenes/scene2d/Actor;");
      distance__I = new Parameter("distance", int.class, "I");
      upper__I = new Parameter("upper", int.class, "I");
      replace__Ljava_lang_String_ = new Parameter("replace", java.lang.String.class, "Ljava/lang/String;");
      distance__F = new Parameter("distance", float.class, "F");
      mat___F = new Parameter("mat", float[].class, "[F");
      point__Lcom_badlogic_gdx_math_Vector3_ = new Parameter("point", com.badlogic.gdx.math.Vector3.class, "Lcom/badlogic/gdx/math/Vector3;");
  }
  public IReflectionCacheGenerated() {
  initializeParameters();
  c0();
  c1();
  c2();
  c3();
  c4();
  c5();
  c6();
  c7();
  c8();
  c9();
  c10();
  c11();
  c12();
  c13();
  c14();
  c15();
  c16();
  c17();
  c18();
  c19();
  c20();
  c21();
  c22();
  c23();
  c24();
  c25();
  c26();
  c27();
  c28();
  c29();
  c30();
  c31();
  c32();
  c33();
  c34();
  c35();
  c36();
  c37();
  c38();
  c39();
  c40();
  c41();
  c42();
  c43();
  c44();
  c45();
  c46();
  c47();
  c48();
  c49();
  c50();
  c51();
  c52();
  c53();
  c54();
  c55();
  c56();
  c57();
  c58();
  c59();
  c60();
  c61();
  c62();
  c63();
  c64();
  c65();
  c66();
  c67();
  c68();
  c69();
  c70();
  c71();
  c72();
  c73();
  c74();
  c75();
  c76();
  c77();
  c78();
  c79();
  c80();
  c81();
  c82();
  c83();
  c84();
  c85();
  c86();
  c87();
  c88();
  c89();
  c90();
  c91();
  c92();
  c93();
  c94();
  c95();
  c96();
  c97();
  c98();
  c99();
  c100();
  c101();
  c102();
  c103();
  c104();
  c105();
  c106();
  c107();
  c108();
  c109();
  c110();
  c111();
  c112();
  c113();
  c114();
  c115();
  c116();
  c117();
  c118();
  c119();
  c120();
  c121();
  c122();
  c123();
  c124();
  c125();
  c126();
  c127();
  c128();
  c129();
  c130();
  c131();
  c132();
  c133();
  c134();
  c135();
  c136();
  c137();
  c138();
  c139();
  c140();
  c141();
  c142();
  c143();
  c144();
  c145();
  c146();
  c147();
  c148();
  c149();
  c150();
  c151();
  c152();
  c153();
  c154();
  c155();
  c156();
  c157();
  c158();
  c159();
  c160();
  c161();
  c162();
  c163();
  c164();
  c165();
  c166();
  c167();
  c168();
  c169();
  c170();
  c171();
  c172();
  c173();
  c174();
  c175();
  c176();
  c177();
  c178();
  c179();
  c180();
  c181();
  c182();
  c183();
  c184();
  c185();
  c186();
  c187();
  c188();
  c189();
  c190();
  c191();
  c192();
  c193();
  c194();
  c195();
  c196();
  c197();
  c198();
  c199();
  c200();
  c201();
  c202();
  c203();
  c204();
  c205();
  c206();
  c207();
  c208();
  c209();
  c210();
  c211();
  c212();
  c213();
  c214();
  c215();
  c216();
  c217();
  c218();
  c219();
  c220();
  c221();
  c222();
  c223();
  c224();
  c225();
  c226();
  c227();
  c228();
  c229();
  c230();
  c231();
  c232();
  c233();
  c234();
  c235();
  c236();
  c237();
  c238();
  c239();
  c240();
  c241();
  c242();
  }
  
  // com.badlogic.gdx.graphics.Color#CLEAR
  private native com.badlogic.gdx.graphics.Color g9(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::CLEAR;}-*/;
  
  // com.badlogic.gdx.graphics.Color#WHITE
  private native com.badlogic.gdx.graphics.Color g11(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::WHITE;}-*/;
  
  // com.badlogic.gdx.graphics.Color#BLACK
  private native com.badlogic.gdx.graphics.Color g13(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::BLACK;}-*/;
  
  // com.badlogic.gdx.graphics.Color#RED
  private native com.badlogic.gdx.graphics.Color g15(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::RED;}-*/;
  
  // com.badlogic.gdx.graphics.Color#GREEN
  private native com.badlogic.gdx.graphics.Color g17(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::GREEN;}-*/;
  
  // com.badlogic.gdx.graphics.Color#BLUE
  private native com.badlogic.gdx.graphics.Color g19(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::BLUE;}-*/;
  
  // com.badlogic.gdx.graphics.Color#LIGHT_GRAY
  private native com.badlogic.gdx.graphics.Color g21(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::LIGHT_GRAY;}-*/;
  
  // com.badlogic.gdx.graphics.Color#GRAY
  private native com.badlogic.gdx.graphics.Color g23(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::GRAY;}-*/;
  
  // com.badlogic.gdx.graphics.Color#DARK_GRAY
  private native com.badlogic.gdx.graphics.Color g25(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::DARK_GRAY;}-*/;
  
  // com.badlogic.gdx.graphics.Color#PINK
  private native com.badlogic.gdx.graphics.Color g27(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::PINK;}-*/;
  
  // com.badlogic.gdx.graphics.Color#ORANGE
  private native com.badlogic.gdx.graphics.Color g29(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::ORANGE;}-*/;
  
  // com.badlogic.gdx.graphics.Color#YELLOW
  private native com.badlogic.gdx.graphics.Color g31(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::YELLOW;}-*/;
  
  // com.badlogic.gdx.graphics.Color#MAGENTA
  private native com.badlogic.gdx.graphics.Color g33(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::MAGENTA;}-*/;
  
  // com.badlogic.gdx.graphics.Color#CYAN
  private native com.badlogic.gdx.graphics.Color g35(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::CYAN;}-*/;
  
  // com.badlogic.gdx.graphics.Color#tmp
  private native com.badlogic.gdx.graphics.Color g37(com.badlogic.gdx.graphics.Color obj) /*-{return @com.badlogic.gdx.graphics.Color::tmp;}-*/;
  private native void s36(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color value)  /*-{@com.badlogic.gdx.graphics.Color::tmp = value}-*/;
  
  // com.badlogic.gdx.graphics.Color#r
  private native float g39(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::r;}-*/;
  private native void s38(com.badlogic.gdx.graphics.Color obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.Color::r = value;}-*/;
  
  // com.badlogic.gdx.graphics.Color#g
  private native float g41(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::g;}-*/;
  private native void s40(com.badlogic.gdx.graphics.Color obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.Color::g = value;}-*/;
  
  // com.badlogic.gdx.graphics.Color#b
  private native float g43(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::b;}-*/;
  private native void s42(com.badlogic.gdx.graphics.Color obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.Color::b = value;}-*/;
  
  // com.badlogic.gdx.graphics.Color#a
  private native float g45(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::a;}-*/;
  private native void s44(com.badlogic.gdx.graphics.Color obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.Color::a = value;}-*/;
  
  // com.badlogic.gdx.graphics.Texture#assetManager
  private native com.badlogic.gdx.assets.AssetManager g91(com.badlogic.gdx.graphics.Texture obj) /*-{return @com.badlogic.gdx.graphics.Texture::assetManager;}-*/;
  private native void s90(com.badlogic.gdx.graphics.Texture obj, com.badlogic.gdx.assets.AssetManager value)  /*-{@com.badlogic.gdx.graphics.Texture::assetManager = value}-*/;
  
  // com.badlogic.gdx.graphics.Texture#managedTextures
  private native java.util.Map g93(com.badlogic.gdx.graphics.Texture obj) /*-{return @com.badlogic.gdx.graphics.Texture::managedTextures;}-*/;
  
  // com.badlogic.gdx.graphics.Texture#data
  private native com.badlogic.gdx.graphics.TextureData g95(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::data;}-*/;
  private native void s94(com.badlogic.gdx.graphics.Texture obj, com.badlogic.gdx.graphics.TextureData value)  /*-{obj.@com.badlogic.gdx.graphics.Texture::data = value;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#Nearest
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g122(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::Nearest;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#Linear
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g124(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::Linear;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#MipMap
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g126(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::MipMap;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#MipMapNearestNearest
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g128(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::MipMapNearestNearest;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#MipMapLinearNearest
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g130(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::MipMapLinearNearest;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#MipMapNearestLinear
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g132(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::MipMapNearestLinear;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#MipMapLinearLinear
  private native com.badlogic.gdx.graphics.Texture.TextureFilter g134(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::MipMapLinearLinear;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureFilter#glEnum
  private native int g136(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture.TextureFilter::glEnum;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureWrap#MirroredRepeat
  private native com.badlogic.gdx.graphics.Texture.TextureWrap g144(com.badlogic.gdx.graphics.Texture.TextureWrap obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureWrap::MirroredRepeat;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureWrap#ClampToEdge
  private native com.badlogic.gdx.graphics.Texture.TextureWrap g146(com.badlogic.gdx.graphics.Texture.TextureWrap obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureWrap::ClampToEdge;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureWrap#Repeat
  private native com.badlogic.gdx.graphics.Texture.TextureWrap g148(com.badlogic.gdx.graphics.Texture.TextureWrap obj) /*-{return @com.badlogic.gdx.graphics.Texture.TextureWrap::Repeat;}-*/;
  
  // com.badlogic.gdx.graphics.Texture.TextureWrap#glEnum
  private native int g150(com.badlogic.gdx.graphics.Texture.TextureWrap obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture.TextureWrap::glEnum;}-*/;
  
  // com.badlogic.gdx.graphics.TextureData.TextureDataType#Pixmap
  private native com.badlogic.gdx.graphics.TextureData.TextureDataType g158(com.badlogic.gdx.graphics.TextureData.TextureDataType obj) /*-{return @com.badlogic.gdx.graphics.TextureData.TextureDataType::Pixmap;}-*/;
  
  // com.badlogic.gdx.graphics.TextureData.TextureDataType#Compressed
  private native com.badlogic.gdx.graphics.TextureData.TextureDataType g160(com.badlogic.gdx.graphics.TextureData.TextureDataType obj) /*-{return @com.badlogic.gdx.graphics.TextureData.TextureDataType::Compressed;}-*/;
  
  // com.badlogic.gdx.graphics.TextureData.TextureDataType#Float
  private native com.badlogic.gdx.graphics.TextureData.TextureDataType g162(com.badlogic.gdx.graphics.TextureData.TextureDataType obj) /*-{return @com.badlogic.gdx.graphics.TextureData.TextureDataType::Float;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#usage
  private native int g168(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::usage;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#numComponents
  private native int g170(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::numComponents;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#offset
  private native int g172(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::offset;}-*/;
  private native void s171(com.badlogic.gdx.graphics.VertexAttribute obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.VertexAttribute::offset = value;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#alias
  private native java.lang.String g174(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::alias;}-*/;
  private native void s173(com.badlogic.gdx.graphics.VertexAttribute obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.VertexAttribute::alias = value;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#unit
  private native int g176(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::unit;}-*/;
  private native void s175(com.badlogic.gdx.graphics.VertexAttribute obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.VertexAttribute::unit = value;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttribute#usageIndex
  private native int g178(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::usageIndex;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes#attributes
  private native com.badlogic.gdx.graphics.VertexAttribute[] g195(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::attributes;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes#vertexSize
  private native int g197(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::vertexSize;}-*/;
  
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#Position
  private native int g215(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::Position;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#Color
  private native int g217(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::Color;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#ColorPacked
  private native int g219(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::ColorPacked;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#Normal
  private native int g221(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::Normal;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#TextureCoordinates
  private native int g223(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::TextureCoordinates;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#Generic
  private native int g225(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::Generic;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#BoneWeight
  private native int g227(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::BoneWeight;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#Tangent
  private native int g229(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::Tangent;}-*/;
  
  // com.badlogic.gdx.graphics.VertexAttributes.Usage#BiNormal
  private native int g231(com.badlogic.gdx.graphics.VertexAttributes.Usage obj) /*-{return @com.badlogic.gdx.graphics.VertexAttributes.Usage::BiNormal;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#LOG2_PAGE_SIZE
  private native int g235(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::LOG2_PAGE_SIZE;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#PAGE_SIZE
  private native int g237(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::PAGE_SIZE;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#PAGES
  private native int g239(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::PAGES;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#xChars
  private native char[] g241(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::xChars;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#capChars
  private native char[] g243(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::capChars;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#data
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData g245(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::data;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#regions
  private native com.badlogic.gdx.graphics.g2d.TextureRegion[] g247(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::regions;}-*/;
  private native void s246(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.TextureRegion[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::regions = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#cache
  private native com.badlogic.gdx.graphics.g2d.BitmapFontCache g249(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::cache;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#flipped
  private native boolean g251(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::flipped;}-*/;
  private native void s250(com.badlogic.gdx.graphics.g2d.BitmapFont obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::flipped = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#integer
  private native boolean g253(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::integer;}-*/;
  private native void s252(com.badlogic.gdx.graphics.g2d.BitmapFont obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::integer = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont#ownsTexture
  private native boolean g255(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::ownsTexture;}-*/;
  private native void s254(com.badlogic.gdx.graphics.g2d.BitmapFont obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::ownsTexture = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#imagePath
  private native java.lang.String g315(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::imagePath;}-*/;
  private native void s314(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::imagePath = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#imagePaths
  private native java.lang.String[] g317(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::imagePaths;}-*/;
  private native void s316(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, java.lang.String[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::imagePaths = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#fontFile
  private native com.badlogic.gdx.files.FileHandle g319(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::fontFile;}-*/;
  private native void s318(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, com.badlogic.gdx.files.FileHandle value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::fontFile = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#flipped
  private native boolean g321(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::flipped;}-*/;
  private native void s320(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::flipped = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#lineHeight
  private native float g323(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::lineHeight;}-*/;
  private native void s322(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::lineHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#capHeight
  private native float g325(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::capHeight;}-*/;
  private native void s324(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::capHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#ascent
  private native float g327(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::ascent;}-*/;
  private native void s326(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::ascent = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#descent
  private native float g329(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::descent;}-*/;
  private native void s328(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::descent = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#down
  private native float g331(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::down;}-*/;
  private native void s330(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::down = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#scaleX
  private native float g333(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::scaleX;}-*/;
  private native void s332(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::scaleX = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#scaleY
  private native float g335(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::scaleY;}-*/;
  private native void s334(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::scaleY = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#glyphs
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][] g337(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::glyphs;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#spaceWidth
  private native float g339(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::spaceWidth;}-*/;
  private native void s338(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::spaceWidth = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData#xHeight
  private native float g341(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::xHeight;}-*/;
  private native void s340(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::xHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#id
  private native int g353(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::id;}-*/;
  private native void s352(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#srcX
  private native int g355(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::srcX;}-*/;
  private native void s354(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::srcX = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#srcY
  private native int g357(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::srcY;}-*/;
  private native void s356(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::srcY = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#width
  private native int g359(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::width;}-*/;
  private native void s358(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::width = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#height
  private native int g361(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::height;}-*/;
  private native void s360(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::height = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#u
  private native float g363(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::u;}-*/;
  private native void s362(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::u = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#v
  private native float g365(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::v;}-*/;
  private native void s364(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::v = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#u2
  private native float g367(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::u2;}-*/;
  private native void s366(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::u2 = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#v2
  private native float g369(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::v2;}-*/;
  private native void s368(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::v2 = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#xoffset
  private native int g371(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::xoffset;}-*/;
  private native void s370(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::xoffset = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#yoffset
  private native int g373(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::yoffset;}-*/;
  private native void s372(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::yoffset = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#xadvance
  private native int g375(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::xadvance;}-*/;
  private native void s374(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::xadvance = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#kerning
  private native byte[][] g377(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::kerning;}-*/;
  private native void s376(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, byte[][] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::kerning = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph#page
  private native int g379(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::page;}-*/;
  private native void s378(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::page = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment#LEFT
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment g386(com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment::LEFT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment#CENTER
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment g388(com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment::CENTER;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment#RIGHT
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment g390(com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment obj) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment::RIGHT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds#width
  private native float g396(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds::width;}-*/;
  private native void s395(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds::width = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds#height
  private native float g398(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds::height;}-*/;
  private native void s397(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds::height = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#font
  private native com.badlogic.gdx.graphics.g2d.BitmapFont g404(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::font;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#vertexData
  private native float[][] g406(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::vertexData;}-*/;
  private native void s405(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float[][] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::vertexData = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#idx
  private native int[] g408(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::idx;}-*/;
  private native void s407(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, int[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::idx = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#tmpGlyphCount
  private native int[] g410(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::tmpGlyphCount;}-*/;
  private native void s409(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, int[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::tmpGlyphCount = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#x
  private native float g412(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::x;}-*/;
  private native void s411(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::x = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#y
  private native float g414(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::y;}-*/;
  private native void s413(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::y = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#color
  private native float g416(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::color;}-*/;
  private native void s415(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::color = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#tempColor
  private native com.badlogic.gdx.graphics.Color g418(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::tempColor;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#textBounds
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds g420(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::textBounds;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#integer
  private native boolean g422(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::integer;}-*/;
  private native void s421(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::integer = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#glyphCount
  private native int g424(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::glyphCount;}-*/;
  private native void s423(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::glyphCount = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.BitmapFontCache#glyphIndices
  private native com.badlogic.gdx.utils.IntArray[] g426(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::glyphIndices;}-*/;
  private native void s425(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.utils.IntArray[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::glyphIndices = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#TOP_LEFT
  private native int g469(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::TOP_LEFT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#TOP_CENTER
  private native int g471(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::TOP_CENTER;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#TOP_RIGHT
  private native int g473(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::TOP_RIGHT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#MIDDLE_LEFT
  private native int g475(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::MIDDLE_LEFT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#MIDDLE_CENTER
  private native int g477(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::MIDDLE_CENTER;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#MIDDLE_RIGHT
  private native int g479(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::MIDDLE_RIGHT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#BOTTOM_LEFT
  private native int g481(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::BOTTOM_LEFT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#BOTTOM_CENTER
  private native int g483(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::BOTTOM_CENTER;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#BOTTOM_RIGHT
  private native int g485(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::BOTTOM_RIGHT;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#tmpDrawColor
  private native com.badlogic.gdx.graphics.Color g487(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return @com.badlogic.gdx.graphics.g2d.NinePatch::tmpDrawColor;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#texture
  private native com.badlogic.gdx.graphics.Texture g489(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::texture;}-*/;
  private native void s488(com.badlogic.gdx.graphics.g2d.NinePatch obj, com.badlogic.gdx.graphics.Texture value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::texture = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#bottomLeft
  private native int g491(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomLeft;}-*/;
  private native void s490(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomLeft = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#bottomCenter
  private native int g493(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomCenter;}-*/;
  private native void s492(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomCenter = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#bottomRight
  private native int g495(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomRight;}-*/;
  private native void s494(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomRight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#middleLeft
  private native int g497(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleLeft;}-*/;
  private native void s496(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleLeft = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#middleCenter
  private native int g499(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleCenter;}-*/;
  private native void s498(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleCenter = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#middleRight
  private native int g501(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleRight;}-*/;
  private native void s500(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleRight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#topLeft
  private native int g503(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topLeft;}-*/;
  private native void s502(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topLeft = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#topCenter
  private native int g505(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topCenter;}-*/;
  private native void s504(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topCenter = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#topRight
  private native int g507(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topRight;}-*/;
  private native void s506(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topRight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#leftWidth
  private native float g509(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::leftWidth;}-*/;
  private native void s508(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::leftWidth = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#rightWidth
  private native float g511(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::rightWidth;}-*/;
  private native void s510(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::rightWidth = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#middleWidth
  private native float g513(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleWidth;}-*/;
  private native void s512(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleWidth = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#middleHeight
  private native float g515(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleHeight;}-*/;
  private native void s514(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::middleHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#topHeight
  private native float g517(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topHeight;}-*/;
  private native void s516(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::topHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#bottomHeight
  private native float g519(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomHeight;}-*/;
  private native void s518(com.badlogic.gdx.graphics.g2d.NinePatch obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::bottomHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#vertices
  private native float[] g521(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::vertices;}-*/;
  private native void s520(com.badlogic.gdx.graphics.g2d.NinePatch obj, float[] value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::vertices = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#idx
  private native int g523(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::idx;}-*/;
  private native void s522(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::idx = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#color
  private native com.badlogic.gdx.graphics.Color g525(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::color;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#padLeft
  private native int g527(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padLeft;}-*/;
  private native void s526(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padLeft = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#padRight
  private native int g529(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padRight;}-*/;
  private native void s528(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padRight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#padTop
  private native int g531(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padTop;}-*/;
  private native void s530(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padTop = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.NinePatch#padBottom
  private native int g533(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padBottom;}-*/;
  private native void s532(com.badlogic.gdx.graphics.g2d.NinePatch obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::padBottom = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#texture
  private native com.badlogic.gdx.graphics.Texture g575(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::texture;}-*/;
  private native void s574(com.badlogic.gdx.graphics.g2d.TextureRegion obj, com.badlogic.gdx.graphics.Texture value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::texture = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#u
  private native float g577(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::u;}-*/;
  private native void s576(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::u = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#v
  private native float g579(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::v;}-*/;
  private native void s578(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::v = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#u2
  private native float g581(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::u2;}-*/;
  private native void s580(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::u2 = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#v2
  private native float g583(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::v2;}-*/;
  private native void s582(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::v2 = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#regionWidth
  private native int g585(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::regionWidth;}-*/;
  private native void s584(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::regionWidth = value;}-*/;
  
  // com.badlogic.gdx.graphics.g2d.TextureRegion#regionHeight
  private native int g587(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::regionHeight;}-*/;
  private native void s586(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::regionHeight = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Animation#id
  private native java.lang.String g628(com.badlogic.gdx.graphics.g3d.model.Animation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Animation::id;}-*/;
  private native void s627(com.badlogic.gdx.graphics.g3d.model.Animation obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Animation::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Animation#duration
  private native float g630(com.badlogic.gdx.graphics.g3d.model.Animation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Animation::duration;}-*/;
  private native void s629(com.badlogic.gdx.graphics.g3d.model.Animation obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Animation::duration = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Animation#nodeAnimations
  private native com.badlogic.gdx.utils.Array g632(com.badlogic.gdx.graphics.g3d.model.Animation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Animation::nodeAnimations;}-*/;
  private native void s631(com.badlogic.gdx.graphics.g3d.model.Animation obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Animation::nodeAnimations = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.MeshPart#id
  private native java.lang.String g636(com.badlogic.gdx.graphics.g3d.model.MeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::id;}-*/;
  private native void s635(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.MeshPart#primitiveType
  private native int g638(com.badlogic.gdx.graphics.g3d.model.MeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::primitiveType;}-*/;
  private native void s637(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::primitiveType = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.MeshPart#indexOffset
  private native int g640(com.badlogic.gdx.graphics.g3d.model.MeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::indexOffset;}-*/;
  private native void s639(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::indexOffset = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.MeshPart#numVertices
  private native int g642(com.badlogic.gdx.graphics.g3d.model.MeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::numVertices;}-*/;
  private native void s641(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::numVertices = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.MeshPart#mesh
  private native com.badlogic.gdx.graphics.Mesh g644(com.badlogic.gdx.graphics.g3d.model.MeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::mesh;}-*/;
  private native void s643(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, com.badlogic.gdx.graphics.Mesh value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::mesh = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#id
  private native java.lang.String g652(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::id;}-*/;
  private native void s651(com.badlogic.gdx.graphics.g3d.model.Node obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#parent
  private native com.badlogic.gdx.graphics.g3d.model.Node g654(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::parent;}-*/;
  private native void s653(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.graphics.g3d.model.Node value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::parent = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#children
  private native com.badlogic.gdx.utils.Array g656(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::children;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#isAnimated
  private native boolean g658(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::isAnimated;}-*/;
  private native void s657(com.badlogic.gdx.graphics.g3d.model.Node obj, boolean value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::isAnimated = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#translation
  private native com.badlogic.gdx.math.Vector3 g660(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::translation;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#rotation
  private native com.badlogic.gdx.math.Quaternion g662(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::rotation;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#scale
  private native com.badlogic.gdx.math.Vector3 g664(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::scale;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#localTransform
  private native com.badlogic.gdx.math.Matrix4 g666(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::localTransform;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#globalTransform
  private native com.badlogic.gdx.math.Matrix4 g668(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::globalTransform;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.Node#parts
  private native com.badlogic.gdx.utils.Array g670(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::parts;}-*/;
  private native void s669(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::parts = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeAnimation#node
  private native com.badlogic.gdx.graphics.g3d.model.Node g684(com.badlogic.gdx.graphics.g3d.model.NodeAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeAnimation::node;}-*/;
  private native void s683(com.badlogic.gdx.graphics.g3d.model.NodeAnimation obj, com.badlogic.gdx.graphics.g3d.model.Node value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodeAnimation::node = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeAnimation#keyframes
  private native com.badlogic.gdx.utils.Array g686(com.badlogic.gdx.graphics.g3d.model.NodeAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeAnimation::keyframes;}-*/;
  private native void s685(com.badlogic.gdx.graphics.g3d.model.NodeAnimation obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodeAnimation::keyframes = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeKeyframe#keytime
  private native float g690(com.badlogic.gdx.graphics.g3d.model.NodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeKeyframe::keytime;}-*/;
  private native void s689(com.badlogic.gdx.graphics.g3d.model.NodeKeyframe obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodeKeyframe::keytime = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeKeyframe#translation
  private native com.badlogic.gdx.math.Vector3 g692(com.badlogic.gdx.graphics.g3d.model.NodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeKeyframe::translation;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeKeyframe#scale
  private native com.badlogic.gdx.math.Vector3 g694(com.badlogic.gdx.graphics.g3d.model.NodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeKeyframe::scale;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodeKeyframe#rotation
  private native com.badlogic.gdx.math.Quaternion g696(com.badlogic.gdx.graphics.g3d.model.NodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodeKeyframe::rotation;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodePart#meshPart
  private native com.badlogic.gdx.graphics.g3d.model.MeshPart g700(com.badlogic.gdx.graphics.g3d.model.NodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::meshPart;}-*/;
  private native void s699(com.badlogic.gdx.graphics.g3d.model.NodePart obj, com.badlogic.gdx.graphics.g3d.model.MeshPart value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::meshPart = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodePart#material
  private native com.badlogic.gdx.graphics.g3d.Material g702(com.badlogic.gdx.graphics.g3d.model.NodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::material;}-*/;
  private native void s701(com.badlogic.gdx.graphics.g3d.model.NodePart obj, com.badlogic.gdx.graphics.g3d.Material value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::material = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodePart#invBoneBindTransforms
  private native com.badlogic.gdx.utils.ArrayMap g704(com.badlogic.gdx.graphics.g3d.model.NodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::invBoneBindTransforms;}-*/;
  private native void s703(com.badlogic.gdx.graphics.g3d.model.NodePart obj, com.badlogic.gdx.utils.ArrayMap value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::invBoneBindTransforms = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.NodePart#bones
  private native com.badlogic.gdx.math.Matrix4[] g706(com.badlogic.gdx.graphics.g3d.model.NodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::bones;}-*/;
  private native void s705(com.badlogic.gdx.graphics.g3d.model.NodePart obj, com.badlogic.gdx.math.Matrix4[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::bones = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation#id
  private native java.lang.String g712(com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation::id;}-*/;
  private native void s711(com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation#nodeAnimations
  private native com.badlogic.gdx.utils.Array g714(com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation::nodeAnimations;}-*/;
  private native void s713(com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation::nodeAnimations = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#id
  private native java.lang.String g718(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::id;}-*/;
  private native void s717(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#version
  private native short[] g720(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::version;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#meshes
  private native com.badlogic.gdx.utils.Array g722(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::meshes;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#materials
  private native com.badlogic.gdx.utils.Array g724(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::materials;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#nodes
  private native com.badlogic.gdx.utils.Array g726(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::nodes;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelData#animations
  private native com.badlogic.gdx.utils.Array g728(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::animations;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#id
  private native java.lang.String g733(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::id;}-*/;
  private native void s732(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#type
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType g735(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::type;}-*/;
  private native void s734(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::type = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#ambient
  private native com.badlogic.gdx.graphics.Color g737(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::ambient;}-*/;
  private native void s736(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::ambient = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#diffuse
  private native com.badlogic.gdx.graphics.Color g739(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::diffuse;}-*/;
  private native void s738(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::diffuse = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#specular
  private native com.badlogic.gdx.graphics.Color g741(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::specular;}-*/;
  private native void s740(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::specular = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#emissive
  private native com.badlogic.gdx.graphics.Color g743(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::emissive;}-*/;
  private native void s742(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::emissive = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#reflection
  private native com.badlogic.gdx.graphics.Color g745(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::reflection;}-*/;
  private native void s744(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::reflection = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#shininess
  private native float g747(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::shininess;}-*/;
  private native void s746(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::shininess = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#opacity
  private native float g749(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::opacity;}-*/;
  private native void s748(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::opacity = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial#textures
  private native com.badlogic.gdx.utils.Array g751(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::textures;}-*/;
  private native void s750(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial::textures = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType#Lambert
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType g755(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType::Lambert;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType#Phong
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType g757(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType::Phong;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMesh#id
  private native java.lang.String g763(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::id;}-*/;
  private native void s762(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMesh#attributes
  private native com.badlogic.gdx.graphics.VertexAttribute[] g765(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::attributes;}-*/;
  private native void s764(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj, com.badlogic.gdx.graphics.VertexAttribute[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::attributes = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMesh#vertices
  private native float[] g767(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::vertices;}-*/;
  private native void s766(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj, float[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::vertices = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMesh#parts
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] g769(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::parts;}-*/;
  private native void s768(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh obj, com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMesh::parts = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart#id
  private native java.lang.String g773(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::id;}-*/;
  private native void s772(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart#indices
  private native short[] g775(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::indices;}-*/;
  private native void s774(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj, short[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::indices = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart#primitiveType
  private native int g777(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::primitiveType;}-*/;
  private native void s776(com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart::primitiveType = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#id
  private native java.lang.String g782(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::id;}-*/;
  private native void s781(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#boneId
  private native int g784(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::boneId;}-*/;
  private native void s783(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::boneId = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#translation
  private native com.badlogic.gdx.math.Vector3 g786(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::translation;}-*/;
  private native void s785(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, com.badlogic.gdx.math.Vector3 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::translation = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#rotation
  private native com.badlogic.gdx.math.Quaternion g788(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::rotation;}-*/;
  private native void s787(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, com.badlogic.gdx.math.Quaternion value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::rotation = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#scale
  private native com.badlogic.gdx.math.Vector3 g790(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::scale;}-*/;
  private native void s789(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, com.badlogic.gdx.math.Vector3 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::scale = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#meshId
  private native java.lang.String g792(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::meshId;}-*/;
  private native void s791(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::meshId = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#parts
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] g794(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::parts;}-*/;
  private native void s793(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::parts = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNode#children
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] g796(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::children;}-*/;
  private native void s795(com.badlogic.gdx.graphics.g3d.model.data.ModelNode obj, com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNode::children = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation#nodeId
  private native java.lang.String g800(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation::nodeId;}-*/;
  private native void s799(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation::nodeId = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation#keyframes
  private native com.badlogic.gdx.utils.Array g802(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation::keyframes;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe#keytime
  private native float g806(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::keytime;}-*/;
  private native void s805(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj, float value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::keytime = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe#translation
  private native com.badlogic.gdx.math.Vector3 g808(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::translation;}-*/;
  private native void s807(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj, com.badlogic.gdx.math.Vector3 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::translation = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe#scale
  private native com.badlogic.gdx.math.Vector3 g810(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::scale;}-*/;
  private native void s809(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj, com.badlogic.gdx.math.Vector3 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::scale = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe#rotation
  private native com.badlogic.gdx.math.Quaternion g812(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::rotation;}-*/;
  private native void s811(com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe obj, com.badlogic.gdx.math.Quaternion value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe::rotation = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart#materialId
  private native java.lang.String g816(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::materialId;}-*/;
  private native void s815(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::materialId = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart#meshPartId
  private native java.lang.String g818(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::meshPartId;}-*/;
  private native void s817(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::meshPartId = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart#bones
  private native com.badlogic.gdx.utils.ArrayMap g820(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::bones;}-*/;
  private native void s819(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj, com.badlogic.gdx.utils.ArrayMap value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::bones = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart#uvMapping
  private native int[][] g822(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::uvMapping;}-*/;
  private native void s821(com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart obj, int[][] value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart::uvMapping = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_UNKNOWN
  private native int g828(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_UNKNOWN;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_NONE
  private native int g830(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_NONE;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_DIFFUSE
  private native int g832(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_DIFFUSE;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_EMISSIVE
  private native int g834(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_EMISSIVE;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_AMBIENT
  private native int g836(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_AMBIENT;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_SPECULAR
  private native int g838(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_SPECULAR;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_SHININESS
  private native int g840(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_SHININESS;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_NORMAL
  private native int g842(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_NORMAL;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_BUMP
  private native int g844(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_BUMP;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_TRANSPARENCY
  private native int g846(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_TRANSPARENCY;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#USAGE_REFLECTION
  private native int g848(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::USAGE_REFLECTION;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#id
  private native java.lang.String g850(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::id;}-*/;
  private native void s849(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::id = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#fileName
  private native java.lang.String g852(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::fileName;}-*/;
  private native void s851(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::fileName = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#uvTranslation
  private native com.badlogic.gdx.math.Vector2 g854(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::uvTranslation;}-*/;
  private native void s853(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj, com.badlogic.gdx.math.Vector2 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::uvTranslation = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#uvScaling
  private native com.badlogic.gdx.math.Vector2 g856(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::uvScaling;}-*/;
  private native void s855(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj, com.badlogic.gdx.math.Vector2 value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::uvScaling = value;}-*/;
  
  // com.badlogic.gdx.graphics.g3d.model.data.ModelTexture#usage
  private native int g858(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::usage;}-*/;
  private native void s857(com.badlogic.gdx.graphics.g3d.model.data.ModelTexture obj, int value)  /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelTexture::usage = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#d6
  private native float g862(com.badlogic.gdx.math.BSpline obj) /*-{return @com.badlogic.gdx.math.BSpline::d6;}-*/;
  
  // com.badlogic.gdx.math.BSpline#controlPoints
  private native com.badlogic.gdx.math.Vector[] g864(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::controlPoints;}-*/;
  private native void s863(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector[] value)  /*-{obj.@com.badlogic.gdx.math.BSpline::controlPoints = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#knots
  private native com.badlogic.gdx.utils.Array g866(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::knots;}-*/;
  private native void s865(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.math.BSpline::knots = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#degree
  private native int g868(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::degree;}-*/;
  private native void s867(com.badlogic.gdx.math.BSpline obj, int value)  /*-{obj.@com.badlogic.gdx.math.BSpline::degree = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#continuous
  private native boolean g870(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::continuous;}-*/;
  private native void s869(com.badlogic.gdx.math.BSpline obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.BSpline::continuous = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#spanCount
  private native int g872(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::spanCount;}-*/;
  private native void s871(com.badlogic.gdx.math.BSpline obj, int value)  /*-{obj.@com.badlogic.gdx.math.BSpline::spanCount = value;}-*/;
  
  // com.badlogic.gdx.math.BSpline#tmp
  private native com.badlogic.gdx.math.Vector g874(com.badlogic.gdx.math.BSpline obj) /*-{return obj.@com.badlogic.gdx.math.BSpline::tmp;}-*/;
  private native void s873(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector value)  /*-{obj.@com.badlogic.gdx.math.BSpline::tmp = value;}-*/;
  
  // com.badlogic.gdx.math.Bezier#points
  private native com.badlogic.gdx.utils.Array g898(com.badlogic.gdx.math.Bezier obj) /*-{return obj.@com.badlogic.gdx.math.Bezier::points;}-*/;
  private native void s897(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.math.Bezier::points = value;}-*/;
  
  // com.badlogic.gdx.math.Bezier#tmp
  private native com.badlogic.gdx.math.Vector g900(com.badlogic.gdx.math.Bezier obj) /*-{return obj.@com.badlogic.gdx.math.Bezier::tmp;}-*/;
  private native void s899(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector value)  /*-{obj.@com.badlogic.gdx.math.Bezier::tmp = value;}-*/;
  
  // com.badlogic.gdx.math.Bresenham2#points
  private native com.badlogic.gdx.utils.Array g920(com.badlogic.gdx.math.Bresenham2 obj) /*-{return obj.@com.badlogic.gdx.math.Bresenham2::points;}-*/;
  
  // com.badlogic.gdx.math.Bresenham2#pool
  private native com.badlogic.gdx.utils.Pool g922(com.badlogic.gdx.math.Bresenham2 obj) /*-{return obj.@com.badlogic.gdx.math.Bresenham2::pool;}-*/;
  
  // com.badlogic.gdx.math.CatmullRomSpline#controlPoints
  private native com.badlogic.gdx.math.Vector[] g929(com.badlogic.gdx.math.CatmullRomSpline obj) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::controlPoints;}-*/;
  private native void s928(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector[] value)  /*-{obj.@com.badlogic.gdx.math.CatmullRomSpline::controlPoints = value;}-*/;
  
  // com.badlogic.gdx.math.CatmullRomSpline#continuous
  private native boolean g931(com.badlogic.gdx.math.CatmullRomSpline obj) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::continuous;}-*/;
  private native void s930(com.badlogic.gdx.math.CatmullRomSpline obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.CatmullRomSpline::continuous = value;}-*/;
  
  // com.badlogic.gdx.math.CatmullRomSpline#spanCount
  private native int g933(com.badlogic.gdx.math.CatmullRomSpline obj) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::spanCount;}-*/;
  private native void s932(com.badlogic.gdx.math.CatmullRomSpline obj, int value)  /*-{obj.@com.badlogic.gdx.math.CatmullRomSpline::spanCount = value;}-*/;
  
  // com.badlogic.gdx.math.CatmullRomSpline#tmp
  private native com.badlogic.gdx.math.Vector g935(com.badlogic.gdx.math.CatmullRomSpline obj) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::tmp;}-*/;
  private native void s934(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector value)  /*-{obj.@com.badlogic.gdx.math.CatmullRomSpline::tmp = value;}-*/;
  
  // com.badlogic.gdx.math.CatmullRomSpline#tmp2
  private native com.badlogic.gdx.math.Vector g937(com.badlogic.gdx.math.CatmullRomSpline obj) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::tmp2;}-*/;
  private native void s936(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector value)  /*-{obj.@com.badlogic.gdx.math.CatmullRomSpline::tmp2 = value;}-*/;
  
  // com.badlogic.gdx.math.Circle#x
  private native float g957(com.badlogic.gdx.math.Circle obj) /*-{return obj.@com.badlogic.gdx.math.Circle::x;}-*/;
  private native void s956(com.badlogic.gdx.math.Circle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Circle::x = value;}-*/;
  
  // com.badlogic.gdx.math.Circle#y
  private native float g959(com.badlogic.gdx.math.Circle obj) /*-{return obj.@com.badlogic.gdx.math.Circle::y;}-*/;
  private native void s958(com.badlogic.gdx.math.Circle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Circle::y = value;}-*/;
  
  // com.badlogic.gdx.math.Circle#radius
  private native float g961(com.badlogic.gdx.math.Circle obj) /*-{return obj.@com.badlogic.gdx.math.Circle::radius;}-*/;
  private native void s960(com.badlogic.gdx.math.Circle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Circle::radius = value;}-*/;
  
  // com.badlogic.gdx.math.ConvexHull#quicksortStack
  private native com.badlogic.gdx.utils.IntArray g981(com.badlogic.gdx.math.ConvexHull obj) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::quicksortStack;}-*/;
  
  // com.badlogic.gdx.math.ConvexHull#sortedPoints
  private native float[] g983(com.badlogic.gdx.math.ConvexHull obj) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::sortedPoints;}-*/;
  private native void s982(com.badlogic.gdx.math.ConvexHull obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.ConvexHull::sortedPoints = value;}-*/;
  
  // com.badlogic.gdx.math.ConvexHull#hull
  private native com.badlogic.gdx.utils.FloatArray g985(com.badlogic.gdx.math.ConvexHull obj) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::hull;}-*/;
  
  // com.badlogic.gdx.math.ConvexHull#indices
  private native com.badlogic.gdx.utils.IntArray g987(com.badlogic.gdx.math.ConvexHull obj) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::indices;}-*/;
  
  // com.badlogic.gdx.math.ConvexHull#originalIndices
  private native com.badlogic.gdx.utils.ShortArray g989(com.badlogic.gdx.math.ConvexHull obj) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::originalIndices;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#EPSILON
  private native float g1004(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return @com.badlogic.gdx.math.DelaunayTriangulator::EPSILON;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#INSIDE
  private native int g1006(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return @com.badlogic.gdx.math.DelaunayTriangulator::INSIDE;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#COMPLETE
  private native int g1008(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return @com.badlogic.gdx.math.DelaunayTriangulator::COMPLETE;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#INCOMPLETE
  private native int g1010(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return @com.badlogic.gdx.math.DelaunayTriangulator::INCOMPLETE;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#quicksortStack
  private native com.badlogic.gdx.utils.IntArray g1012(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::quicksortStack;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#sortedPoints
  private native float[] g1014(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::sortedPoints;}-*/;
  private native void s1013(com.badlogic.gdx.math.DelaunayTriangulator obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.DelaunayTriangulator::sortedPoints = value;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#triangles
  private native com.badlogic.gdx.utils.ShortArray g1016(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::triangles;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#originalIndices
  private native com.badlogic.gdx.utils.ShortArray g1018(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::originalIndices;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#edges
  private native com.badlogic.gdx.utils.IntArray g1020(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::edges;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#complete
  private native com.badlogic.gdx.utils.BooleanArray g1022(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::complete;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#superTriangle
  private native float[] g1024(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::superTriangle;}-*/;
  
  // com.badlogic.gdx.math.DelaunayTriangulator#centroid
  private native com.badlogic.gdx.math.Vector2 g1026(com.badlogic.gdx.math.DelaunayTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::centroid;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#CONCAVE
  private native int g1037(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return @com.badlogic.gdx.math.EarClippingTriangulator::CONCAVE;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#TANGENTIAL
  private native int g1039(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return @com.badlogic.gdx.math.EarClippingTriangulator::TANGENTIAL;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#CONVEX
  private native int g1041(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return @com.badlogic.gdx.math.EarClippingTriangulator::CONVEX;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#indicesArray
  private native com.badlogic.gdx.utils.ShortArray g1043(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::indicesArray;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#indices
  private native short[] g1045(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::indices;}-*/;
  private native void s1044(com.badlogic.gdx.math.EarClippingTriangulator obj, short[] value)  /*-{obj.@com.badlogic.gdx.math.EarClippingTriangulator::indices = value;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#vertices
  private native float[] g1047(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::vertices;}-*/;
  private native void s1046(com.badlogic.gdx.math.EarClippingTriangulator obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.EarClippingTriangulator::vertices = value;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#vertexCount
  private native int g1049(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::vertexCount;}-*/;
  private native void s1048(com.badlogic.gdx.math.EarClippingTriangulator obj, int value)  /*-{obj.@com.badlogic.gdx.math.EarClippingTriangulator::vertexCount = value;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#vertexTypes
  private native com.badlogic.gdx.utils.IntArray g1051(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::vertexTypes;}-*/;
  
  // com.badlogic.gdx.math.EarClippingTriangulator#triangles
  private native com.badlogic.gdx.utils.ShortArray g1053(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::triangles;}-*/;
  
  // com.badlogic.gdx.math.Ellipse#x
  private native float g1069(com.badlogic.gdx.math.Ellipse obj) /*-{return obj.@com.badlogic.gdx.math.Ellipse::x;}-*/;
  private native void s1068(com.badlogic.gdx.math.Ellipse obj, float value)  /*-{obj.@com.badlogic.gdx.math.Ellipse::x = value;}-*/;
  
  // com.badlogic.gdx.math.Ellipse#y
  private native float g1071(com.badlogic.gdx.math.Ellipse obj) /*-{return obj.@com.badlogic.gdx.math.Ellipse::y;}-*/;
  private native void s1070(com.badlogic.gdx.math.Ellipse obj, float value)  /*-{obj.@com.badlogic.gdx.math.Ellipse::y = value;}-*/;
  
  // com.badlogic.gdx.math.Ellipse#width
  private native float g1073(com.badlogic.gdx.math.Ellipse obj) /*-{return obj.@com.badlogic.gdx.math.Ellipse::width;}-*/;
  private native void s1072(com.badlogic.gdx.math.Ellipse obj, float value)  /*-{obj.@com.badlogic.gdx.math.Ellipse::width = value;}-*/;
  
  // com.badlogic.gdx.math.Ellipse#height
  private native float g1075(com.badlogic.gdx.math.Ellipse obj) /*-{return obj.@com.badlogic.gdx.math.Ellipse::height;}-*/;
  private native void s1074(com.badlogic.gdx.math.Ellipse obj, float value)  /*-{obj.@com.badlogic.gdx.math.Ellipse::height = value;}-*/;
  
  
  // com.badlogic.gdx.math.FloatCounter#count
  private native int g1091(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::count;}-*/;
  private native void s1090(com.badlogic.gdx.math.FloatCounter obj, int value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::count = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#total
  private native float g1093(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::total;}-*/;
  private native void s1092(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::total = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#min
  private native float g1095(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::min;}-*/;
  private native void s1094(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::min = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#max
  private native float g1097(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::max;}-*/;
  private native void s1096(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::max = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#average
  private native float g1099(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::average;}-*/;
  private native void s1098(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::average = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#latest
  private native float g1101(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::latest;}-*/;
  private native void s1100(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::latest = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#value
  private native float g1103(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::value;}-*/;
  private native void s1102(com.badlogic.gdx.math.FloatCounter obj, float value)  /*-{obj.@com.badlogic.gdx.math.FloatCounter::value = value;}-*/;
  
  // com.badlogic.gdx.math.FloatCounter#mean
  private native com.badlogic.gdx.math.WindowedMean g1105(com.badlogic.gdx.math.FloatCounter obj) /*-{return obj.@com.badlogic.gdx.math.FloatCounter::mean;}-*/;
  
  // com.badlogic.gdx.math.Frustum#clipSpacePlanePoints
  private native com.badlogic.gdx.math.Vector3[] g1111(com.badlogic.gdx.math.Frustum obj) /*-{return @com.badlogic.gdx.math.Frustum::clipSpacePlanePoints;}-*/;
  
  // com.badlogic.gdx.math.Frustum#clipSpacePlanePointsArray
  private native float[] g1113(com.badlogic.gdx.math.Frustum obj) /*-{return @com.badlogic.gdx.math.Frustum::clipSpacePlanePointsArray;}-*/;
  
  // com.badlogic.gdx.math.Frustum#planes
  private native com.badlogic.gdx.math.Plane[] g1115(com.badlogic.gdx.math.Frustum obj) /*-{return obj.@com.badlogic.gdx.math.Frustum::planes;}-*/;
  
  // com.badlogic.gdx.math.Frustum#planePoints
  private native com.badlogic.gdx.math.Vector3[] g1117(com.badlogic.gdx.math.Frustum obj) /*-{return obj.@com.badlogic.gdx.math.Frustum::planePoints;}-*/;
  
  // com.badlogic.gdx.math.Frustum#planePointsArray
  private native float[] g1119(com.badlogic.gdx.math.Frustum obj) /*-{return obj.@com.badlogic.gdx.math.Frustum::planePointsArray;}-*/;
  
  // com.badlogic.gdx.math.GeometryUtils#tmp1
  private native com.badlogic.gdx.math.Vector2 g1133(com.badlogic.gdx.math.GeometryUtils obj) /*-{return @com.badlogic.gdx.math.GeometryUtils::tmp1;}-*/;
  
  // com.badlogic.gdx.math.GeometryUtils#tmp2
  private native com.badlogic.gdx.math.Vector2 g1135(com.badlogic.gdx.math.GeometryUtils obj) /*-{return @com.badlogic.gdx.math.GeometryUtils::tmp2;}-*/;
  
  // com.badlogic.gdx.math.GeometryUtils#tmp3
  private native com.badlogic.gdx.math.Vector2 g1137(com.badlogic.gdx.math.GeometryUtils obj) /*-{return @com.badlogic.gdx.math.GeometryUtils::tmp3;}-*/;
  
  // com.badlogic.gdx.math.GridPoint2#x
  private native int g1151(com.badlogic.gdx.math.GridPoint2 obj) /*-{return obj.@com.badlogic.gdx.math.GridPoint2::x;}-*/;
  private native void s1150(com.badlogic.gdx.math.GridPoint2 obj, int value)  /*-{obj.@com.badlogic.gdx.math.GridPoint2::x = value;}-*/;
  
  // com.badlogic.gdx.math.GridPoint2#y
  private native int g1153(com.badlogic.gdx.math.GridPoint2 obj) /*-{return obj.@com.badlogic.gdx.math.GridPoint2::y;}-*/;
  private native void s1152(com.badlogic.gdx.math.GridPoint2 obj, int value)  /*-{obj.@com.badlogic.gdx.math.GridPoint2::y = value;}-*/;
  
  // com.badlogic.gdx.math.GridPoint3#x
  private native int g1161(com.badlogic.gdx.math.GridPoint3 obj) /*-{return obj.@com.badlogic.gdx.math.GridPoint3::x;}-*/;
  private native void s1160(com.badlogic.gdx.math.GridPoint3 obj, int value)  /*-{obj.@com.badlogic.gdx.math.GridPoint3::x = value;}-*/;
  
  // com.badlogic.gdx.math.GridPoint3#y
  private native int g1163(com.badlogic.gdx.math.GridPoint3 obj) /*-{return obj.@com.badlogic.gdx.math.GridPoint3::y;}-*/;
  private native void s1162(com.badlogic.gdx.math.GridPoint3 obj, int value)  /*-{obj.@com.badlogic.gdx.math.GridPoint3::y = value;}-*/;
  
  // com.badlogic.gdx.math.GridPoint3#z
  private native int g1165(com.badlogic.gdx.math.GridPoint3 obj) /*-{return obj.@com.badlogic.gdx.math.GridPoint3::z;}-*/;
  private native void s1164(com.badlogic.gdx.math.GridPoint3 obj, int value)  /*-{obj.@com.badlogic.gdx.math.GridPoint3::z = value;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#linear
  private native com.badlogic.gdx.math.Interpolation g1173(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::linear;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#fade
  private native com.badlogic.gdx.math.Interpolation g1175(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::fade;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow2
  private native com.badlogic.gdx.math.Interpolation.Pow g1177(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow2;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow2In
  private native com.badlogic.gdx.math.Interpolation.PowIn g1179(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow2In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow2Out
  private native com.badlogic.gdx.math.Interpolation.PowOut g1181(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow2Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow3
  private native com.badlogic.gdx.math.Interpolation.Pow g1183(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow3;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow3In
  private native com.badlogic.gdx.math.Interpolation.PowIn g1185(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow3In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow3Out
  private native com.badlogic.gdx.math.Interpolation.PowOut g1187(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow3Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow4
  private native com.badlogic.gdx.math.Interpolation.Pow g1189(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow4;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow4In
  private native com.badlogic.gdx.math.Interpolation.PowIn g1191(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow4In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow4Out
  private native com.badlogic.gdx.math.Interpolation.PowOut g1193(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow4Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow5
  private native com.badlogic.gdx.math.Interpolation.Pow g1195(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow5;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow5In
  private native com.badlogic.gdx.math.Interpolation.PowIn g1197(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow5In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#pow5Out
  private native com.badlogic.gdx.math.Interpolation.PowOut g1199(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::pow5Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#sine
  private native com.badlogic.gdx.math.Interpolation g1201(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::sine;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#sineIn
  private native com.badlogic.gdx.math.Interpolation g1203(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::sineIn;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#sineOut
  private native com.badlogic.gdx.math.Interpolation g1205(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::sineOut;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp10
  private native com.badlogic.gdx.math.Interpolation g1207(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp10;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp10In
  private native com.badlogic.gdx.math.Interpolation g1209(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp10In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp10Out
  private native com.badlogic.gdx.math.Interpolation g1211(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp10Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp5
  private native com.badlogic.gdx.math.Interpolation g1213(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp5;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp5In
  private native com.badlogic.gdx.math.Interpolation g1215(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp5In;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#exp5Out
  private native com.badlogic.gdx.math.Interpolation g1217(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::exp5Out;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#circle
  private native com.badlogic.gdx.math.Interpolation g1219(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::circle;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#circleIn
  private native com.badlogic.gdx.math.Interpolation g1221(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::circleIn;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#circleOut
  private native com.badlogic.gdx.math.Interpolation g1223(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::circleOut;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#elastic
  private native com.badlogic.gdx.math.Interpolation.Elastic g1225(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::elastic;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#elasticIn
  private native com.badlogic.gdx.math.Interpolation.Elastic g1227(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::elasticIn;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#elasticOut
  private native com.badlogic.gdx.math.Interpolation.Elastic g1229(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::elasticOut;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#swing
  private native com.badlogic.gdx.math.Interpolation g1231(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::swing;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#swingIn
  private native com.badlogic.gdx.math.Interpolation g1233(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::swingIn;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#swingOut
  private native com.badlogic.gdx.math.Interpolation g1235(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::swingOut;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#bounce
  private native com.badlogic.gdx.math.Interpolation g1237(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::bounce;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#bounceIn
  private native com.badlogic.gdx.math.Interpolation g1239(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::bounceIn;}-*/;
  
  // com.badlogic.gdx.math.Interpolation#bounceOut
  private native com.badlogic.gdx.math.Interpolation g1241(com.badlogic.gdx.math.Interpolation obj) /*-{return @com.badlogic.gdx.math.Interpolation::bounceOut;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.BounceOut#widths
  private native float[] g1255(com.badlogic.gdx.math.Interpolation.BounceOut obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.BounceOut::widths;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.BounceOut#heights
  private native float[] g1257(com.badlogic.gdx.math.Interpolation.BounceOut obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.BounceOut::heights;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Elastic#value
  private native float g1263(com.badlogic.gdx.math.Interpolation.Elastic obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Elastic::value;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Elastic#power
  private native float g1265(com.badlogic.gdx.math.Interpolation.Elastic obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Elastic::power;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Exp#value
  private native float g1276(com.badlogic.gdx.math.Interpolation.Exp obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Exp::value;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Exp#power
  private native float g1278(com.badlogic.gdx.math.Interpolation.Exp obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Exp::power;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Exp#min
  private native float g1280(com.badlogic.gdx.math.Interpolation.Exp obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Exp::min;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Exp#scale
  private native float g1282(com.badlogic.gdx.math.Interpolation.Exp obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Exp::scale;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Pow#power
  private native int g1293(com.badlogic.gdx.math.Interpolation.Pow obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Pow::power;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.Swing#scale
  private native float g1304(com.badlogic.gdx.math.Interpolation.Swing obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Swing::scale;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.SwingIn#scale
  private native float g1309(com.badlogic.gdx.math.Interpolation.SwingIn obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.SwingIn::scale;}-*/;
  
  // com.badlogic.gdx.math.Interpolation.SwingOut#scale
  private native float g1314(com.badlogic.gdx.math.Interpolation.SwingOut obj) /*-{return obj.@com.badlogic.gdx.math.Interpolation.SwingOut::scale;}-*/;
  
  // com.badlogic.gdx.math.Intersector#v0
  private native com.badlogic.gdx.math.Vector3 g1319(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::v0;}-*/;
  
  // com.badlogic.gdx.math.Intersector#v1
  private native com.badlogic.gdx.math.Vector3 g1321(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::v1;}-*/;
  
  // com.badlogic.gdx.math.Intersector#v2
  private native com.badlogic.gdx.math.Vector3 g1323(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::v2;}-*/;
  
  // com.badlogic.gdx.math.Intersector#p
  private native com.badlogic.gdx.math.Plane g1325(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::p;}-*/;
  
  // com.badlogic.gdx.math.Intersector#i
  private native com.badlogic.gdx.math.Vector3 g1327(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::i;}-*/;
  
  // com.badlogic.gdx.math.Intersector#dir
  private native com.badlogic.gdx.math.Vector3 g1329(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::dir;}-*/;
  
  // com.badlogic.gdx.math.Intersector#start
  private native com.badlogic.gdx.math.Vector3 g1331(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::start;}-*/;
  
  // com.badlogic.gdx.math.Intersector#best
  private native com.badlogic.gdx.math.Vector3 g1333(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::best;}-*/;
  private native void s1332(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::best = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#tmp
  private native com.badlogic.gdx.math.Vector3 g1335(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::tmp;}-*/;
  private native void s1334(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::tmp = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#tmp1
  private native com.badlogic.gdx.math.Vector3 g1337(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::tmp1;}-*/;
  private native void s1336(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::tmp1 = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#tmp2
  private native com.badlogic.gdx.math.Vector3 g1339(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::tmp2;}-*/;
  private native void s1338(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::tmp2 = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#tmp3
  private native com.badlogic.gdx.math.Vector3 g1341(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::tmp3;}-*/;
  private native void s1340(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::tmp3 = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#v2tmp
  private native com.badlogic.gdx.math.Vector2 g1343(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::v2tmp;}-*/;
  private native void s1342(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector2 value)  /*-{@com.badlogic.gdx.math.Intersector::v2tmp = value}-*/;
  
  // com.badlogic.gdx.math.Intersector#intersection
  private native com.badlogic.gdx.math.Vector3 g1345(com.badlogic.gdx.math.Intersector obj) /*-{return @com.badlogic.gdx.math.Intersector::intersection;}-*/;
  private native void s1344(com.badlogic.gdx.math.Intersector obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.Intersector::intersection = value}-*/;
  
  // com.badlogic.gdx.math.Intersector.MinimumTranslationVector#normal
  private native com.badlogic.gdx.math.Vector2 g1393(com.badlogic.gdx.math.Intersector.MinimumTranslationVector obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.MinimumTranslationVector::normal;}-*/;
  private native void s1392(com.badlogic.gdx.math.Intersector.MinimumTranslationVector obj, com.badlogic.gdx.math.Vector2 value)  /*-{obj.@com.badlogic.gdx.math.Intersector.MinimumTranslationVector::normal = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.MinimumTranslationVector#depth
  private native float g1395(com.badlogic.gdx.math.Intersector.MinimumTranslationVector obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.MinimumTranslationVector::depth;}-*/;
  private native void s1394(com.badlogic.gdx.math.Intersector.MinimumTranslationVector obj, float value)  /*-{obj.@com.badlogic.gdx.math.Intersector.MinimumTranslationVector::depth = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#front
  private native float[] g1399(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::front;}-*/;
  private native void s1398(com.badlogic.gdx.math.Intersector.SplitTriangle obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::front = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#back
  private native float[] g1401(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::back;}-*/;
  private native void s1400(com.badlogic.gdx.math.Intersector.SplitTriangle obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::back = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#edgeSplit
  private native float[] g1403(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::edgeSplit;}-*/;
  private native void s1402(com.badlogic.gdx.math.Intersector.SplitTriangle obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::edgeSplit = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#numFront
  private native int g1405(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::numFront;}-*/;
  private native void s1404(com.badlogic.gdx.math.Intersector.SplitTriangle obj, int value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::numFront = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#numBack
  private native int g1407(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::numBack;}-*/;
  private native void s1406(com.badlogic.gdx.math.Intersector.SplitTriangle obj, int value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::numBack = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#total
  private native int g1409(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::total;}-*/;
  private native void s1408(com.badlogic.gdx.math.Intersector.SplitTriangle obj, int value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::total = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#frontCurrent
  private native boolean g1411(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::frontCurrent;}-*/;
  private native void s1410(com.badlogic.gdx.math.Intersector.SplitTriangle obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::frontCurrent = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#frontOffset
  private native int g1413(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::frontOffset;}-*/;
  private native void s1412(com.badlogic.gdx.math.Intersector.SplitTriangle obj, int value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::frontOffset = value;}-*/;
  
  // com.badlogic.gdx.math.Intersector.SplitTriangle#backOffset
  private native int g1415(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::backOffset;}-*/;
  private native void s1414(com.badlogic.gdx.math.Intersector.SplitTriangle obj, int value)  /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::backOffset = value;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#nanoToSec
  private native float g1424(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::nanoToSec;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#PI
  private native float g1426(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::PI;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#PI2
  private native float g1428(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::PI2;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#E
  private native float g1430(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::E;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#SIN_BITS
  private native int g1432(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::SIN_BITS;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#SIN_MASK
  private native int g1434(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::SIN_MASK;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#SIN_COUNT
  private native int g1436(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::SIN_COUNT;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#radFull
  private native float g1438(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::radFull;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#degFull
  private native float g1440(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::degFull;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#radToIndex
  private native float g1442(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::radToIndex;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#degToIndex
  private native float g1444(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::degToIndex;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#radiansToDegrees
  private native float g1446(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::radiansToDegrees;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#radDeg
  private native float g1448(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::radDeg;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#degreesToRadians
  private native float g1450(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::degreesToRadians;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#degRad
  private native float g1452(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::degRad;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#ATAN2_BITS
  private native int g1454(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::ATAN2_BITS;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#ATAN2_BITS2
  private native int g1456(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::ATAN2_BITS2;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#ATAN2_MASK
  private native int g1458(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::ATAN2_MASK;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#ATAN2_COUNT
  private native int g1460(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::ATAN2_COUNT;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#ATAN2_DIM
  private native int g1462(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::ATAN2_DIM;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#INV_ATAN2_DIM_MINUS_1
  private native float g1464(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::INV_ATAN2_DIM_MINUS_1;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#random
  private native java.util.Random g1466(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::random;}-*/;
  private native void s1465(com.badlogic.gdx.math.MathUtils obj, java.util.Random value)  /*-{@com.badlogic.gdx.math.MathUtils::random = value}-*/;
  
  // com.badlogic.gdx.math.MathUtils#BIG_ENOUGH_INT
  private native int g1468(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::BIG_ENOUGH_INT;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#BIG_ENOUGH_FLOOR
  private native double g1470(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::BIG_ENOUGH_FLOOR;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#CEIL
  private native double g1472(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::CEIL;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#BIG_ENOUGH_CEIL
  private native double g1474(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::BIG_ENOUGH_CEIL;}-*/;
  
  // com.badlogic.gdx.math.MathUtils#BIG_ENOUGH_ROUND
  private native double g1476(com.badlogic.gdx.math.MathUtils obj) /*-{return @com.badlogic.gdx.math.MathUtils::BIG_ENOUGH_ROUND;}-*/;
  
  
  // com.badlogic.gdx.math.Matrix3#M00
  private native int g1505(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M00;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M01
  private native int g1507(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M01;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M02
  private native int g1509(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M02;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M10
  private native int g1511(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M10;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M11
  private native int g1513(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M11;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M12
  private native int g1515(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M12;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M20
  private native int g1517(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M20;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M21
  private native int g1519(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M21;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#M22
  private native int g1521(com.badlogic.gdx.math.Matrix3 obj) /*-{return @com.badlogic.gdx.math.Matrix3::M22;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#val
  private native float[] g1523(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::val;}-*/;
  private native void s1522(com.badlogic.gdx.math.Matrix3 obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Matrix3::val = value;}-*/;
  
  // com.badlogic.gdx.math.Matrix3#tmp
  private native float[] g1525(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::tmp;}-*/;
  private native void s1524(com.badlogic.gdx.math.Matrix3 obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Matrix3::tmp = value;}-*/;
  
  
  // com.badlogic.gdx.math.Matrix4#M00
  private native int g1565(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M00;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M01
  private native int g1567(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M01;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M02
  private native int g1569(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M02;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M03
  private native int g1571(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M03;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M10
  private native int g1573(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M10;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M11
  private native int g1575(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M11;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M12
  private native int g1577(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M12;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M13
  private native int g1579(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M13;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M20
  private native int g1581(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M20;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M21
  private native int g1583(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M21;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M22
  private native int g1585(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M22;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M23
  private native int g1587(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M23;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M30
  private native int g1589(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M30;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M31
  private native int g1591(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M31;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M32
  private native int g1593(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M32;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#M33
  private native int g1595(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::M33;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#tmp
  private native float[] g1597(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::tmp;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#val
  private native float[] g1599(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::val;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#quat
  private native com.badlogic.gdx.math.Quaternion g1601(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::quat;}-*/;
  private native void s1600(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Quaternion value)  /*-{@com.badlogic.gdx.math.Matrix4::quat = value}-*/;
  
  // com.badlogic.gdx.math.Matrix4#l_vez
  private native com.badlogic.gdx.math.Vector3 g1603(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::l_vez;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#l_vex
  private native com.badlogic.gdx.math.Vector3 g1605(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::l_vex;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#l_vey
  private native com.badlogic.gdx.math.Vector3 g1607(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::l_vey;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#tmpVec
  private native com.badlogic.gdx.math.Vector3 g1609(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::tmpVec;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#tmpMat
  private native com.badlogic.gdx.math.Matrix4 g1611(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::tmpMat;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#right
  private native com.badlogic.gdx.math.Vector3 g1613(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::right;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#tmpForward
  private native com.badlogic.gdx.math.Vector3 g1615(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::tmpForward;}-*/;
  
  // com.badlogic.gdx.math.Matrix4#tmpUp
  private native com.badlogic.gdx.math.Vector3 g1617(com.badlogic.gdx.math.Matrix4 obj) /*-{return @com.badlogic.gdx.math.Matrix4::tmpUp;}-*/;
  
  
  // com.badlogic.gdx.math.Plane#normal
  private native com.badlogic.gdx.math.Vector3 g1704(com.badlogic.gdx.math.Plane obj) /*-{return obj.@com.badlogic.gdx.math.Plane::normal;}-*/;
  
  // com.badlogic.gdx.math.Plane#d
  private native float g1706(com.badlogic.gdx.math.Plane obj) /*-{return obj.@com.badlogic.gdx.math.Plane::d;}-*/;
  private native void s1705(com.badlogic.gdx.math.Plane obj, float value)  /*-{obj.@com.badlogic.gdx.math.Plane::d = value;}-*/;
  
  // com.badlogic.gdx.math.Plane.PlaneSide#OnPlane
  private native com.badlogic.gdx.math.Plane.PlaneSide g1724(com.badlogic.gdx.math.Plane.PlaneSide obj) /*-{return @com.badlogic.gdx.math.Plane.PlaneSide::OnPlane;}-*/;
  
  // com.badlogic.gdx.math.Plane.PlaneSide#Back
  private native com.badlogic.gdx.math.Plane.PlaneSide g1726(com.badlogic.gdx.math.Plane.PlaneSide obj) /*-{return @com.badlogic.gdx.math.Plane.PlaneSide::Back;}-*/;
  
  // com.badlogic.gdx.math.Plane.PlaneSide#Front
  private native com.badlogic.gdx.math.Plane.PlaneSide g1728(com.badlogic.gdx.math.Plane.PlaneSide obj) /*-{return @com.badlogic.gdx.math.Plane.PlaneSide::Front;}-*/;
  
  // com.badlogic.gdx.math.Polygon#localVertices
  private native float[] g1735(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::localVertices;}-*/;
  private native void s1734(com.badlogic.gdx.math.Polygon obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Polygon::localVertices = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#worldVertices
  private native float[] g1737(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::worldVertices;}-*/;
  private native void s1736(com.badlogic.gdx.math.Polygon obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Polygon::worldVertices = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#x
  private native float g1739(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::x;}-*/;
  private native void s1738(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::x = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#y
  private native float g1741(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::y;}-*/;
  private native void s1740(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::y = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#originX
  private native float g1743(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::originX;}-*/;
  private native void s1742(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::originX = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#originY
  private native float g1745(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::originY;}-*/;
  private native void s1744(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::originY = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#rotation
  private native float g1747(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::rotation;}-*/;
  private native void s1746(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::rotation = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#scaleX
  private native float g1749(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::scaleX;}-*/;
  private native void s1748(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::scaleX = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#scaleY
  private native float g1751(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::scaleY;}-*/;
  private native void s1750(com.badlogic.gdx.math.Polygon obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polygon::scaleY = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#dirty
  private native boolean g1753(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::dirty;}-*/;
  private native void s1752(com.badlogic.gdx.math.Polygon obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.Polygon::dirty = value;}-*/;
  
  // com.badlogic.gdx.math.Polygon#bounds
  private native com.badlogic.gdx.math.Rectangle g1755(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::bounds;}-*/;
  private native void s1754(com.badlogic.gdx.math.Polygon obj, com.badlogic.gdx.math.Rectangle value)  /*-{obj.@com.badlogic.gdx.math.Polygon::bounds = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#localVertices
  private native float[] g1781(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::localVertices;}-*/;
  
  // com.badlogic.gdx.math.Polyline#worldVertices
  private native float[] g1783(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::worldVertices;}-*/;
  private native void s1782(com.badlogic.gdx.math.Polyline obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.Polyline::worldVertices = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#x
  private native float g1785(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::x;}-*/;
  private native void s1784(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::x = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#y
  private native float g1787(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::y;}-*/;
  private native void s1786(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::y = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#originX
  private native float g1789(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::originX;}-*/;
  private native void s1788(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::originX = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#originY
  private native float g1791(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::originY;}-*/;
  private native void s1790(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::originY = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#rotation
  private native float g1793(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::rotation;}-*/;
  private native void s1792(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::rotation = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#scaleX
  private native float g1795(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::scaleX;}-*/;
  private native void s1794(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::scaleX = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#scaleY
  private native float g1797(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::scaleY;}-*/;
  private native void s1796(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::scaleY = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#length
  private native float g1799(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::length;}-*/;
  private native void s1798(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::length = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#scaledLength
  private native float g1801(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::scaledLength;}-*/;
  private native void s1800(com.badlogic.gdx.math.Polyline obj, float value)  /*-{obj.@com.badlogic.gdx.math.Polyline::scaledLength = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#calculateScaledLength
  private native boolean g1803(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::calculateScaledLength;}-*/;
  private native void s1802(com.badlogic.gdx.math.Polyline obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.Polyline::calculateScaledLength = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#calculateLength
  private native boolean g1805(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::calculateLength;}-*/;
  private native void s1804(com.badlogic.gdx.math.Polyline obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.Polyline::calculateLength = value;}-*/;
  
  // com.badlogic.gdx.math.Polyline#dirty
  private native boolean g1807(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::dirty;}-*/;
  private native void s1806(com.badlogic.gdx.math.Polyline obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.Polyline::dirty = value;}-*/;
  
  
  // com.badlogic.gdx.math.Quaternion#NORMALIZATION_TOLERANCE
  private native float g1835(com.badlogic.gdx.math.Quaternion obj) /*-{return @com.badlogic.gdx.math.Quaternion::NORMALIZATION_TOLERANCE;}-*/;
  
  // com.badlogic.gdx.math.Quaternion#tmp1
  private native com.badlogic.gdx.math.Quaternion g1837(com.badlogic.gdx.math.Quaternion obj) /*-{return @com.badlogic.gdx.math.Quaternion::tmp1;}-*/;
  private native void s1836(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion value)  /*-{@com.badlogic.gdx.math.Quaternion::tmp1 = value}-*/;
  
  // com.badlogic.gdx.math.Quaternion#tmp2
  private native com.badlogic.gdx.math.Quaternion g1839(com.badlogic.gdx.math.Quaternion obj) /*-{return @com.badlogic.gdx.math.Quaternion::tmp2;}-*/;
  private native void s1838(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion value)  /*-{@com.badlogic.gdx.math.Quaternion::tmp2 = value}-*/;
  
  // com.badlogic.gdx.math.Quaternion#x
  private native float g1841(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::x;}-*/;
  private native void s1840(com.badlogic.gdx.math.Quaternion obj, float value)  /*-{obj.@com.badlogic.gdx.math.Quaternion::x = value;}-*/;
  
  // com.badlogic.gdx.math.Quaternion#y
  private native float g1843(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::y;}-*/;
  private native void s1842(com.badlogic.gdx.math.Quaternion obj, float value)  /*-{obj.@com.badlogic.gdx.math.Quaternion::y = value;}-*/;
  
  // com.badlogic.gdx.math.Quaternion#z
  private native float g1845(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::z;}-*/;
  private native void s1844(com.badlogic.gdx.math.Quaternion obj, float value)  /*-{obj.@com.badlogic.gdx.math.Quaternion::z = value;}-*/;
  
  // com.badlogic.gdx.math.Quaternion#w
  private native float g1847(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::w;}-*/;
  private native void s1846(com.badlogic.gdx.math.Quaternion obj, float value)  /*-{obj.@com.badlogic.gdx.math.Quaternion::w = value;}-*/;
  
  // com.badlogic.gdx.math.Rectangle#tmp
  private native com.badlogic.gdx.math.Rectangle g1888(com.badlogic.gdx.math.Rectangle obj) /*-{return @com.badlogic.gdx.math.Rectangle::tmp;}-*/;
  
  // com.badlogic.gdx.math.Rectangle#tmp2
  private native com.badlogic.gdx.math.Rectangle g1890(com.badlogic.gdx.math.Rectangle obj) /*-{return @com.badlogic.gdx.math.Rectangle::tmp2;}-*/;
  
  
  // com.badlogic.gdx.math.Rectangle#x
  private native float g1894(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::x;}-*/;
  private native void s1893(com.badlogic.gdx.math.Rectangle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Rectangle::x = value;}-*/;
  
  // com.badlogic.gdx.math.Rectangle#y
  private native float g1896(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::y;}-*/;
  private native void s1895(com.badlogic.gdx.math.Rectangle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Rectangle::y = value;}-*/;
  
  // com.badlogic.gdx.math.Rectangle#width
  private native float g1898(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::width;}-*/;
  private native void s1897(com.badlogic.gdx.math.Rectangle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Rectangle::width = value;}-*/;
  
  // com.badlogic.gdx.math.Rectangle#height
  private native float g1900(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::height;}-*/;
  private native void s1899(com.badlogic.gdx.math.Rectangle obj, float value)  /*-{obj.@com.badlogic.gdx.math.Rectangle::height = value;}-*/;
  
  
  // com.badlogic.gdx.math.Vector2#X
  private native com.badlogic.gdx.math.Vector2 g1937(com.badlogic.gdx.math.Vector2 obj) /*-{return @com.badlogic.gdx.math.Vector2::X;}-*/;
  
  // com.badlogic.gdx.math.Vector2#Y
  private native com.badlogic.gdx.math.Vector2 g1939(com.badlogic.gdx.math.Vector2 obj) /*-{return @com.badlogic.gdx.math.Vector2::Y;}-*/;
  
  // com.badlogic.gdx.math.Vector2#Zero
  private native com.badlogic.gdx.math.Vector2 g1941(com.badlogic.gdx.math.Vector2 obj) /*-{return @com.badlogic.gdx.math.Vector2::Zero;}-*/;
  
  // com.badlogic.gdx.math.Vector2#x
  private native float g1943(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::x;}-*/;
  private native void s1942(com.badlogic.gdx.math.Vector2 obj, float value)  /*-{obj.@com.badlogic.gdx.math.Vector2::x = value;}-*/;
  
  // com.badlogic.gdx.math.Vector2#y
  private native float g1945(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::y;}-*/;
  private native void s1944(com.badlogic.gdx.math.Vector2 obj, float value)  /*-{obj.@com.badlogic.gdx.math.Vector2::y = value;}-*/;
  
  
  // com.badlogic.gdx.math.Vector3#x
  private native float g1999(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::x;}-*/;
  private native void s1998(com.badlogic.gdx.math.Vector3 obj, float value)  /*-{obj.@com.badlogic.gdx.math.Vector3::x = value;}-*/;
  
  // com.badlogic.gdx.math.Vector3#y
  private native float g2001(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::y;}-*/;
  private native void s2000(com.badlogic.gdx.math.Vector3 obj, float value)  /*-{obj.@com.badlogic.gdx.math.Vector3::y = value;}-*/;
  
  // com.badlogic.gdx.math.Vector3#z
  private native float g2003(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::z;}-*/;
  private native void s2002(com.badlogic.gdx.math.Vector3 obj, float value)  /*-{obj.@com.badlogic.gdx.math.Vector3::z = value;}-*/;
  
  // com.badlogic.gdx.math.Vector3#tmp
  private native com.badlogic.gdx.math.Vector3 g2005(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::tmp;}-*/;
  
  // com.badlogic.gdx.math.Vector3#tmp2
  private native com.badlogic.gdx.math.Vector3 g2007(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::tmp2;}-*/;
  
  // com.badlogic.gdx.math.Vector3#tmp3
  private native com.badlogic.gdx.math.Vector3 g2009(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::tmp3;}-*/;
  
  // com.badlogic.gdx.math.Vector3#X
  private native com.badlogic.gdx.math.Vector3 g2011(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::X;}-*/;
  
  // com.badlogic.gdx.math.Vector3#Y
  private native com.badlogic.gdx.math.Vector3 g2013(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::Y;}-*/;
  
  // com.badlogic.gdx.math.Vector3#Z
  private native com.badlogic.gdx.math.Vector3 g2015(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::Z;}-*/;
  
  // com.badlogic.gdx.math.Vector3#Zero
  private native com.badlogic.gdx.math.Vector3 g2017(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::Zero;}-*/;
  
  // com.badlogic.gdx.math.Vector3#tmpMat
  private native com.badlogic.gdx.math.Matrix4 g2019(com.badlogic.gdx.math.Vector3 obj) /*-{return @com.badlogic.gdx.math.Vector3::tmpMat;}-*/;
  
  // com.badlogic.gdx.math.WindowedMean#values
  private native float[] g2091(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::values;}-*/;
  private native void s2090(com.badlogic.gdx.math.WindowedMean obj, float[] value)  /*-{obj.@com.badlogic.gdx.math.WindowedMean::values = value;}-*/;
  
  // com.badlogic.gdx.math.WindowedMean#added_values
  private native int g2093(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::added_values;}-*/;
  private native void s2092(com.badlogic.gdx.math.WindowedMean obj, int value)  /*-{obj.@com.badlogic.gdx.math.WindowedMean::added_values = value;}-*/;
  
  // com.badlogic.gdx.math.WindowedMean#last_value
  private native int g2095(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::last_value;}-*/;
  private native void s2094(com.badlogic.gdx.math.WindowedMean obj, int value)  /*-{obj.@com.badlogic.gdx.math.WindowedMean::last_value = value;}-*/;
  
  // com.badlogic.gdx.math.WindowedMean#mean
  private native float g2097(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::mean;}-*/;
  private native void s2096(com.badlogic.gdx.math.WindowedMean obj, float value)  /*-{obj.@com.badlogic.gdx.math.WindowedMean::mean = value;}-*/;
  
  // com.badlogic.gdx.math.WindowedMean#dirty
  private native boolean g2099(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::dirty;}-*/;
  private native void s2098(com.badlogic.gdx.math.WindowedMean obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.WindowedMean::dirty = value;}-*/;
  
  
  // com.badlogic.gdx.math.collision.BoundingBox#crn
  private native com.badlogic.gdx.math.Vector3[] g2112(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::crn;}-*/;
  
  // com.badlogic.gdx.math.collision.BoundingBox#min
  private native com.badlogic.gdx.math.Vector3 g2114(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::min;}-*/;
  
  // com.badlogic.gdx.math.collision.BoundingBox#max
  private native com.badlogic.gdx.math.Vector3 g2116(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::max;}-*/;
  
  // com.badlogic.gdx.math.collision.BoundingBox#cnt
  private native com.badlogic.gdx.math.Vector3 g2118(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::cnt;}-*/;
  
  // com.badlogic.gdx.math.collision.BoundingBox#dim
  private native com.badlogic.gdx.math.Vector3 g2120(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::dim;}-*/;
  
  // com.badlogic.gdx.math.collision.BoundingBox#crn_dirty
  private native boolean g2122(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::crn_dirty;}-*/;
  private native void s2121(com.badlogic.gdx.math.collision.BoundingBox obj, boolean value)  /*-{obj.@com.badlogic.gdx.math.collision.BoundingBox::crn_dirty = value;}-*/;
  
  
  // com.badlogic.gdx.math.collision.Ray#origin
  private native com.badlogic.gdx.math.Vector3 g2154(com.badlogic.gdx.math.collision.Ray obj) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::origin;}-*/;
  
  // com.badlogic.gdx.math.collision.Ray#direction
  private native com.badlogic.gdx.math.Vector3 g2156(com.badlogic.gdx.math.collision.Ray obj) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::direction;}-*/;
  
  // com.badlogic.gdx.math.collision.Ray#tmp
  private native com.badlogic.gdx.math.Vector3 g2158(com.badlogic.gdx.math.collision.Ray obj) /*-{return @com.badlogic.gdx.math.collision.Ray::tmp;}-*/;
  private native void s2157(com.badlogic.gdx.math.collision.Ray obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.math.collision.Ray::tmp = value}-*/;
  
  
  // com.badlogic.gdx.math.collision.Segment#a
  private native com.badlogic.gdx.math.Vector3 g2172(com.badlogic.gdx.math.collision.Segment obj) /*-{return obj.@com.badlogic.gdx.math.collision.Segment::a;}-*/;
  
  // com.badlogic.gdx.math.collision.Segment#b
  private native com.badlogic.gdx.math.Vector3 g2174(com.badlogic.gdx.math.collision.Segment obj) /*-{return obj.@com.badlogic.gdx.math.collision.Segment::b;}-*/;
  
  
  // com.badlogic.gdx.math.collision.Sphere#radius
  private native float g2181(com.badlogic.gdx.math.collision.Sphere obj) /*-{return obj.@com.badlogic.gdx.math.collision.Sphere::radius;}-*/;
  private native void s2180(com.badlogic.gdx.math.collision.Sphere obj, float value)  /*-{obj.@com.badlogic.gdx.math.collision.Sphere::radius = value;}-*/;
  
  // com.badlogic.gdx.math.collision.Sphere#center
  private native com.badlogic.gdx.math.Vector3 g2183(com.badlogic.gdx.math.collision.Sphere obj) /*-{return obj.@com.badlogic.gdx.math.collision.Sphere::center;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Action#actor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2188(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::actor;}-*/;
  private native void s2187(com.badlogic.gdx.scenes.scene2d.Action obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::actor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Action#pool
  private native com.badlogic.gdx.utils.Pool g2190(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::pool;}-*/;
  private native void s2189(com.badlogic.gdx.scenes.scene2d.Action obj, com.badlogic.gdx.utils.Pool value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::pool = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#stage
  private native com.badlogic.gdx.scenes.scene2d.Stage g2202(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::stage;}-*/;
  private native void s2201(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Stage value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::stage = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#parent
  private native com.badlogic.gdx.scenes.scene2d.Group g2204(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::parent;}-*/;
  private native void s2203(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Group value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::parent = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#listeners
  private native com.badlogic.gdx.utils.DelayedRemovalArray g2206(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::listeners;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#captureListeners
  private native com.badlogic.gdx.utils.DelayedRemovalArray g2208(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::captureListeners;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#actions
  private native com.badlogic.gdx.utils.Array g2210(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::actions;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#name
  private native java.lang.String g2212(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::name;}-*/;
  private native void s2211(com.badlogic.gdx.scenes.scene2d.Actor obj, java.lang.String value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::name = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#touchable
  private native com.badlogic.gdx.scenes.scene2d.Touchable g2214(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::touchable;}-*/;
  private native void s2213(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Touchable value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::touchable = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#visible
  private native boolean g2216(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::visible;}-*/;
  private native void s2215(com.badlogic.gdx.scenes.scene2d.Actor obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::visible = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#x
  private native float g2218(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::x;}-*/;
  private native void s2217(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::x = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#y
  private native float g2220(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::y;}-*/;
  private native void s2219(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::y = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#width
  private native float g2222(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::width;}-*/;
  private native void s2221(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::width = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#height
  private native float g2224(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::height;}-*/;
  private native void s2223(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::height = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#originX
  private native float g2226(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::originX;}-*/;
  private native void s2225(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::originX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#originY
  private native float g2228(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::originY;}-*/;
  private native void s2227(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::originY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#scaleX
  private native float g2230(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::scaleX;}-*/;
  private native void s2229(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::scaleX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#scaleY
  private native float g2232(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::scaleY;}-*/;
  private native void s2231(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::scaleY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#rotation
  private native float g2234(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::rotation;}-*/;
  private native void s2233(com.badlogic.gdx.scenes.scene2d.Actor obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::rotation = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#color
  private native com.badlogic.gdx.graphics.Color g2236(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::color;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Actor#userObject
  private native java.lang.Object g2238(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::userObject;}-*/;
  private native void s2237(com.badlogic.gdx.scenes.scene2d.Actor obj, java.lang.Object value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::userObject = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#stage
  private native com.badlogic.gdx.scenes.scene2d.Stage g2327(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::stage;}-*/;
  private native void s2326(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Stage value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::stage = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#targetActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2329(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::targetActor;}-*/;
  private native void s2328(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::targetActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#listenerActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2331(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::listenerActor;}-*/;
  private native void s2330(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::listenerActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#capture
  private native boolean g2333(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::capture;}-*/;
  private native void s2332(com.badlogic.gdx.scenes.scene2d.Event obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::capture = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#bubbles
  private native boolean g2335(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::bubbles;}-*/;
  private native void s2334(com.badlogic.gdx.scenes.scene2d.Event obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::bubbles = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#handled
  private native boolean g2337(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::handled;}-*/;
  private native void s2336(com.badlogic.gdx.scenes.scene2d.Event obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::handled = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#stopped
  private native boolean g2339(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::stopped;}-*/;
  private native void s2338(com.badlogic.gdx.scenes.scene2d.Event obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::stopped = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Event#cancelled
  private native boolean g2341(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::cancelled;}-*/;
  private native void s2340(com.badlogic.gdx.scenes.scene2d.Event obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::cancelled = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#children
  private native com.badlogic.gdx.utils.SnapshotArray g2363(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::children;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#localTransform
  private native com.badlogic.gdx.math.Matrix3 g2365(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::localTransform;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#worldTransform
  private native com.badlogic.gdx.math.Matrix3 g2367(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::worldTransform;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#batchTransform
  private native com.badlogic.gdx.math.Matrix4 g2369(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::batchTransform;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#oldBatchTransform
  private native com.badlogic.gdx.math.Matrix4 g2371(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::oldBatchTransform;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#transform
  private native boolean g2373(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::transform;}-*/;
  private native void s2372(com.badlogic.gdx.scenes.scene2d.Group obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::transform = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#cullingArea
  private native com.badlogic.gdx.math.Rectangle g2375(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::cullingArea;}-*/;
  private native void s2374(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.math.Rectangle value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::cullingArea = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Group#point
  private native com.badlogic.gdx.math.Vector2 g2377(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::point;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#type
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2408(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::type;}-*/;
  private native void s2407(com.badlogic.gdx.scenes.scene2d.InputEvent obj, com.badlogic.gdx.scenes.scene2d.InputEvent.Type value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::type = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#stageX
  private native float g2410(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::stageX;}-*/;
  private native void s2409(com.badlogic.gdx.scenes.scene2d.InputEvent obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::stageX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#stageY
  private native float g2412(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::stageY;}-*/;
  private native void s2411(com.badlogic.gdx.scenes.scene2d.InputEvent obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::stageY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#pointer
  private native int g2414(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::pointer;}-*/;
  private native void s2413(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::pointer = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#button
  private native int g2416(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::button;}-*/;
  private native void s2415(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::button = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#keyCode
  private native int g2418(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::keyCode;}-*/;
  private native void s2417(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::keyCode = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#scrollAmount
  private native int g2420(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::scrollAmount;}-*/;
  private native void s2419(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::scrollAmount = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#character
  private native char g2422(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::character;}-*/;
  private native void s2421(com.badlogic.gdx.scenes.scene2d.InputEvent obj, char value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::character = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent#relatedActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2424(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::relatedActor;}-*/;
  private native void s2423(com.badlogic.gdx.scenes.scene2d.InputEvent obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::relatedActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#touchDown
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2450(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::touchDown;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#touchUp
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2452(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::touchUp;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#touchDragged
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2454(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::touchDragged;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#mouseMoved
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2456(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::mouseMoved;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#enter
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2458(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::enter;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#exit
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2460(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::exit;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#scrolled
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2462(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::scrolled;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#keyDown
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2464(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::keyDown;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#keyUp
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2466(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::keyUp;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputEvent.Type#keyTyped
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type g2468(com.badlogic.gdx.scenes.scene2d.InputEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::keyTyped;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.InputListener#tmpCoords
  private native com.badlogic.gdx.math.Vector2 g2474(com.badlogic.gdx.scenes.scene2d.InputListener obj) /*-{return @com.badlogic.gdx.scenes.scene2d.InputListener::tmpCoords;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#actorCoords
  private native com.badlogic.gdx.math.Vector2 g2489(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return @com.badlogic.gdx.scenes.scene2d.Stage::actorCoords;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#cameraCoords
  private native com.badlogic.gdx.math.Vector3 g2491(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return @com.badlogic.gdx.scenes.scene2d.Stage::cameraCoords;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#viewportX
  private native float g2493(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportX;}-*/;
  private native void s2492(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#viewportY
  private native float g2495(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportY;}-*/;
  private native void s2494(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#viewportWidth
  private native float g2497(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportWidth;}-*/;
  private native void s2496(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#viewportHeight
  private native float g2499(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportHeight;}-*/;
  private native void s2498(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::viewportHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#width
  private native float g2501(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::width;}-*/;
  private native void s2500(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::width = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#height
  private native float g2503(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::height;}-*/;
  private native void s2502(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::height = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#gutterWidth
  private native float g2505(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::gutterWidth;}-*/;
  private native void s2504(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::gutterWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#gutterHeight
  private native float g2507(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::gutterHeight;}-*/;
  private native void s2506(com.badlogic.gdx.scenes.scene2d.Stage obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::gutterHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#camera
  private native com.badlogic.gdx.graphics.Camera g2509(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::camera;}-*/;
  private native void s2508(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.graphics.Camera value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::camera = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#batch
  private native com.badlogic.gdx.graphics.g2d.Batch g2511(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::batch;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#ownsBatch
  private native boolean g2513(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::ownsBatch;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#root
  private native com.badlogic.gdx.scenes.scene2d.Group g2515(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::root;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#stageCoords
  private native com.badlogic.gdx.math.Vector2 g2517(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::stageCoords;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#pointerOverActors
  private native com.badlogic.gdx.scenes.scene2d.Actor[] g2519(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::pointerOverActors;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#pointerTouched
  private native boolean[] g2521(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::pointerTouched;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#pointerScreenX
  private native int[] g2523(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::pointerScreenX;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#pointerScreenY
  private native int[] g2525(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::pointerScreenY;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#mouseScreenX
  private native int g2527(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseScreenX;}-*/;
  private native void s2526(com.badlogic.gdx.scenes.scene2d.Stage obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseScreenX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#mouseScreenY
  private native int g2529(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseScreenY;}-*/;
  private native void s2528(com.badlogic.gdx.scenes.scene2d.Stage obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseScreenY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#mouseOverActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2531(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseOverActor;}-*/;
  private native void s2530(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseOverActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#keyboardFocus
  private native com.badlogic.gdx.scenes.scene2d.Actor g2533(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::keyboardFocus;}-*/;
  private native void s2532(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::keyboardFocus = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#scrollFocus
  private native com.badlogic.gdx.scenes.scene2d.Actor g2535(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::scrollFocus;}-*/;
  private native void s2534(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::scrollFocus = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage#touchFocuses
  private native com.badlogic.gdx.utils.SnapshotArray g2537(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::touchFocuses;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus#listener
  private native com.badlogic.gdx.scenes.scene2d.EventListener g2591(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::listener;}-*/;
  private native void s2590(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj, com.badlogic.gdx.scenes.scene2d.EventListener value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::listener = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus#listenerActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2593(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::listenerActor;}-*/;
  private native void s2592(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::listenerActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus#target
  private native com.badlogic.gdx.scenes.scene2d.Actor g2595(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::target;}-*/;
  private native void s2594(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::target = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus#pointer
  private native int g2597(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::pointer;}-*/;
  private native void s2596(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::pointer = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus#button
  private native int g2599(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::button;}-*/;
  private native void s2598(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::button = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Touchable#enabled
  private native com.badlogic.gdx.scenes.scene2d.Touchable g2604(com.badlogic.gdx.scenes.scene2d.Touchable obj) /*-{return @com.badlogic.gdx.scenes.scene2d.Touchable::enabled;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Touchable#disabled
  private native com.badlogic.gdx.scenes.scene2d.Touchable g2606(com.badlogic.gdx.scenes.scene2d.Touchable obj) /*-{return @com.badlogic.gdx.scenes.scene2d.Touchable::disabled;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.Touchable#childrenOnly
  private native com.badlogic.gdx.scenes.scene2d.Touchable g2608(com.badlogic.gdx.scenes.scene2d.Touchable obj) /*-{return @com.badlogic.gdx.scenes.scene2d.Touchable::childrenOnly;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AddAction#targetActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2687(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::targetActor;}-*/;
  private native void s2686(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::targetActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AddAction#action
  private native com.badlogic.gdx.scenes.scene2d.Action g2689(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::action;}-*/;
  private native void s2688(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj, com.badlogic.gdx.scenes.scene2d.Action value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::action = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction#targetActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2700(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::targetActor;}-*/;
  private native void s2699(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::targetActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction#listener
  private native com.badlogic.gdx.scenes.scene2d.EventListener g2702(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::listener;}-*/;
  private native void s2701(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, com.badlogic.gdx.scenes.scene2d.EventListener value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::listener = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction#capture
  private native boolean g2704(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::capture;}-*/;
  private native void s2703(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::capture = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AfterAction#waitForActions
  private native com.badlogic.gdx.utils.Array g2716(com.badlogic.gdx.scenes.scene2d.actions.AfterAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AfterAction::waitForActions;}-*/;
  private native void s2715(com.badlogic.gdx.scenes.scene2d.actions.AfterAction obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AfterAction::waitForActions = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AlphaAction#start
  private native float g2723(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::start;}-*/;
  private native void s2722(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::start = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AlphaAction#end
  private native float g2725(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::end;}-*/;
  private native void s2724(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::end = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.AlphaAction#color
  private native com.badlogic.gdx.graphics.Color g2727(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::color;}-*/;
  private native void s2726(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::color = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#startR
  private native float g2738(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startR;}-*/;
  private native void s2737(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startR = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#startG
  private native float g2740(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startG;}-*/;
  private native void s2739(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startG = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#startB
  private native float g2742(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startB;}-*/;
  private native void s2741(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startB = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#startA
  private native float g2744(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startA;}-*/;
  private native void s2743(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::startA = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#color
  private native com.badlogic.gdx.graphics.Color g2746(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::color;}-*/;
  private native void s2745(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, com.badlogic.gdx.graphics.Color value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::color = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ColorAction#end
  private native com.badlogic.gdx.graphics.Color g2748(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::end;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction#count
  private native int g2759(com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction::count;}-*/;
  private native void s2758(com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction::count = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction#current
  private native int g2761(com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction::current;}-*/;
  private native void s2760(com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction::current = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.DelayAction#duration
  private native float g2766(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::duration;}-*/;
  private native void s2765(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::duration = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.DelayAction#time
  private native float g2768(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::time;}-*/;
  private native void s2767(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::time = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.DelegateAction#action
  private native com.badlogic.gdx.scenes.scene2d.Action g2780(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::action;}-*/;
  private native void s2779(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj, com.badlogic.gdx.scenes.scene2d.Action value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::action = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.EventAction#eventClass
  private native java.lang.Class g2791(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::eventClass;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.EventAction#result
  private native boolean g2793(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::result;}-*/;
  private native void s2792(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::result = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.EventAction#listener
  private native com.badlogic.gdx.scenes.scene2d.EventListener g2795(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::listener;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.FloatAction#start
  private native float g2802(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::start;}-*/;
  private native void s2801(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::start = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.FloatAction#end
  private native float g2804(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::end;}-*/;
  private native void s2803(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::end = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.FloatAction#value
  private native float g2806(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::value;}-*/;
  private native void s2805(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::value = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.IntAction#start
  private native int g2819(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::start;}-*/;
  private native void s2818(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::start = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.IntAction#end
  private native int g2821(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::end;}-*/;
  private native void s2820(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::end = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.IntAction#value
  private native int g2823(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::value;}-*/;
  private native void s2822(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::value = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.LayoutAction#enabled
  private native boolean g2836(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::enabled;}-*/;
  private native void s2835(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::enabled = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveByAction#amountX
  private native float g2844(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::amountX;}-*/;
  private native void s2843(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::amountX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveByAction#amountY
  private native float g2846(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::amountY;}-*/;
  private native void s2845(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::amountY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveToAction#startX
  private native float g2856(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::startX;}-*/;
  private native void s2855(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::startX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveToAction#startY
  private native float g2858(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::startY;}-*/;
  private native void s2857(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::startY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveToAction#endX
  private native float g2860(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::endX;}-*/;
  private native void s2859(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::endX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.MoveToAction#endY
  private native float g2862(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::endY;}-*/;
  private native void s2861(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::endY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ParallelAction#actions
  private native com.badlogic.gdx.utils.Array g2873(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::actions;}-*/;
  private native void s2872(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::actions = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ParallelAction#complete
  private native boolean g2875(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::complete;}-*/;
  private native void s2874(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::complete = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction#lastPercent
  private native float g2891(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction::lastPercent;}-*/;
  private native void s2890(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction::lastPercent = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveAction#targetActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2897(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::targetActor;}-*/;
  private native void s2896(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::targetActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveAction#action
  private native com.badlogic.gdx.scenes.scene2d.Action g2899(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::action;}-*/;
  private native void s2898(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj, com.badlogic.gdx.scenes.scene2d.Action value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::action = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction#removeActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2909(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::removeActor;}-*/;
  private native void s2908(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::removeActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction#removed
  private native boolean g2911(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::removed;}-*/;
  private native void s2910(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::removed = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction#targetActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g2920(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::targetActor;}-*/;
  private native void s2919(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::targetActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction#listener
  private native com.badlogic.gdx.scenes.scene2d.EventListener g2922(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::listener;}-*/;
  private native void s2921(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, com.badlogic.gdx.scenes.scene2d.EventListener value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::listener = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction#capture
  private native boolean g2924(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::capture;}-*/;
  private native void s2923(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::capture = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RepeatAction#FOREVER
  private native int g2936(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::FOREVER;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RepeatAction#repeatCount
  private native int g2938(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::repeatCount;}-*/;
  private native void s2937(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::repeatCount = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RepeatAction#executedCount
  private native int g2940(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::executedCount;}-*/;
  private native void s2939(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::executedCount = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RepeatAction#finished
  private native boolean g2942(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::finished;}-*/;
  private native void s2941(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::finished = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RotateByAction#amount
  private native float g2951(com.badlogic.gdx.scenes.scene2d.actions.RotateByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateByAction::amount;}-*/;
  private native void s2950(com.badlogic.gdx.scenes.scene2d.actions.RotateByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateByAction::amount = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RotateToAction#start
  private native float g2958(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::start;}-*/;
  private native void s2957(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::start = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RotateToAction#end
  private native float g2960(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::end;}-*/;
  private native void s2959(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::end = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RunnableAction#runnable
  private native java.lang.Runnable g2968(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::runnable;}-*/;
  private native void s2967(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj, java.lang.Runnable value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::runnable = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.RunnableAction#ran
  private native boolean g2970(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::ran;}-*/;
  private native void s2969(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::ran = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction#amountX
  private native float g2980(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::amountX;}-*/;
  private native void s2979(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::amountX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction#amountY
  private native float g2982(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::amountY;}-*/;
  private native void s2981(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::amountY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction#startX
  private native float g2993(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::startX;}-*/;
  private native void s2992(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::startX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction#startY
  private native float g2995(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::startY;}-*/;
  private native void s2994(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::startY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction#endX
  private native float g2997(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::endX;}-*/;
  private native void s2996(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::endX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction#endY
  private native float g2999(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::endY;}-*/;
  private native void s2998(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::endY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SequenceAction#index
  private native int g3011(com.badlogic.gdx.scenes.scene2d.actions.SequenceAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SequenceAction::index;}-*/;
  private native void s3010(com.badlogic.gdx.scenes.scene2d.actions.SequenceAction obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SequenceAction::index = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeByAction#amountWidth
  private native float g3022(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::amountWidth;}-*/;
  private native void s3021(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::amountWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeByAction#amountHeight
  private native float g3024(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::amountHeight;}-*/;
  private native void s3023(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::amountHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeToAction#startWidth
  private native float g3034(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::startWidth;}-*/;
  private native void s3033(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::startWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeToAction#startHeight
  private native float g3036(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::startHeight;}-*/;
  private native void s3035(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::startHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeToAction#endWidth
  private native float g3038(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::endWidth;}-*/;
  private native void s3037(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::endWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.SizeToAction#endHeight
  private native float g3040(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::endHeight;}-*/;
  private native void s3039(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::endHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#duration
  private native float g3051(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::duration;}-*/;
  private native void s3050(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::duration = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#time
  private native float g3053(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::time;}-*/;
  private native void s3052(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::time = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#interpolation
  private native com.badlogic.gdx.math.Interpolation g3055(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::interpolation;}-*/;
  private native void s3054(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, com.badlogic.gdx.math.Interpolation value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::interpolation = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#reverse
  private native boolean g3057(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::reverse;}-*/;
  private native void s3056(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::reverse = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#began
  private native boolean g3059(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::began;}-*/;
  private native void s3058(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::began = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TemporalAction#complete
  private native boolean g3061(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::complete;}-*/;
  private native void s3060(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::complete = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction#scale
  private native float g3079(com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction::scale;}-*/;
  private native void s3078(com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction::scale = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.TouchableAction#touchable
  private native com.badlogic.gdx.scenes.scene2d.Touchable g3086(com.badlogic.gdx.scenes.scene2d.actions.TouchableAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TouchableAction::touchable;}-*/;
  private native void s3085(com.badlogic.gdx.scenes.scene2d.actions.TouchableAction obj, com.badlogic.gdx.scenes.scene2d.Touchable value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TouchableAction::touchable = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.actions.VisibleAction#visible
  private native boolean g3093(com.badlogic.gdx.scenes.scene2d.actions.VisibleAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.VisibleAction::visible;}-*/;
  private native void s3092(com.badlogic.gdx.scenes.scene2d.actions.VisibleAction obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.VisibleAction::visible = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#prefWidth
  private native float g3100(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::prefWidth;}-*/;
  private native void s3099(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::prefWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#prefHeight
  private native float g3102(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::prefHeight;}-*/;
  private native void s3101(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::prefHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#sizeInvalid
  private native boolean g3104(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::sizeInvalid;}-*/;
  private native void s3103(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::sizeInvalid = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#alignment
  private native int g3106(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::alignment;}-*/;
  private native void s3105(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::alignment = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#reverse
  private native boolean g3108(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::reverse;}-*/;
  private native void s3107(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::reverse = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#round
  private native boolean g3110(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::round;}-*/;
  private native void s3109(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::round = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup#spacing
  private native float g3112(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::spacing;}-*/;
  private native void s3111(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::spacing = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#prefWidth
  private native float g3125(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::prefWidth;}-*/;
  private native void s3124(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::prefWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#prefHeight
  private native float g3127(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::prefHeight;}-*/;
  private native void s3126(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::prefHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#minWidth
  private native float g3129(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::minWidth;}-*/;
  private native void s3128(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::minWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#minHeight
  private native float g3131(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::minHeight;}-*/;
  private native void s3130(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::minHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#maxWidth
  private native float g3133(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::maxWidth;}-*/;
  private native void s3132(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::maxWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#maxHeight
  private native float g3135(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::maxHeight;}-*/;
  private native void s3134(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::maxHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Stack#sizeInvalid
  private native boolean g3137(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::sizeInvalid;}-*/;
  private native void s3136(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::sizeInvalid = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#prefWidth
  private native float g3151(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::prefWidth;}-*/;
  private native void s3150(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::prefWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#prefHeight
  private native float g3153(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::prefHeight;}-*/;
  private native void s3152(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::prefHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#sizeInvalid
  private native boolean g3155(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::sizeInvalid;}-*/;
  private native void s3154(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::sizeInvalid = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#alignment
  private native int g3157(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::alignment;}-*/;
  private native void s3156(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::alignment = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#reverse
  private native boolean g3159(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::reverse;}-*/;
  private native void s3158(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::reverse = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#round
  private native boolean g3161(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::round;}-*/;
  private native void s3160(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::round = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup#spacing
  private native float g3163(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::spacing;}-*/;
  private native void s3162(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::spacing = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Widget#needsLayout
  private native boolean g3176(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::needsLayout;}-*/;
  private native void s3175(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::needsLayout = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Widget#fillParent
  private native boolean g3178(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::fillParent;}-*/;
  private native void s3177(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::fillParent = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.Widget#layoutEnabled
  private native boolean g3180(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::layoutEnabled;}-*/;
  private native void s3179(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::layoutEnabled = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup#needsLayout
  private native boolean g3200(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::needsLayout;}-*/;
  private native void s3199(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::needsLayout = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup#fillParent
  private native boolean g3202(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::fillParent;}-*/;
  private native void s3201(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::fillParent = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup#layoutEnabled
  private native boolean g3204(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::layoutEnabled;}-*/;
  private native void s3203(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::layoutEnabled = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener#tmpCoords
  private native com.badlogic.gdx.math.Vector2 g3226(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::tmpCoords;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener#detector
  private native com.badlogic.gdx.input.GestureDetector g3228(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::detector;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener#event
  private native com.badlogic.gdx.scenes.scene2d.InputEvent g3230(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::event;}-*/;
  private native void s3229(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::event = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener#actor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3232(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::actor;}-*/;
  private native void s3231(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::actor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener#touchDownTarget
  private native com.badlogic.gdx.scenes.scene2d.Actor g3234(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::touchDownTarget;}-*/;
  private native void s3233(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::touchDownTarget = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.Align#center
  private native int g3250(com.badlogic.gdx.scenes.scene2d.utils.Align obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.Align::center;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.Align#top
  private native int g3252(com.badlogic.gdx.scenes.scene2d.utils.Align obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.Align::top;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.Align#bottom
  private native int g3254(com.badlogic.gdx.scenes.scene2d.utils.Align obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.Align::bottom;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.Align#left
  private native int g3256(com.badlogic.gdx.scenes.scene2d.utils.Align obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.Align::left;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.Align#right
  private native int g3258(com.badlogic.gdx.scenes.scene2d.utils.Align obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.Align::right;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#leftWidth
  private native float g3262(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::leftWidth;}-*/;
  private native void s3261(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::leftWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#rightWidth
  private native float g3264(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::rightWidth;}-*/;
  private native void s3263(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::rightWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#topHeight
  private native float g3266(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::topHeight;}-*/;
  private native void s3265(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::topHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#bottomHeight
  private native float g3268(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::bottomHeight;}-*/;
  private native void s3267(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::bottomHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#minWidth
  private native float g3270(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::minWidth;}-*/;
  private native void s3269(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::minWidth = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable#minHeight
  private native float g3272(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::minHeight;}-*/;
  private native void s3271(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::minHeight = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#tapSquareSize
  private native float g3295(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::tapSquareSize;}-*/;
  private native void s3294(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::tapSquareSize = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#touchDownX
  private native float g3297(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDownX;}-*/;
  private native void s3296(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDownX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#touchDownY
  private native float g3299(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDownY;}-*/;
  private native void s3298(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDownY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#pressedPointer
  private native int g3301(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressedPointer;}-*/;
  private native void s3300(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressedPointer = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#pressedButton
  private native int g3303(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressedButton;}-*/;
  private native void s3302(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressedButton = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#button
  private native int g3305(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::button;}-*/;
  private native void s3304(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::button = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#pressed
  private native boolean g3307(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressed;}-*/;
  private native void s3306(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::pressed = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#over
  private native boolean g3309(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::over;}-*/;
  private native void s3308(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::over = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#cancelled
  private native boolean g3311(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::cancelled;}-*/;
  private native void s3310(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::cancelled = value;}-*/;
  
  
  // com.badlogic.gdx.scenes.scene2d.utils.ClickListener#tapCount
  private native int g3315(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::tapCount;}-*/;
  private native void s3314(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::tapCount = value;}-*/;
  
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#tmpVector
  private native com.badlogic.gdx.math.Vector2 g3347(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::tmpVector;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#payload
  private native com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload g3349(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::payload;}-*/;
  private native void s3348(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::payload = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#dragActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3351(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActor;}-*/;
  private native void s3350(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#target
  private native com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target g3353(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::target;}-*/;
  private native void s3352(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::target = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#isValidTarget
  private native boolean g3355(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::isValidTarget;}-*/;
  private native void s3354(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::isValidTarget = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#targets
  private native com.badlogic.gdx.utils.Array g3357(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::targets;}-*/;
  private native void s3356(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.utils.Array value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::targets = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#sourceListeners
  private native com.badlogic.gdx.utils.ObjectMap g3359(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::sourceListeners;}-*/;
  private native void s3358(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.utils.ObjectMap value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::sourceListeners = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#tapSquareSize
  private native float g3361(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::tapSquareSize;}-*/;
  private native void s3360(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::tapSquareSize = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#button
  private native int g3363(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::button;}-*/;
  private native void s3362(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::button = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#dragActorX
  private native float g3365(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActorX;}-*/;
  private native void s3364(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActorX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#dragActorY
  private native float g3367(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActorY;}-*/;
  private native void s3366(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragActorY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#touchOffsetX
  private native float g3369(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::touchOffsetX;}-*/;
  private native void s3368(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::touchOffsetX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#touchOffsetY
  private native float g3371(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::touchOffsetY;}-*/;
  private native void s3370(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::touchOffsetY = value;}-*/;
  
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#dragTime
  private native int g3375(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragTime;}-*/;
  private native void s3374(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::dragTime = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop#activePointer
  private native int g3377(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::activePointer;}-*/;
  private native void s3376(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::activePointer = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload#dragActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3393(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::dragActor;}-*/;
  private native void s3392(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::dragActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload#validDragActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3395(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::validDragActor;}-*/;
  private native void s3394(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::validDragActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload#invalidDragActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3397(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::invalidDragActor;}-*/;
  private native void s3396(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::invalidDragActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload#object
  private native java.lang.Object g3399(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::object;}-*/;
  private native void s3398(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, java.lang.Object value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::object = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source#actor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3411(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source::actor;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target#actor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3417(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target::actor;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#tapSquareSize
  private native float g3424(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::tapSquareSize;}-*/;
  private native void s3423(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::tapSquareSize = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#touchDownX
  private native float g3426(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDownX;}-*/;
  private native void s3425(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDownX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#touchDownY
  private native float g3428(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDownY;}-*/;
  private native void s3427(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDownY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#pressedPointer
  private native int g3430(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::pressedPointer;}-*/;
  private native void s3429(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::pressedPointer = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#button
  private native int g3432(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::button;}-*/;
  private native void s3431(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, int value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::button = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#dragging
  private native boolean g3434(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::dragging;}-*/;
  private native void s3433(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::dragging = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#deltaX
  private native float g3436(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::deltaX;}-*/;
  private native void s3435(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::deltaX = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.DragListener#deltaY
  private native float g3438(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::deltaY;}-*/;
  private native void s3437(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::deltaY = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent#focused
  private native boolean g3463(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::focused;}-*/;
  private native void s3462(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, boolean value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::focused = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent#type
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type g3465(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::type;}-*/;
  private native void s3464(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::type = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent#relatedActor
  private native com.badlogic.gdx.scenes.scene2d.Actor g3467(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::relatedActor;}-*/;
  private native void s3466(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, com.badlogic.gdx.scenes.scene2d.Actor value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::relatedActor = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type#keyboard
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type g3478(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type::keyboard;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type#scroll
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type g3480(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type::scroll;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable#patch
  private native com.badlogic.gdx.graphics.g2d.NinePatch g3487(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable::patch;}-*/;
  private native void s3486(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable obj, com.badlogic.gdx.graphics.g2d.NinePatch value)  /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable::patch = value;}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ScissorStack#scissors
  private native com.badlogic.gdx.utils.Array g3496(com.badlogic.gdx.scenes.scene2d.utils.ScissorStack obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::scissors;}-*/;
  private native void s3495(com.badlogic.gdx.scenes.scene2d.utils.ScissorStack obj, com.badlogic.gdx.utils.Array value)  /*-{@com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::scissors = value}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ScissorStack#tmp
  private native com.badlogic.gdx.math.Vector3 g3498(com.badlogic.gdx.scenes.scene2d.utils.ScissorStack obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::tmp;}-*/;
  private native void s3497(com.badlogic.gdx.scenes.scene2d.utils.ScissorStack obj, com.badlogic.gdx.math.Vector3 value)  /*-{@com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::tmp = value}-*/;
  
  // com.badlogic.gdx.scenes.scene2d.utils.ScissorStack#viewport
  private native com.badlogic.gdx.math.Rectangle g3500(com.badlogic.gdx.scenes.scene2d.utils.ScissorStack obj) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::viewport;}-*/;
  
  // com.badlogic.gdx.utils.Array#items
  private native java.lang.Object[] g3510(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::items;}-*/;
  private native void s3509(com.badlogic.gdx.utils.Array obj, java.lang.Object[] value)  /*-{obj.@com.badlogic.gdx.utils.Array::items = value;}-*/;
  
  // com.badlogic.gdx.utils.Array#size
  private native int g3512(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::size;}-*/;
  private native void s3511(com.badlogic.gdx.utils.Array obj, int value)  /*-{obj.@com.badlogic.gdx.utils.Array::size = value;}-*/;
  
  // com.badlogic.gdx.utils.Array#ordered
  private native boolean g3514(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::ordered;}-*/;
  private native void s3513(com.badlogic.gdx.utils.Array obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.Array::ordered = value;}-*/;
  
  // com.badlogic.gdx.utils.Array#iterable
  private native com.badlogic.gdx.utils.Array.ArrayIterable g3516(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::iterable;}-*/;
  private native void s3515(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Array.ArrayIterable value)  /*-{obj.@com.badlogic.gdx.utils.Array::iterable = value;}-*/;
  
  // com.badlogic.gdx.utils.Array#predicateIterable
  private native com.badlogic.gdx.utils.Predicate.PredicateIterable g3518(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::predicateIterable;}-*/;
  private native void s3517(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Predicate.PredicateIterable value)  /*-{obj.@com.badlogic.gdx.utils.Array::predicateIterable = value;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterable#array
  private native com.badlogic.gdx.utils.Array g3568(com.badlogic.gdx.utils.Array.ArrayIterable obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterable::array;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterable#allowRemove
  private native boolean g3570(com.badlogic.gdx.utils.Array.ArrayIterable obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterable::allowRemove;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterable#iterator1
  private native com.badlogic.gdx.utils.Array.ArrayIterator g3572(com.badlogic.gdx.utils.Array.ArrayIterable obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterable::iterator1;}-*/;
  private native void s3571(com.badlogic.gdx.utils.Array.ArrayIterable obj, com.badlogic.gdx.utils.Array.ArrayIterator value)  /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterable::iterator1 = value;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterable#iterator2
  private native com.badlogic.gdx.utils.Array.ArrayIterator g3574(com.badlogic.gdx.utils.Array.ArrayIterable obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterable::iterator2;}-*/;
  private native void s3573(com.badlogic.gdx.utils.Array.ArrayIterable obj, com.badlogic.gdx.utils.Array.ArrayIterator value)  /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterable::iterator2 = value;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterator#array
  private native com.badlogic.gdx.utils.Array g3580(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::array;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterator#allowRemove
  private native boolean g3582(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::allowRemove;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterator#index
  private native int g3584(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::index;}-*/;
  private native void s3583(com.badlogic.gdx.utils.Array.ArrayIterator obj, int value)  /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterator::index = value;}-*/;
  
  // com.badlogic.gdx.utils.Array.ArrayIterator#valid
  private native boolean g3586(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::valid;}-*/;
  private native void s3585(com.badlogic.gdx.utils.Array.ArrayIterator obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterator::valid = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#keys
  private native java.lang.Object[] g3596(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::keys;}-*/;
  private native void s3595(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object[] value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::keys = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#values
  private native java.lang.Object[] g3598(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::values;}-*/;
  private native void s3597(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object[] value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::values = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#size
  private native int g3600(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::size;}-*/;
  private native void s3599(com.badlogic.gdx.utils.ArrayMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::size = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#ordered
  private native boolean g3602(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::ordered;}-*/;
  private native void s3601(com.badlogic.gdx.utils.ArrayMap obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::ordered = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#entries1
  private native com.badlogic.gdx.utils.ArrayMap.Entries g3604(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::entries1;}-*/;
  private native void s3603(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Entries value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::entries1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#entries2
  private native com.badlogic.gdx.utils.ArrayMap.Entries g3606(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::entries2;}-*/;
  private native void s3605(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Entries value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::entries2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#valuesIter1
  private native com.badlogic.gdx.utils.ArrayMap.Values g3608(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::valuesIter1;}-*/;
  private native void s3607(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Values value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::valuesIter1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#valuesIter2
  private native com.badlogic.gdx.utils.ArrayMap.Values g3610(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::valuesIter2;}-*/;
  private native void s3609(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Values value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::valuesIter2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#keysIter1
  private native com.badlogic.gdx.utils.ArrayMap.Keys g3612(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::keysIter1;}-*/;
  private native void s3611(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Keys value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::keysIter1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap#keysIter2
  private native com.badlogic.gdx.utils.ArrayMap.Keys g3614(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::keysIter2;}-*/;
  private native void s3613(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap.Keys value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap::keysIter2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Entries#map
  private native com.badlogic.gdx.utils.ArrayMap g3657(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::map;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Entries#entry
  private native com.badlogic.gdx.utils.ObjectMap.Entry g3659(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::entry;}-*/;
  private native void s3658(com.badlogic.gdx.utils.ArrayMap.Entries obj, com.badlogic.gdx.utils.ObjectMap.Entry value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Entries::entry = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Entries#index
  private native int g3661(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::index;}-*/;
  private native void s3660(com.badlogic.gdx.utils.ArrayMap.Entries obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Entries::index = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Entries#valid
  private native boolean g3663(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::valid;}-*/;
  private native void s3662(com.badlogic.gdx.utils.ArrayMap.Entries obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Entries::valid = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Keys#map
  private native com.badlogic.gdx.utils.ArrayMap g3672(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::map;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Keys#index
  private native int g3674(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::index;}-*/;
  private native void s3673(com.badlogic.gdx.utils.ArrayMap.Keys obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Keys::index = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Keys#valid
  private native boolean g3676(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::valid;}-*/;
  private native void s3675(com.badlogic.gdx.utils.ArrayMap.Keys obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Keys::valid = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Values#map
  private native com.badlogic.gdx.utils.ArrayMap g3686(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::map;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Values#index
  private native int g3688(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::index;}-*/;
  private native void s3687(com.badlogic.gdx.utils.ArrayMap.Values obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Values::index = value;}-*/;
  
  // com.badlogic.gdx.utils.ArrayMap.Values#valid
  private native boolean g3690(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::valid;}-*/;
  private native void s3689(com.badlogic.gdx.utils.ArrayMap.Values obj, boolean value)  /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Values::valid = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#PRIME1
  private native int g3701(com.badlogic.gdx.utils.ObjectMap obj) /*-{return @com.badlogic.gdx.utils.ObjectMap::PRIME1;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#PRIME2
  private native int g3703(com.badlogic.gdx.utils.ObjectMap obj) /*-{return @com.badlogic.gdx.utils.ObjectMap::PRIME2;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#PRIME3
  private native int g3705(com.badlogic.gdx.utils.ObjectMap obj) /*-{return @com.badlogic.gdx.utils.ObjectMap::PRIME3;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#size
  private native int g3707(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::size;}-*/;
  private native void s3706(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::size = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#keyTable
  private native java.lang.Object[] g3709(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::keyTable;}-*/;
  private native void s3708(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object[] value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::keyTable = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#valueTable
  private native java.lang.Object[] g3711(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::valueTable;}-*/;
  private native void s3710(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object[] value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::valueTable = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#capacity
  private native int g3713(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::capacity;}-*/;
  private native void s3712(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::capacity = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#stashSize
  private native int g3715(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::stashSize;}-*/;
  private native void s3714(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::stashSize = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#loadFactor
  private native float g3717(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::loadFactor;}-*/;
  private native void s3716(com.badlogic.gdx.utils.ObjectMap obj, float value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::loadFactor = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#hashShift
  private native int g3719(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::hashShift;}-*/;
  private native void s3718(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::hashShift = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#mask
  private native int g3721(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::mask;}-*/;
  private native void s3720(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::mask = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#threshold
  private native int g3723(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::threshold;}-*/;
  private native void s3722(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::threshold = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#stashCapacity
  private native int g3725(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::stashCapacity;}-*/;
  private native void s3724(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::stashCapacity = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#pushIterations
  private native int g3727(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::pushIterations;}-*/;
  private native void s3726(com.badlogic.gdx.utils.ObjectMap obj, int value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::pushIterations = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#entries1
  private native com.badlogic.gdx.utils.ObjectMap.Entries g3729(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::entries1;}-*/;
  private native void s3728(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Entries value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::entries1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#entries2
  private native com.badlogic.gdx.utils.ObjectMap.Entries g3731(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::entries2;}-*/;
  private native void s3730(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Entries value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::entries2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#values1
  private native com.badlogic.gdx.utils.ObjectMap.Values g3733(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::values1;}-*/;
  private native void s3732(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Values value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::values1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#values2
  private native com.badlogic.gdx.utils.ObjectMap.Values g3735(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::values2;}-*/;
  private native void s3734(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Values value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::values2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#keys1
  private native com.badlogic.gdx.utils.ObjectMap.Keys g3737(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::keys1;}-*/;
  private native void s3736(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Keys value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::keys1 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap#keys2
  private native com.badlogic.gdx.utils.ObjectMap.Keys g3739(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::keys2;}-*/;
  private native void s3738(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap.Keys value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap::keys2 = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap.Entries#entry
  private native com.badlogic.gdx.utils.ObjectMap.Entry g3774(com.badlogic.gdx.utils.ObjectMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entries::entry;}-*/;
  private native void s3773(com.badlogic.gdx.utils.ObjectMap.Entries obj, com.badlogic.gdx.utils.ObjectMap.Entry value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap.Entries::entry = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap.Entry#key
  private native java.lang.Object g3781(com.badlogic.gdx.utils.ObjectMap.Entry obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entry::key;}-*/;
  private native void s3780(com.badlogic.gdx.utils.ObjectMap.Entry obj, java.lang.Object value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap.Entry::key = value;}-*/;
  
  // com.badlogic.gdx.utils.ObjectMap.Entry#value
  private native java.lang.Object g3783(com.badlogic.gdx.utils.ObjectMap.Entry obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entry::value;}-*/;
  private native void s3782(com.badlogic.gdx.utils.ObjectMap.Entry obj, java.lang.Object value)  /*-{obj.@com.badlogic.gdx.utils.ObjectMap.Entry::value = value;}-*/;
  
  // com.badlogic.gdx.utils.OrderedMap#keys
  private native com.badlogic.gdx.utils.Array g3801(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::keys;}-*/;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  private native com.badlogic.gdx.graphics.Color m46(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::set(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m47(com.badlogic.gdx.graphics.Color obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.Color::set(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.Color m48(com.badlogic.gdx.graphics.Color obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::set(I)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m49(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::mul(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m50(com.badlogic.gdx.graphics.Color obj, float p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::mul(F)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m51(com.badlogic.gdx.graphics.Color obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.Color::mul(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.Color m52(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::add(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m53(com.badlogic.gdx.graphics.Color obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.Color::add(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.Color m54(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::sub(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.Color m55(com.badlogic.gdx.graphics.Color obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.Color::sub(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.Color m56(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::clamp()();}-*/;
  private native com.badlogic.gdx.graphics.Color m57(com.badlogic.gdx.graphics.Color obj, com.badlogic.gdx.graphics.Color p0,float p1) /*-{return obj.@com.badlogic.gdx.graphics.Color::lerp(Lcom/badlogic/gdx/graphics/Color;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.Color m58(com.badlogic.gdx.graphics.Color obj, float p0,float p1,float p2,float p3,float p4) /*-{return obj.@com.badlogic.gdx.graphics.Color::lerp(FFFFF)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.Color m59(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::premultiplyAlpha()();}-*/;
  private native boolean m60(com.badlogic.gdx.graphics.Color obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.graphics.Color::equals(Ljava/lang/Object;)(p0);}-*/;
  private native int m61(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::hashCode()();}-*/;
  private native float m62(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::toFloatBits()();}-*/;
  private native float m63(int p0,int p1,int p2,int p3) /*-{return @com.badlogic.gdx.graphics.Color::toFloatBits(IIII)(p0, p1, p2, p3);}-*/;
  private native float m64(float p0,float p1,float p2,float p3) /*-{return @com.badlogic.gdx.graphics.Color::toFloatBits(FFFF)(p0, p1, p2, p3);}-*/;
  private native int m65(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::toIntBits()();}-*/;
  private native int m66(int p0,int p1,int p2,int p3) /*-{return @com.badlogic.gdx.graphics.Color::toIntBits(IIII)(p0, p1, p2, p3);}-*/;
  private native java.lang.String m67(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::toString()();}-*/;
  private native com.badlogic.gdx.graphics.Color m68(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.Color::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native int m69(float p0) /*-{return @com.badlogic.gdx.graphics.Color::alpha(F)(p0);}-*/;
  private native int m70(float p0,float p1) /*-{return @com.badlogic.gdx.graphics.Color::luminanceAlpha(FF)(p0, p1);}-*/;
  private native int m71(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.graphics.Color::rgb565(FFF)(p0, p1, p2);}-*/;
  private native int m72(com.badlogic.gdx.graphics.Color p0) /*-{return @com.badlogic.gdx.graphics.Color::rgb565(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native int m73(float p0,float p1,float p2,float p3) /*-{return @com.badlogic.gdx.graphics.Color::rgba4444(FFFF)(p0, p1, p2, p3);}-*/;
  private native int m74(com.badlogic.gdx.graphics.Color p0) /*-{return @com.badlogic.gdx.graphics.Color::rgba4444(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native int m75(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.graphics.Color::rgb888(FFF)(p0, p1, p2);}-*/;
  private native int m76(com.badlogic.gdx.graphics.Color p0) /*-{return @com.badlogic.gdx.graphics.Color::rgb888(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native int m77(float p0,float p1,float p2,float p3) /*-{return @com.badlogic.gdx.graphics.Color::rgba8888(FFFF)(p0, p1, p2, p3);}-*/;
  private native int m78(com.badlogic.gdx.graphics.Color p0) /*-{return @com.badlogic.gdx.graphics.Color::rgba8888(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native Object m79(com.badlogic.gdx.graphics.Color p0,int p1) /*-{@com.badlogic.gdx.graphics.Color::rgb565ToColor(Lcom/badlogic/gdx/graphics/Color;I)(p0, p1);return null;}-*/;
  private native Object m80(com.badlogic.gdx.graphics.Color p0,int p1) /*-{@com.badlogic.gdx.graphics.Color::rgba4444ToColor(Lcom/badlogic/gdx/graphics/Color;I)(p0, p1);return null;}-*/;
  private native Object m81(com.badlogic.gdx.graphics.Color p0,int p1) /*-{@com.badlogic.gdx.graphics.Color::rgb888ToColor(Lcom/badlogic/gdx/graphics/Color;I)(p0, p1);return null;}-*/;
  private native Object m82(com.badlogic.gdx.graphics.Color p0,int p1) /*-{@com.badlogic.gdx.graphics.Color::rgba8888ToColor(Lcom/badlogic/gdx/graphics/Color;I)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m83(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::tmp()();}-*/;
  private native com.badlogic.gdx.graphics.Color m84(com.badlogic.gdx.graphics.Color obj) /*-{return obj.@com.badlogic.gdx.graphics.Color::cpy()();}-*/;
  private static com.badlogic.gdx.graphics.Color m85() {return new com.badlogic.gdx.graphics.Color();}
  private static com.badlogic.gdx.graphics.Color m86(int p0) {return new com.badlogic.gdx.graphics.Color(p0);}
  private static com.badlogic.gdx.graphics.Color m87(float p0,float p1,float p2,float p3) {return new com.badlogic.gdx.graphics.Color(p0, p1, p2, p3);}
  private static com.badlogic.gdx.graphics.Color m88(com.badlogic.gdx.graphics.Color p0) {return new com.badlogic.gdx.graphics.Color(p0);}
  private native Object m96(com.badlogic.gdx.graphics.Texture obj, com.badlogic.gdx.graphics.TextureData p0) /*-{obj.@com.badlogic.gdx.graphics.Texture::load(Lcom/badlogic/gdx/graphics/TextureData;)(p0);return null;}-*/;
  private native Object m97(com.badlogic.gdx.graphics.Texture obj) /*-{obj.@com.badlogic.gdx.graphics.Texture::reload()();return null;}-*/;
  private native Object m98(com.badlogic.gdx.graphics.Texture obj, com.badlogic.gdx.graphics.Pixmap p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.graphics.Texture::draw(Lcom/badlogic/gdx/graphics/Pixmap;II)(p0, p1, p2);return null;}-*/;
  private native int m99(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::getWidth()();}-*/;
  private native int m100(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::getHeight()();}-*/;
  private native int m101(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::getDepth()();}-*/;
  private native com.badlogic.gdx.graphics.TextureData m102(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::getTextureData()();}-*/;
  private native boolean m103(com.badlogic.gdx.graphics.Texture obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture::isManaged()();}-*/;
  private native Object m104(com.badlogic.gdx.graphics.Texture obj) /*-{obj.@com.badlogic.gdx.graphics.Texture::dispose()();return null;}-*/;
  private native Object m105(com.badlogic.gdx.Application p0,com.badlogic.gdx.graphics.Texture p1) /*-{@com.badlogic.gdx.graphics.Texture::addManagedTexture(Lcom/badlogic/gdx/Application;Lcom/badlogic/gdx/graphics/Texture;)(p0, p1);return null;}-*/;
  private native Object m106(com.badlogic.gdx.Application p0) /*-{@com.badlogic.gdx.graphics.Texture::clearAllTextures(Lcom/badlogic/gdx/Application;)(p0);return null;}-*/;
  private native Object m107(com.badlogic.gdx.Application p0) /*-{@com.badlogic.gdx.graphics.Texture::invalidateAllTextures(Lcom/badlogic/gdx/Application;)(p0);return null;}-*/;
  private native Object m108(com.badlogic.gdx.assets.AssetManager p0) /*-{@com.badlogic.gdx.graphics.Texture::setAssetManager(Lcom/badlogic/gdx/assets/AssetManager;)(p0);return null;}-*/;
  private native java.lang.String m109() /*-{return @com.badlogic.gdx.graphics.Texture::getManagedStatus()();}-*/;
  private native int m110() /*-{return @com.badlogic.gdx.graphics.Texture::getNumManagedTextures()();}-*/;
  private static com.badlogic.gdx.graphics.Texture m111(java.lang.String p0) {return new com.badlogic.gdx.graphics.Texture(p0);}
  private static com.badlogic.gdx.graphics.Texture m112(com.badlogic.gdx.files.FileHandle p0) {return new com.badlogic.gdx.graphics.Texture(p0);}
  private static com.badlogic.gdx.graphics.Texture m113(com.badlogic.gdx.files.FileHandle p0,boolean p1) {return new com.badlogic.gdx.graphics.Texture(p0, p1);}
  private static com.badlogic.gdx.graphics.Texture m114(com.badlogic.gdx.files.FileHandle p0,com.badlogic.gdx.graphics.Pixmap.Format p1,boolean p2) {return new com.badlogic.gdx.graphics.Texture(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.Texture m115(com.badlogic.gdx.graphics.Pixmap p0) {return new com.badlogic.gdx.graphics.Texture(p0);}
  private static com.badlogic.gdx.graphics.Texture m116(com.badlogic.gdx.graphics.Pixmap p0,boolean p1) {return new com.badlogic.gdx.graphics.Texture(p0, p1);}
  private static com.badlogic.gdx.graphics.Texture m117(com.badlogic.gdx.graphics.Pixmap p0,com.badlogic.gdx.graphics.Pixmap.Format p1,boolean p2) {return new com.badlogic.gdx.graphics.Texture(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.Texture m118(int p0,int p1,com.badlogic.gdx.graphics.Pixmap.Format p2) {return new com.badlogic.gdx.graphics.Texture(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.Texture m119(com.badlogic.gdx.graphics.TextureData p0) {return new com.badlogic.gdx.graphics.Texture(p0);}
  private native boolean m137(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture.TextureFilter::isMipMap()();}-*/;
  private native int m138(com.badlogic.gdx.graphics.Texture.TextureFilter obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture.TextureFilter::getGLEnum()();}-*/;
  private native com.badlogic.gdx.graphics.Texture.TextureFilter[] m139() /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::values()();}-*/;
  private native com.badlogic.gdx.graphics.Texture.TextureFilter m140(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.Texture.TextureFilter::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native int m151(com.badlogic.gdx.graphics.Texture.TextureWrap obj) /*-{return obj.@com.badlogic.gdx.graphics.Texture.TextureWrap::getGLEnum()();}-*/;
  private native com.badlogic.gdx.graphics.Texture.TextureWrap[] m152() /*-{return @com.badlogic.gdx.graphics.Texture.TextureWrap::values()();}-*/;
  private native com.badlogic.gdx.graphics.Texture.TextureWrap m153(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.Texture.TextureWrap::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.TextureData.TextureDataType[] m163() /*-{return @com.badlogic.gdx.graphics.TextureData.TextureDataType::values()();}-*/;
  private native com.badlogic.gdx.graphics.TextureData.TextureDataType m164(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.TextureData.TextureDataType::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m179() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::Position()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m180(int p0) /*-{return @com.badlogic.gdx.graphics.VertexAttribute::TexCoords(I)(p0);}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m181() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::Normal()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m182() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::Color()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m183() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::ColorUnpacked()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m184() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::Tangent()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m185() /*-{return @com.badlogic.gdx.graphics.VertexAttribute::Binormal()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m186(int p0) /*-{return @com.badlogic.gdx.graphics.VertexAttribute::BoneWeight(I)(p0);}-*/;
  private native boolean m187(com.badlogic.gdx.graphics.VertexAttribute obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::equals(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m188(com.badlogic.gdx.graphics.VertexAttribute obj, com.badlogic.gdx.graphics.VertexAttribute p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::equals(Lcom/badlogic/gdx/graphics/VertexAttribute;)(p0);}-*/;
  private native int m189(com.badlogic.gdx.graphics.VertexAttribute obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttribute::getKey()();}-*/;
  private static com.badlogic.gdx.graphics.VertexAttribute m190(int p0,int p1,java.lang.String p2) {return new com.badlogic.gdx.graphics.VertexAttribute(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.VertexAttribute m191(int p0,int p1,java.lang.String p2,int p3) {return new com.badlogic.gdx.graphics.VertexAttribute(p0, p1, p2, p3);}
  private native int m202(com.badlogic.gdx.graphics.VertexAttributes obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::getOffset(I)(p0);}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m203(com.badlogic.gdx.graphics.VertexAttributes obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::findByUsage(I)(p0);}-*/;
  private native int m204(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::calculateOffsets()();}-*/;
  private native Object m205(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{obj.@com.badlogic.gdx.graphics.VertexAttributes::checkGLES1Validity()();return null;}-*/;
  private native int m206(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::size()();}-*/;
  private native com.badlogic.gdx.graphics.VertexAttribute m207(com.badlogic.gdx.graphics.VertexAttributes obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::get(I)(p0);}-*/;
  private native java.lang.String m208(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::toString()();}-*/;
  private native boolean m209(com.badlogic.gdx.graphics.VertexAttributes obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::equals(Ljava/lang/Object;)(p0);}-*/;
  
  private native java.util.Iterator m211(com.badlogic.gdx.graphics.VertexAttributes obj) /*-{return obj.@com.badlogic.gdx.graphics.VertexAttributes::iterator()();}-*/;
  private static com.badlogic.gdx.graphics.VertexAttributes m212(com.badlogic.gdx.graphics.VertexAttribute[] p0) {return new com.badlogic.gdx.graphics.VertexAttributes(p0);}
  private static com.badlogic.gdx.graphics.VertexAttributes.Usage m232() {return new com.badlogic.gdx.graphics.VertexAttributes.Usage();}
  private native Object m256(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::load(Lcom/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData;)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m257(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m258(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3,int p4,int p5) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FFII)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m259(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::drawMultiLine(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m260(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3,float p4,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p5) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::drawMultiLine(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m261(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3,float p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::drawWrapped(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FFF)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m262(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.g2d.Batch p0,java.lang.CharSequence p1,float p2,float p3,float p4,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p5) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::drawWrapped(Lcom/badlogic/gdx/graphics/g2d/Batch;Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m263(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getBounds(Ljava/lang/CharSequence;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m264(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p1) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getBounds(Ljava/lang/CharSequence;Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m265(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getBounds(Ljava/lang/CharSequence;II)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m266(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,int p1,int p2,com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getBounds(Ljava/lang/CharSequence;IILcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m267(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getMultiLineBounds(Ljava/lang/CharSequence;)(p0);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m268(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p1) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getMultiLineBounds(Ljava/lang/CharSequence;Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m269(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,float p1) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getWrappedBounds(Ljava/lang/CharSequence;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m270(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,float p1,com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getWrappedBounds(Ljava/lang/CharSequence;FLcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;)(p0, p1, p2);}-*/;
  private native Object m271(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,com.badlogic.gdx.utils.FloatArray p1,com.badlogic.gdx.utils.FloatArray p2) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::computeGlyphAdvancesAndPositions(Ljava/lang/CharSequence;Lcom/badlogic/gdx/utils/FloatArray;Lcom/badlogic/gdx/utils/FloatArray;)(p0, p1, p2);return null;}-*/;
  private native int m272(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0,int p1,int p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::computeVisibleGlyphs(Ljava/lang/CharSequence;IIF)(p0, p1, p2, p3);}-*/;
  private native Object m273(com.badlogic.gdx.graphics.g2d.BitmapFont obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setColor(F)(p0);return null;}-*/;
  private native Object m274(com.badlogic.gdx.graphics.g2d.BitmapFont obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native Object m275(com.badlogic.gdx.graphics.g2d.BitmapFont obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setColor(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m276(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getColor()();}-*/;
  private native Object m277(com.badlogic.gdx.graphics.g2d.BitmapFont obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setScale(FF)(p0, p1);return null;}-*/;
  private native Object m278(com.badlogic.gdx.graphics.g2d.BitmapFont obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setScale(F)(p0);return null;}-*/;
  private native Object m279(com.badlogic.gdx.graphics.g2d.BitmapFont obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::scale(F)(p0);return null;}-*/;
  private native float m280(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getScaleX()();}-*/;
  private native float m281(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getScaleY()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.TextureRegion m282(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getRegion()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.TextureRegion m283(com.badlogic.gdx.graphics.g2d.BitmapFont obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getRegion(I)(p0);}-*/;
  private native com.badlogic.gdx.graphics.g2d.TextureRegion[] m284(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getRegions()();}-*/;
  private native float m285(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getLineHeight()();}-*/;
  private native float m286(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getSpaceWidth()();}-*/;
  private native float m287(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getXHeight()();}-*/;
  private native float m288(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getCapHeight()();}-*/;
  private native float m289(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getAscent()();}-*/;
  private native float m290(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getDescent()();}-*/;
  private native boolean m291(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::isFlipped()();}-*/;
  private native Object m292(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::dispose()();return null;}-*/;
  private native Object m293(com.badlogic.gdx.graphics.g2d.BitmapFont obj, java.lang.CharSequence p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setFixedWidthGlyphs(Ljava/lang/CharSequence;)(p0);return null;}-*/;
  private native boolean m294(com.badlogic.gdx.graphics.g2d.BitmapFont obj, char p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::containsCharacter(C)(p0);}-*/;
  private native Object m295(com.badlogic.gdx.graphics.g2d.BitmapFont obj, boolean p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setUseIntegerPositions(Z)(p0);return null;}-*/;
  private native boolean m296(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::usesIntegerPositions()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFontCache m297(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getCache()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData m298(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::getData()();}-*/;
  private native boolean m299(com.badlogic.gdx.graphics.g2d.BitmapFont obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::ownsTexture()();}-*/;
  private native Object m300(com.badlogic.gdx.graphics.g2d.BitmapFont obj, boolean p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont::setOwnsTexture(Z)(p0);return null;}-*/;
  private native int m301(java.lang.CharSequence p0,char p1,int p2) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::indexOf(Ljava/lang/CharSequence;CI)(p0, p1, p2);}-*/;
  private native boolean m302(char p0) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont::isWhitespace(C)(p0);}-*/;
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m303() {return new com.badlogic.gdx.graphics.g2d.BitmapFont();}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m304(boolean p0) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m305(com.badlogic.gdx.files.FileHandle p0,com.badlogic.gdx.graphics.g2d.TextureRegion p1) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m306(com.badlogic.gdx.files.FileHandle p0,com.badlogic.gdx.graphics.g2d.TextureRegion p1,boolean p2) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m307(com.badlogic.gdx.files.FileHandle p0) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m308(com.badlogic.gdx.files.FileHandle p0,boolean p1) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m309(com.badlogic.gdx.files.FileHandle p0,com.badlogic.gdx.files.FileHandle p1,boolean p2) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m310(com.badlogic.gdx.files.FileHandle p0,com.badlogic.gdx.files.FileHandle p1,boolean p2,boolean p3) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1, p2, p3);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m311(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData p0,com.badlogic.gdx.graphics.g2d.TextureRegion p1,boolean p2) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont m312(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData p0,com.badlogic.gdx.graphics.g2d.TextureRegion[] p1,boolean p2) {return new com.badlogic.gdx.graphics.g2d.BitmapFont(p0, p1, p2);}
  private native Object m342(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, int p0,com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::setGlyph(ILcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph m343(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getFirstGlyph()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph m344(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, char p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getGlyph(C)(p0);}-*/;
  private native java.lang.String m345(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getImagePath()();}-*/;
  private native java.lang.String m346(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getImagePath(I)(p0);}-*/;
  private native java.lang.String[] m347(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getImagePaths()();}-*/;
  private native com.badlogic.gdx.files.FileHandle m348(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getFontFile()();}-*/;
  private static com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData m349() {return new com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData();}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData m350(com.badlogic.gdx.files.FileHandle p0,boolean p1) {return new com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData(p0, p1);}
  private native int m380(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, char p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::getKerning(C)(p0);}-*/;
  private native Object m381(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph obj, int p0,int p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph::setKerning(II)(p0, p1);return null;}-*/;
  private static com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph m382() {return new com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph();}
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[] m391() /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment::values()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment m392(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native Object m399(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds obj, com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds::set(Lcom/badlogic/gdx/graphics/g2d/BitmapFont$TextBounds;)(p0);return null;}-*/;
  private static com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m400() {return new com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds();}
  private static com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m401(com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds p0) {return new com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds(p0);}
  private native Object m427(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setPosition(FF)(p0, p1);return null;}-*/;
  private native Object m428(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::translate(FF)(p0, p1);return null;}-*/;
  private native Object m429(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColors(F)(p0);return null;}-*/;
  private native Object m430(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColors(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native Object m431(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColors(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native Object m432(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.Color p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColors(Lcom/badlogic/gdx/graphics/Color;II)(p0, p1, p2);return null;}-*/;
  private native Object m433(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native Object m434(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColor(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native Object m435(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setColor(F)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m436(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getColor()();}-*/;
  private native Object m437(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.g2d.Batch p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;)(p0);return null;}-*/;
  private native Object m438(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.g2d.Batch p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;II)(p0, p1, p2);return null;}-*/;
  private native Object m439(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private native Object m440(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::clear()();return null;}-*/;
  private native Object m441(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::requireSequence(Ljava/lang/CharSequence;II)(p0, p1, p2);return null;}-*/;
  private native Object m442(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, int p0,int p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::require(II)(p0, p1);return null;}-*/;
  private native float m443(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addToCache(Ljava/lang/CharSequence;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native Object m444(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph p0,float p1,float p2,float p3,float p4) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addGlyph(Lcom/badlogic/gdx/graphics/g2d/BitmapFont$Glyph;FFFF)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m445(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setText(Ljava/lang/CharSequence;FF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m446(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setText(Ljava/lang/CharSequence;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m447(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addText(Ljava/lang/CharSequence;FF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m448(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addText(Ljava/lang/CharSequence;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m449(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setMultiLineText(Ljava/lang/CharSequence;FF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m450(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setMultiLineText(Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m451(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addMultiLineText(Ljava/lang/CharSequence;FF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m452(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addMultiLineText(Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m453(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setWrappedText(Ljava/lang/CharSequence;FFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m454(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setWrappedText(Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m455(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addWrappedText(Ljava/lang/CharSequence;FFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m456(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, java.lang.CharSequence p0,float p1,float p2,float p3,com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment p4) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::addWrappedText(Ljava/lang/CharSequence;FFFLcom/badlogic/gdx/graphics/g2d/BitmapFont$HAlignment;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds m457(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getBounds()();}-*/;
  private native float m458(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getX()();}-*/;
  private native float m459(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getY()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.BitmapFont m460(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getFont()();}-*/;
  private native Object m461(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, boolean p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::setUseIntegerPositions(Z)(p0);return null;}-*/;
  private native boolean m462(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::usesIntegerPositions()();}-*/;
  private native float[] m463(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getVertices()();}-*/;
  private native float[] m464(com.badlogic.gdx.graphics.g2d.BitmapFontCache obj, int p0) /*-{return obj.@com.badlogic.gdx.graphics.g2d.BitmapFontCache::getVertices(I)(p0);}-*/;
  private static com.badlogic.gdx.graphics.g2d.BitmapFontCache m465(com.badlogic.gdx.graphics.g2d.BitmapFont p0) {return new com.badlogic.gdx.graphics.g2d.BitmapFontCache(p0);}
  private static com.badlogic.gdx.graphics.g2d.BitmapFontCache m466(com.badlogic.gdx.graphics.g2d.BitmapFont p0,boolean p1) {return new com.badlogic.gdx.graphics.g2d.BitmapFontCache(p0, p1);}
  private native Object m534(com.badlogic.gdx.graphics.g2d.NinePatch obj, com.badlogic.gdx.graphics.g2d.TextureRegion[] p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::load([Lcom/badlogic/gdx/graphics/g2d/TextureRegion;)(p0);return null;}-*/;
  private native int m535(com.badlogic.gdx.graphics.g2d.NinePatch obj, com.badlogic.gdx.graphics.g2d.TextureRegion p0,float p1,boolean p2,boolean p3) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::add(Lcom/badlogic/gdx/graphics/g2d/TextureRegion;FZZ)(p0, p1, p2, p3);}-*/;
  private native Object m536(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0,float p1,float p2,float p3,float p4,float p5) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::set(IFFFFF)(p0, p1, p2, p3, p4, p5);return null;}-*/;
  private native Object m537(com.badlogic.gdx.graphics.g2d.NinePatch obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1,float p2,float p3,float p4) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;FFFF)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m538(com.badlogic.gdx.graphics.g2d.NinePatch obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m539(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getColor()();}-*/;
  private native float m540(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getLeftWidth()();}-*/;
  private native Object m541(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setLeftWidth(F)(p0);return null;}-*/;
  private native float m542(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getRightWidth()();}-*/;
  private native Object m543(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setRightWidth(F)(p0);return null;}-*/;
  private native float m544(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getTopHeight()();}-*/;
  private native Object m545(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setTopHeight(F)(p0);return null;}-*/;
  private native float m546(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getBottomHeight()();}-*/;
  private native Object m547(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setBottomHeight(F)(p0);return null;}-*/;
  private native float m548(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getMiddleWidth()();}-*/;
  private native Object m549(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setMiddleWidth(F)(p0);return null;}-*/;
  private native float m550(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getMiddleHeight()();}-*/;
  private native Object m551(com.badlogic.gdx.graphics.g2d.NinePatch obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setMiddleHeight(F)(p0);return null;}-*/;
  private native float m552(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getTotalWidth()();}-*/;
  private native float m553(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getTotalHeight()();}-*/;
  private native Object m554(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0,int p1,int p2,int p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setPadding(IIII)(p0, p1, p2, p3);return null;}-*/;
  private native float m555(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getPadLeft()();}-*/;
  private native Object m556(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setPadLeft(I)(p0);return null;}-*/;
  private native float m557(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getPadRight()();}-*/;
  private native Object m558(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setPadRight(I)(p0);return null;}-*/;
  private native float m559(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getPadTop()();}-*/;
  private native Object m560(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setPadTop(I)(p0);return null;}-*/;
  private native float m561(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getPadBottom()();}-*/;
  private native Object m562(com.badlogic.gdx.graphics.g2d.NinePatch obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.NinePatch::setPadBottom(I)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.Texture m563(com.badlogic.gdx.graphics.g2d.NinePatch obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.NinePatch::getTexture()();}-*/;
  private static com.badlogic.gdx.graphics.g2d.NinePatch m564(com.badlogic.gdx.graphics.Texture p0,int p1,int p2,int p3,int p4) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m565(com.badlogic.gdx.graphics.g2d.TextureRegion p0,int p1,int p2,int p3,int p4) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m566(com.badlogic.gdx.graphics.Texture p0,com.badlogic.gdx.graphics.Color p1) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0, p1);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m567(com.badlogic.gdx.graphics.Texture p0) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m568(com.badlogic.gdx.graphics.g2d.TextureRegion p0,com.badlogic.gdx.graphics.Color p1) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0, p1);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m569(com.badlogic.gdx.graphics.g2d.TextureRegion p0) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m570(com.badlogic.gdx.graphics.g2d.TextureRegion[] p0) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m571(com.badlogic.gdx.graphics.g2d.NinePatch p0) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0);}
  private static com.badlogic.gdx.graphics.g2d.NinePatch m572(com.badlogic.gdx.graphics.g2d.NinePatch p0,com.badlogic.gdx.graphics.Color p1) {return new com.badlogic.gdx.graphics.g2d.NinePatch(p0, p1);}
  private native Object m588(com.badlogic.gdx.graphics.g2d.TextureRegion obj, com.badlogic.gdx.graphics.Texture p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegion(Lcom/badlogic/gdx/graphics/Texture;)(p0);return null;}-*/;
  private native Object m589(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0,int p1,int p2,int p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegion(IIII)(p0, p1, p2, p3);return null;}-*/;
  private native Object m590(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegion(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native Object m591(com.badlogic.gdx.graphics.g2d.TextureRegion obj, com.badlogic.gdx.graphics.g2d.TextureRegion p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegion(Lcom/badlogic/gdx/graphics/g2d/TextureRegion;)(p0);return null;}-*/;
  private native Object m592(com.badlogic.gdx.graphics.g2d.TextureRegion obj, com.badlogic.gdx.graphics.g2d.TextureRegion p0,int p1,int p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegion(Lcom/badlogic/gdx/graphics/g2d/TextureRegion;IIII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.graphics.Texture m593(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getTexture()();}-*/;
  private native Object m594(com.badlogic.gdx.graphics.g2d.TextureRegion obj, com.badlogic.gdx.graphics.Texture p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setTexture(Lcom/badlogic/gdx/graphics/Texture;)(p0);return null;}-*/;
  private native float m595(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getU()();}-*/;
  private native Object m596(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setU(F)(p0);return null;}-*/;
  private native float m597(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getV()();}-*/;
  private native Object m598(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setV(F)(p0);return null;}-*/;
  private native float m599(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getU2()();}-*/;
  private native Object m600(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setU2(F)(p0);return null;}-*/;
  private native float m601(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getV2()();}-*/;
  private native Object m602(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setV2(F)(p0);return null;}-*/;
  private native int m603(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getRegionX()();}-*/;
  private native Object m604(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegionX(I)(p0);return null;}-*/;
  private native int m605(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getRegionY()();}-*/;
  private native Object m606(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegionY(I)(p0);return null;}-*/;
  private native int m607(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getRegionWidth()();}-*/;
  private native Object m608(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegionWidth(I)(p0);return null;}-*/;
  private native int m609(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::getRegionHeight()();}-*/;
  private native Object m610(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::setRegionHeight(I)(p0);return null;}-*/;
  private native Object m611(com.badlogic.gdx.graphics.g2d.TextureRegion obj, boolean p0,boolean p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::flip(ZZ)(p0, p1);return null;}-*/;
  private native boolean m612(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::isFlipX()();}-*/;
  private native boolean m613(com.badlogic.gdx.graphics.g2d.TextureRegion obj) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::isFlipY()();}-*/;
  private native Object m614(com.badlogic.gdx.graphics.g2d.TextureRegion obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::scroll(FF)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.graphics.g2d.TextureRegion[][] m615(com.badlogic.gdx.graphics.g2d.TextureRegion obj, int p0,int p1) /*-{return obj.@com.badlogic.gdx.graphics.g2d.TextureRegion::split(II)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.g2d.TextureRegion[][] m616(com.badlogic.gdx.graphics.Texture p0,int p1,int p2) /*-{return @com.badlogic.gdx.graphics.g2d.TextureRegion::split(Lcom/badlogic/gdx/graphics/Texture;II)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m617() {return new com.badlogic.gdx.graphics.g2d.TextureRegion();}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m618(com.badlogic.gdx.graphics.Texture p0) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0);}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m619(com.badlogic.gdx.graphics.Texture p0,int p1,int p2) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0, p1, p2);}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m620(com.badlogic.gdx.graphics.Texture p0,int p1,int p2,int p3,int p4) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m621(com.badlogic.gdx.graphics.Texture p0,float p1,float p2,float p3,float p4) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m622(com.badlogic.gdx.graphics.g2d.TextureRegion p0) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0);}
  private static com.badlogic.gdx.graphics.g2d.TextureRegion m623(com.badlogic.gdx.graphics.g2d.TextureRegion p0,int p1,int p2,int p3,int p4) {return new com.badlogic.gdx.graphics.g2d.TextureRegion(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g3d.model.Animation m633() {return new com.badlogic.gdx.graphics.g3d.model.Animation();}
  private native boolean m645(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, com.badlogic.gdx.graphics.g3d.model.MeshPart p0) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::equals(Lcom/badlogic/gdx/graphics/g3d/model/MeshPart;)(p0);}-*/;
  private native boolean m646(com.badlogic.gdx.graphics.g3d.model.MeshPart obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.MeshPart::equals(Ljava/lang/Object;)(p0);}-*/;
  private static com.badlogic.gdx.graphics.g3d.model.MeshPart m647() {return new com.badlogic.gdx.graphics.g3d.model.MeshPart();}
  private static com.badlogic.gdx.graphics.g3d.model.MeshPart m648(java.lang.String p0,com.badlogic.gdx.graphics.Mesh p1,int p2,int p3,int p4) {return new com.badlogic.gdx.graphics.g3d.model.MeshPart(p0, p1, p2, p3, p4);}
  private static com.badlogic.gdx.graphics.g3d.model.MeshPart m649(com.badlogic.gdx.graphics.g3d.model.MeshPart p0) {return new com.badlogic.gdx.graphics.g3d.model.MeshPart(p0);}
  private native com.badlogic.gdx.math.Matrix4 m671(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateLocalTransform()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m672(com.badlogic.gdx.graphics.g3d.model.Node obj) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateWorldTransform()();}-*/;
  private native Object m673(com.badlogic.gdx.graphics.g3d.model.Node obj, boolean p0) /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateTransforms(Z)(p0);return null;}-*/;
  private native Object m674(com.badlogic.gdx.graphics.g3d.model.Node obj, boolean p0) /*-{obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateBoneTransforms(Z)(p0);return null;}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m675(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateBoundingBox(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m676(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.math.collision.BoundingBox p0,boolean p1) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::calculateBoundingBox(Lcom/badlogic/gdx/math/collision/BoundingBox;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m677(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::extendBoundingBox(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m678(com.badlogic.gdx.graphics.g3d.model.Node obj, com.badlogic.gdx.math.collision.BoundingBox p0,boolean p1) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::extendBoundingBox(Lcom/badlogic/gdx/math/collision/BoundingBox;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.graphics.g3d.model.Node m679(com.badlogic.gdx.graphics.g3d.model.Node obj, java.lang.String p0,boolean p1,boolean p2) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.Node::getChild(Ljava/lang/String;ZZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.graphics.g3d.model.Node m680(com.badlogic.gdx.utils.Array p0,java.lang.String p1,boolean p2,boolean p3) /*-{return @com.badlogic.gdx.graphics.g3d.model.Node::getNode(Lcom/badlogic/gdx/utils/Array;Ljava/lang/String;ZZ)(p0, p1, p2, p3);}-*/;
  private static com.badlogic.gdx.graphics.g3d.model.Node m681() {return new com.badlogic.gdx.graphics.g3d.model.Node();}
  private static com.badlogic.gdx.graphics.g3d.model.NodeAnimation m687() {return new com.badlogic.gdx.graphics.g3d.model.NodeAnimation();}
  private static com.badlogic.gdx.graphics.g3d.model.NodeKeyframe m697() {return new com.badlogic.gdx.graphics.g3d.model.NodeKeyframe();}
  private native com.badlogic.gdx.graphics.g3d.Renderable m707(com.badlogic.gdx.graphics.g3d.model.NodePart obj, com.badlogic.gdx.graphics.g3d.Renderable p0) /*-{return obj.@com.badlogic.gdx.graphics.g3d.model.NodePart::setRenderable(Lcom/badlogic/gdx/graphics/g3d/Renderable;)(p0);}-*/;
  private static com.badlogic.gdx.graphics.g3d.model.NodePart m708() {return new com.badlogic.gdx.graphics.g3d.model.NodePart();}
  private static com.badlogic.gdx.graphics.g3d.model.NodePart m709(com.badlogic.gdx.graphics.g3d.model.MeshPart p0,com.badlogic.gdx.graphics.g3d.Material p1) {return new com.badlogic.gdx.graphics.g3d.model.NodePart(p0, p1);}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation m715() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation();}
  private native Object m729(com.badlogic.gdx.graphics.g3d.model.data.ModelData obj, com.badlogic.gdx.graphics.g3d.model.data.ModelMesh p0) /*-{obj.@com.badlogic.gdx.graphics.g3d.model.data.ModelData::addMesh(Lcom/badlogic/gdx/graphics/g3d/model/data/ModelMesh;)(p0);return null;}-*/;
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelData m730() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelData();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial m752() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial();}
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[] m758() /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType::values()();}-*/;
  private native com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType m759(java.lang.String p0) /*-{return @com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType::valueOf(Ljava/lang/String;)(p0);}-*/;
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelMesh m770() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelMesh();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart m778() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelNode m797() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelNode();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation m803() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe m813() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart m823() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart();}
  private static com.badlogic.gdx.graphics.g3d.model.data.ModelTexture m859() {return new com.badlogic.gdx.graphics.g3d.model.data.ModelTexture();}
  private native com.badlogic.gdx.math.Vector m875(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,boolean p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.BSpline::cubic(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m876(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.BSpline::cubic(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m877(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,boolean p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.BSpline::cubic_derivative(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m878(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.BSpline::cubic_derivative(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m879(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,int p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.BSpline::calculate(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;IZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m880(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,int p4,boolean p5,com.badlogic.gdx.math.Vector p6) /*-{return @com.badlogic.gdx.math.BSpline::calculate(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;IZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native com.badlogic.gdx.math.Vector m881(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,int p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.BSpline::derivative(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;IZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m882(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,int p4,boolean p5,com.badlogic.gdx.math.Vector p6) /*-{return @com.badlogic.gdx.math.BSpline::derivative(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;IZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native com.badlogic.gdx.math.BSpline m883(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector[] p0,int p1,boolean p2) /*-{return obj.@com.badlogic.gdx.math.BSpline::set([Lcom/badlogic/gdx/math/Vector;IZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector m884(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.BSpline::valueAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m885(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,int p1,float p2) /*-{return obj.@com.badlogic.gdx.math.BSpline::valueAt(Lcom/badlogic/gdx/math/Vector;IF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector m886(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.BSpline::derivativeAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m887(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,int p1,float p2) /*-{return obj.@com.badlogic.gdx.math.BSpline::derivativeAt(Lcom/badlogic/gdx/math/Vector;IF)(p0, p1, p2);}-*/;
  private native int m888(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.BSpline::nearest(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native int m889(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.BSpline::nearest(Lcom/badlogic/gdx/math/Vector;II)(p0, p1, p2);}-*/;
  private native float m890(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.BSpline::approximate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native float m891(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.BSpline::approximate(Lcom/badlogic/gdx/math/Vector;II)(p0, p1, p2);}-*/;
  private native float m892(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0,int p1) /*-{return obj.@com.badlogic.gdx.math.BSpline::approximate(Lcom/badlogic/gdx/math/Vector;I)(p0, p1);}-*/;
  private native float m893(com.badlogic.gdx.math.BSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.BSpline::locate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private static com.badlogic.gdx.math.BSpline m894() {return new com.badlogic.gdx.math.BSpline();}
  private static com.badlogic.gdx.math.BSpline m895(com.badlogic.gdx.math.Vector[] p0,int p1,boolean p2) {return new com.badlogic.gdx.math.BSpline(p0, p1, p2);}
  private native com.badlogic.gdx.math.Vector m901(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.Bezier::linear(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m902(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.Bezier::linear_derivative(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m903(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.Bezier::quadratic(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m904(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.Bezier::quadratic_derivative(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m905(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4,com.badlogic.gdx.math.Vector p5,com.badlogic.gdx.math.Vector p6) /*-{return @com.badlogic.gdx.math.Bezier::cubic(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native com.badlogic.gdx.math.Vector m906(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector p2,com.badlogic.gdx.math.Vector p3,com.badlogic.gdx.math.Vector p4,com.badlogic.gdx.math.Vector p5,com.badlogic.gdx.math.Vector p6) /*-{return @com.badlogic.gdx.math.Bezier::cubic_derivative(Lcom/badlogic/gdx/math/Vector;FLcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;Lcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native com.badlogic.gdx.math.Bezier m907(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector[] p0) /*-{return obj.@com.badlogic.gdx.math.Bezier::set([Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native com.badlogic.gdx.math.Bezier m908(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector[] p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.Bezier::set([Lcom/badlogic/gdx/math/Vector;II)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Bezier m909(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.utils.Array p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.Bezier::set(Lcom/badlogic/gdx/utils/Array;II)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector m910(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Bezier::valueAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m911(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Bezier::derivativeAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native float m912(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.Bezier::approximate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native float m913(com.badlogic.gdx.math.Bezier obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.Bezier::locate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private static com.badlogic.gdx.math.Bezier m914() {return new com.badlogic.gdx.math.Bezier();}
  private static com.badlogic.gdx.math.Bezier m915(com.badlogic.gdx.math.Vector[] p0) {return new com.badlogic.gdx.math.Bezier(p0);}
  private static com.badlogic.gdx.math.Bezier m916(com.badlogic.gdx.math.Vector[] p0,int p1,int p2) {return new com.badlogic.gdx.math.Bezier(p0, p1, p2);}
  private static com.badlogic.gdx.math.Bezier m917(com.badlogic.gdx.utils.Array p0,int p1,int p2) {return new com.badlogic.gdx.math.Bezier(p0, p1, p2);}
  private native com.badlogic.gdx.utils.Array m923(com.badlogic.gdx.math.Bresenham2 obj, com.badlogic.gdx.math.GridPoint2 p0,com.badlogic.gdx.math.GridPoint2 p1) /*-{return obj.@com.badlogic.gdx.math.Bresenham2::line(Lcom/badlogic/gdx/math/GridPoint2;Lcom/badlogic/gdx/math/GridPoint2;)(p0, p1);}-*/;
  private native com.badlogic.gdx.utils.Array m924(com.badlogic.gdx.math.Bresenham2 obj, int p0,int p1,int p2,int p3) /*-{return obj.@com.badlogic.gdx.math.Bresenham2::line(IIII)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.utils.Array m925(com.badlogic.gdx.math.Bresenham2 obj, int p0,int p1,int p2,int p3,com.badlogic.gdx.utils.Pool p4,com.badlogic.gdx.utils.Array p5) /*-{return obj.@com.badlogic.gdx.math.Bresenham2::line(IIIILcom/badlogic/gdx/utils/Pool;Lcom/badlogic/gdx/utils/Array;)(p0, p1, p2, p3, p4, p5);}-*/;
  private static com.badlogic.gdx.math.Bresenham2 m926() {return new com.badlogic.gdx.math.Bresenham2();}
  private native com.badlogic.gdx.math.Vector m938(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,boolean p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.CatmullRomSpline::calculate(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m939(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.CatmullRomSpline::calculate(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector m940(com.badlogic.gdx.math.Vector p0,float p1,com.badlogic.gdx.math.Vector[] p2,boolean p3,com.badlogic.gdx.math.Vector p4) /*-{return @com.badlogic.gdx.math.CatmullRomSpline::derivative(Lcom/badlogic/gdx/math/Vector;F[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector m941(com.badlogic.gdx.math.Vector p0,int p1,float p2,com.badlogic.gdx.math.Vector[] p3,boolean p4,com.badlogic.gdx.math.Vector p5) /*-{return @com.badlogic.gdx.math.CatmullRomSpline::derivative(Lcom/badlogic/gdx/math/Vector;IF[Lcom/badlogic/gdx/math/Vector;ZLcom/badlogic/gdx/math/Vector;)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.CatmullRomSpline m942(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector[] p0,boolean p1) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::set([Lcom/badlogic/gdx/math/Vector;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m943(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::valueAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m944(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,int p1,float p2) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::valueAt(Lcom/badlogic/gdx/math/Vector;IF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector m945(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,float p1) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::derivativeAt(Lcom/badlogic/gdx/math/Vector;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector m946(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,int p1,float p2) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::derivativeAt(Lcom/badlogic/gdx/math/Vector;IF)(p0, p1, p2);}-*/;
  private native int m947(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::nearest(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native int m948(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::nearest(Lcom/badlogic/gdx/math/Vector;II)(p0, p1, p2);}-*/;
  private native float m949(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::approximate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private native float m950(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::approximate(Lcom/badlogic/gdx/math/Vector;II)(p0, p1, p2);}-*/;
  private native float m951(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0,int p1) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::approximate(Lcom/badlogic/gdx/math/Vector;I)(p0, p1);}-*/;
  private native float m952(com.badlogic.gdx.math.CatmullRomSpline obj, com.badlogic.gdx.math.Vector p0) /*-{return obj.@com.badlogic.gdx.math.CatmullRomSpline::locate(Lcom/badlogic/gdx/math/Vector;)(p0);}-*/;
  private static com.badlogic.gdx.math.CatmullRomSpline m953() {return new com.badlogic.gdx.math.CatmullRomSpline();}
  private static com.badlogic.gdx.math.CatmullRomSpline m954(com.badlogic.gdx.math.Vector[] p0,boolean p1) {return new com.badlogic.gdx.math.CatmullRomSpline(p0, p1);}
  private native Object m962(com.badlogic.gdx.math.Circle obj, float p0,float p1,float p2) /*-{obj.@com.badlogic.gdx.math.Circle::set(FFF)(p0, p1, p2);return null;}-*/;
  private native Object m963(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Vector2 p0,float p1) /*-{obj.@com.badlogic.gdx.math.Circle::set(Lcom/badlogic/gdx/math/Vector2;F)(p0, p1);return null;}-*/;
  private native Object m964(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Circle p0) /*-{obj.@com.badlogic.gdx.math.Circle::set(Lcom/badlogic/gdx/math/Circle;)(p0);return null;}-*/;
  private native Object m965(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Vector2 p0) /*-{obj.@com.badlogic.gdx.math.Circle::setPosition(Lcom/badlogic/gdx/math/Vector2;)(p0);return null;}-*/;
  private native Object m966(com.badlogic.gdx.math.Circle obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Circle::setPosition(FF)(p0, p1);return null;}-*/;
  private native Object m967(com.badlogic.gdx.math.Circle obj, float p0) /*-{obj.@com.badlogic.gdx.math.Circle::setX(F)(p0);return null;}-*/;
  private native Object m968(com.badlogic.gdx.math.Circle obj, float p0) /*-{obj.@com.badlogic.gdx.math.Circle::setY(F)(p0);return null;}-*/;
  private native Object m969(com.badlogic.gdx.math.Circle obj, float p0) /*-{obj.@com.badlogic.gdx.math.Circle::setRadius(F)(p0);return null;}-*/;
  private native boolean m970(com.badlogic.gdx.math.Circle obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Circle::contains(FF)(p0, p1);}-*/;
  private native boolean m971(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Circle::contains(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native boolean m972(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Circle p0) /*-{return obj.@com.badlogic.gdx.math.Circle::contains(Lcom/badlogic/gdx/math/Circle;)(p0);}-*/;
  private native boolean m973(com.badlogic.gdx.math.Circle obj, com.badlogic.gdx.math.Circle p0) /*-{return obj.@com.badlogic.gdx.math.Circle::overlaps(Lcom/badlogic/gdx/math/Circle;)(p0);}-*/;
  private native java.lang.String m974(com.badlogic.gdx.math.Circle obj) /*-{return obj.@com.badlogic.gdx.math.Circle::toString()();}-*/;
  private static com.badlogic.gdx.math.Circle m975() {return new com.badlogic.gdx.math.Circle();}
  private static com.badlogic.gdx.math.Circle m976(float p0,float p1,float p2) {return new com.badlogic.gdx.math.Circle(p0, p1, p2);}
  private static com.badlogic.gdx.math.Circle m977(com.badlogic.gdx.math.Vector2 p0,float p1) {return new com.badlogic.gdx.math.Circle(p0, p1);}
  private static com.badlogic.gdx.math.Circle m978(com.badlogic.gdx.math.Circle p0) {return new com.badlogic.gdx.math.Circle(p0);}
  private native com.badlogic.gdx.utils.FloatArray m990(com.badlogic.gdx.math.ConvexHull obj, com.badlogic.gdx.utils.FloatArray p0,boolean p1,boolean p2) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computePolygon(Lcom/badlogic/gdx/utils/FloatArray;ZZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.utils.FloatArray m991(com.badlogic.gdx.math.ConvexHull obj, float[] p0,boolean p1,boolean p2) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computePolygon([FZZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.utils.FloatArray m992(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,int p2,boolean p3,boolean p4) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computePolygon([FIIZZ)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.utils.IntArray m993(com.badlogic.gdx.math.ConvexHull obj, com.badlogic.gdx.utils.FloatArray p0,boolean p1,boolean p2) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computeIndices(Lcom/badlogic/gdx/utils/FloatArray;ZZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.utils.IntArray m994(com.badlogic.gdx.math.ConvexHull obj, float[] p0,boolean p1,boolean p2) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computeIndices([FZZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.utils.IntArray m995(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,int p2,boolean p3,boolean p4) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::computeIndices([FIIZZ)(p0, p1, p2, p3, p4);}-*/;
  private native float m996(com.badlogic.gdx.math.ConvexHull obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::ccw(FF)(p0, p1);}-*/;
  private native Object m997(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,boolean p2) /*-{obj.@com.badlogic.gdx.math.ConvexHull::sort([FIZ)(p0, p1, p2);return null;}-*/;
  private native int m998(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,int p2,boolean p3) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::quicksortPartition([FIIZ)(p0, p1, p2, p3);}-*/;
  private native Object m999(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,boolean p2) /*-{obj.@com.badlogic.gdx.math.ConvexHull::sortWithIndices([FIZ)(p0, p1, p2);return null;}-*/;
  private native int m1000(com.badlogic.gdx.math.ConvexHull obj, float[] p0,int p1,int p2,boolean p3,short[] p4) /*-{return obj.@com.badlogic.gdx.math.ConvexHull::quicksortPartitionWithIndices([FIIZ[S)(p0, p1, p2, p3, p4);}-*/;
  private static com.badlogic.gdx.math.ConvexHull m1001() {return new com.badlogic.gdx.math.ConvexHull();}
  private native com.badlogic.gdx.utils.ShortArray m1027(com.badlogic.gdx.math.DelaunayTriangulator obj, com.badlogic.gdx.utils.FloatArray p0,boolean p1) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::computeTriangles(Lcom/badlogic/gdx/utils/FloatArray;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.utils.ShortArray m1028(com.badlogic.gdx.math.DelaunayTriangulator obj, float[] p0,boolean p1) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::computeTriangles([FZ)(p0, p1);}-*/;
  private native com.badlogic.gdx.utils.ShortArray m1029(com.badlogic.gdx.math.DelaunayTriangulator obj, float[] p0,int p1,int p2,boolean p3) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::computeTriangles([FIIZ)(p0, p1, p2, p3);}-*/;
  private native int m1030(com.badlogic.gdx.math.DelaunayTriangulator obj, float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::circumCircle(FFFFFFFF)(p0, p1, p2, p3, p4, p5, p6, p7);}-*/;
  private native Object m1031(com.badlogic.gdx.math.DelaunayTriangulator obj, float[] p0,int p1) /*-{obj.@com.badlogic.gdx.math.DelaunayTriangulator::sort([FI)(p0, p1);return null;}-*/;
  private native int m1032(com.badlogic.gdx.math.DelaunayTriangulator obj, float[] p0,int p1,int p2,short[] p3) /*-{return obj.@com.badlogic.gdx.math.DelaunayTriangulator::quicksortPartition([FII[S)(p0, p1, p2, p3);}-*/;
  private native Object m1033(com.badlogic.gdx.math.DelaunayTriangulator obj, com.badlogic.gdx.utils.ShortArray p0,float[] p1,float[] p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.math.DelaunayTriangulator::trim(Lcom/badlogic/gdx/utils/ShortArray;[F[FII)(p0, p1, p2, p3, p4);return null;}-*/;
  private static com.badlogic.gdx.math.DelaunayTriangulator m1034() {return new com.badlogic.gdx.math.DelaunayTriangulator();}
  private native com.badlogic.gdx.utils.ShortArray m1054(com.badlogic.gdx.math.EarClippingTriangulator obj, com.badlogic.gdx.utils.FloatArray p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::computeTriangles(Lcom/badlogic/gdx/utils/FloatArray;)(p0);}-*/;
  private native com.badlogic.gdx.utils.ShortArray m1055(com.badlogic.gdx.math.EarClippingTriangulator obj, float[] p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::computeTriangles([F)(p0);}-*/;
  private native com.badlogic.gdx.utils.ShortArray m1056(com.badlogic.gdx.math.EarClippingTriangulator obj, float[] p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::computeTriangles([FII)(p0, p1, p2);}-*/;
  private native Object m1057(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{obj.@com.badlogic.gdx.math.EarClippingTriangulator::triangulate()();return null;}-*/;
  private native int m1058(com.badlogic.gdx.math.EarClippingTriangulator obj, int p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::classifyVertex(I)(p0);}-*/;
  private native int m1059(com.badlogic.gdx.math.EarClippingTriangulator obj) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::findEarTip()();}-*/;
  private native boolean m1060(com.badlogic.gdx.math.EarClippingTriangulator obj, int p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::isEarTip(I)(p0);}-*/;
  private native Object m1061(com.badlogic.gdx.math.EarClippingTriangulator obj, int p0) /*-{obj.@com.badlogic.gdx.math.EarClippingTriangulator::cutEarTip(I)(p0);return null;}-*/;
  private native int m1062(com.badlogic.gdx.math.EarClippingTriangulator obj, int p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::previousIndex(I)(p0);}-*/;
  private native int m1063(com.badlogic.gdx.math.EarClippingTriangulator obj, int p0) /*-{return obj.@com.badlogic.gdx.math.EarClippingTriangulator::nextIndex(I)(p0);}-*/;
  private native boolean m1064(float[] p0,int p1,int p2) /*-{return @com.badlogic.gdx.math.EarClippingTriangulator::areVerticesClockwise([FII)(p0, p1, p2);}-*/;
  private native int m1065(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.EarClippingTriangulator::computeSpannedAreaSign(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private static com.badlogic.gdx.math.EarClippingTriangulator m1066() {return new com.badlogic.gdx.math.EarClippingTriangulator();}
  private native boolean m1078(com.badlogic.gdx.math.Ellipse obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Ellipse::contains(FF)(p0, p1);}-*/;
  private native boolean m1079(com.badlogic.gdx.math.Ellipse obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Ellipse::contains(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native Object m1080(com.badlogic.gdx.math.Ellipse obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.math.Ellipse::set(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native Object m1081(com.badlogic.gdx.math.Ellipse obj, com.badlogic.gdx.math.Ellipse p0) /*-{obj.@com.badlogic.gdx.math.Ellipse::set(Lcom/badlogic/gdx/math/Ellipse;)(p0);return null;}-*/;
  private native com.badlogic.gdx.math.Ellipse m1082(com.badlogic.gdx.math.Ellipse obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Ellipse::setPosition(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Ellipse m1083(com.badlogic.gdx.math.Ellipse obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Ellipse::setPosition(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Ellipse m1084(com.badlogic.gdx.math.Ellipse obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Ellipse::setSize(FF)(p0, p1);}-*/;
  private static com.badlogic.gdx.math.Ellipse m1085() {return new com.badlogic.gdx.math.Ellipse();}
  private static com.badlogic.gdx.math.Ellipse m1086(com.badlogic.gdx.math.Ellipse p0) {return new com.badlogic.gdx.math.Ellipse(p0);}
  private static com.badlogic.gdx.math.Ellipse m1087(float p0,float p1,float p2,float p3) {return new com.badlogic.gdx.math.Ellipse(p0, p1, p2, p3);}
  private static com.badlogic.gdx.math.Ellipse m1088(com.badlogic.gdx.math.Vector2 p0,float p1,float p2) {return new com.badlogic.gdx.math.Ellipse(p0, p1, p2);}
  private native Object m1106(com.badlogic.gdx.math.FloatCounter obj, float p0) /*-{obj.@com.badlogic.gdx.math.FloatCounter::put(F)(p0);return null;}-*/;
  private native Object m1107(com.badlogic.gdx.math.FloatCounter obj) /*-{obj.@com.badlogic.gdx.math.FloatCounter::reset()();return null;}-*/;
  private static com.badlogic.gdx.math.FloatCounter m1108(int p0) {return new com.badlogic.gdx.math.FloatCounter(p0);}
  private native Object m1120(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.Matrix4 p0) /*-{obj.@com.badlogic.gdx.math.Frustum::update(Lcom/badlogic/gdx/math/Matrix4;)(p0);return null;}-*/;
  private native boolean m1121(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Frustum::pointInFrustum(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native boolean m1122(com.badlogic.gdx.math.Frustum obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Frustum::pointInFrustum(FFF)(p0, p1, p2);}-*/;
  private native boolean m1123(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Frustum::sphereInFrustum(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native boolean m1124(com.badlogic.gdx.math.Frustum obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Frustum::sphereInFrustum(FFFF)(p0, p1, p2, p3);}-*/;
  private native boolean m1125(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Frustum::sphereInFrustumWithoutNearFar(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native boolean m1126(com.badlogic.gdx.math.Frustum obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Frustum::sphereInFrustumWithoutNearFar(FFFF)(p0, p1, p2, p3);}-*/;
  private native boolean m1127(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.math.Frustum::boundsInFrustum(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native boolean m1128(com.badlogic.gdx.math.Frustum obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Frustum::boundsInFrustum(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native boolean m1129(com.badlogic.gdx.math.Frustum obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Frustum::boundsInFrustum(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private static com.badlogic.gdx.math.Frustum m1130() {return new com.badlogic.gdx.math.Frustum();}
  private native com.badlogic.gdx.math.Vector2 m1138(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.GeometryUtils::toBarycoord(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1139(com.badlogic.gdx.math.Vector2 p0) /*-{return @com.badlogic.gdx.math.GeometryUtils::barycoordInsideTriangle(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1140(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.GeometryUtils::fromBarycoord(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1141(com.badlogic.gdx.math.Vector2 p0,float p1,float p2,float p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.GeometryUtils::fromBarycoord(Lcom/badlogic/gdx/math/Vector2;FFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native float m1142(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.math.GeometryUtils::lowestPositiveRoot(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1143(float p0,float p1,float p2,float p3,float p4,float p5,com.badlogic.gdx.math.Vector2 p6) /*-{return @com.badlogic.gdx.math.GeometryUtils::triangleCentroid(FFFFFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native float m1144(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.GeometryUtils::triangleArea(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1145(float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,com.badlogic.gdx.math.Vector2 p8) /*-{return @com.badlogic.gdx.math.GeometryUtils::quadrilateralCentroid(FFFFFFFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4, p5, p6, p7, p8);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1146(float[] p0,int p1,int p2,com.badlogic.gdx.math.Vector2 p3) /*-{return @com.badlogic.gdx.math.GeometryUtils::polygonCentroid([FIILcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3);}-*/;
  private native float m1147(float[] p0,int p1,int p2) /*-{return @com.badlogic.gdx.math.GeometryUtils::polygonArea([FII)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.math.GeometryUtils m1148() {return new com.badlogic.gdx.math.GeometryUtils();}
  private native com.badlogic.gdx.math.GridPoint2 m1154(com.badlogic.gdx.math.GridPoint2 obj, com.badlogic.gdx.math.GridPoint2 p0) /*-{return obj.@com.badlogic.gdx.math.GridPoint2::set(Lcom/badlogic/gdx/math/GridPoint2;)(p0);}-*/;
  private native com.badlogic.gdx.math.GridPoint2 m1155(com.badlogic.gdx.math.GridPoint2 obj, int p0,int p1) /*-{return obj.@com.badlogic.gdx.math.GridPoint2::set(II)(p0, p1);}-*/;
  private static com.badlogic.gdx.math.GridPoint2 m1156() {return new com.badlogic.gdx.math.GridPoint2();}
  private static com.badlogic.gdx.math.GridPoint2 m1157(int p0,int p1) {return new com.badlogic.gdx.math.GridPoint2(p0, p1);}
  private static com.badlogic.gdx.math.GridPoint2 m1158(com.badlogic.gdx.math.GridPoint2 p0) {return new com.badlogic.gdx.math.GridPoint2(p0);}
  private native com.badlogic.gdx.math.GridPoint3 m1166(com.badlogic.gdx.math.GridPoint3 obj, com.badlogic.gdx.math.GridPoint3 p0) /*-{return obj.@com.badlogic.gdx.math.GridPoint3::set(Lcom/badlogic/gdx/math/GridPoint3;)(p0);}-*/;
  private native com.badlogic.gdx.math.GridPoint3 m1167(com.badlogic.gdx.math.GridPoint3 obj, int p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.math.GridPoint3::set(III)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.math.GridPoint3 m1168() {return new com.badlogic.gdx.math.GridPoint3();}
  private static com.badlogic.gdx.math.GridPoint3 m1169(int p0,int p1,int p2) {return new com.badlogic.gdx.math.GridPoint3(p0, p1, p2);}
  private static com.badlogic.gdx.math.GridPoint3 m1170(com.badlogic.gdx.math.GridPoint3 p0) {return new com.badlogic.gdx.math.GridPoint3(p0);}
  private native float m1242(com.badlogic.gdx.math.Interpolation obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation::apply(F)(p0);}-*/;
  private native float m1243(com.badlogic.gdx.math.Interpolation obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Interpolation::apply(FFF)(p0, p1, p2);}-*/;
  private native float m1245(com.badlogic.gdx.math.Interpolation.Bounce obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Bounce::out(F)(p0);}-*/;
  private native float m1246(com.badlogic.gdx.math.Interpolation.Bounce obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Bounce::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.Bounce m1247(float[] p0,float[] p1) {return new com.badlogic.gdx.math.Interpolation.Bounce(p0, p1);}
  private static com.badlogic.gdx.math.Interpolation.Bounce m1248(int p0) {return new com.badlogic.gdx.math.Interpolation.Bounce(p0);}
  private native float m1250(com.badlogic.gdx.math.Interpolation.BounceIn obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.BounceIn::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.BounceIn m1251(float[] p0,float[] p1) {return new com.badlogic.gdx.math.Interpolation.BounceIn(p0, p1);}
  private static com.badlogic.gdx.math.Interpolation.BounceIn m1252(int p0) {return new com.badlogic.gdx.math.Interpolation.BounceIn(p0);}
  private native float m1258(com.badlogic.gdx.math.Interpolation.BounceOut obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.BounceOut::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.BounceOut m1259(float[] p0,float[] p1) {return new com.badlogic.gdx.math.Interpolation.BounceOut(p0, p1);}
  private static com.badlogic.gdx.math.Interpolation.BounceOut m1260(int p0) {return new com.badlogic.gdx.math.Interpolation.BounceOut(p0);}
  private native float m1266(com.badlogic.gdx.math.Interpolation.Elastic obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Elastic::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.Elastic m1267(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.Elastic(p0, p1);}
  private native float m1269(com.badlogic.gdx.math.Interpolation.ElasticIn obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.ElasticIn::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.ElasticIn m1270(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.ElasticIn(p0, p1);}
  private native float m1272(com.badlogic.gdx.math.Interpolation.ElasticOut obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.ElasticOut::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.ElasticOut m1273(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.ElasticOut(p0, p1);}
  private native float m1283(com.badlogic.gdx.math.Interpolation.Exp obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Exp::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.Exp m1284(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.Exp(p0, p1);}
  private native float m1286(com.badlogic.gdx.math.Interpolation.ExpIn obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.ExpIn::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.ExpIn m1287(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.ExpIn(p0, p1);}
  private native float m1289(com.badlogic.gdx.math.Interpolation.ExpOut obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.ExpOut::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.ExpOut m1290(float p0,float p1) {return new com.badlogic.gdx.math.Interpolation.ExpOut(p0, p1);}
  private native float m1294(com.badlogic.gdx.math.Interpolation.Pow obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Pow::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.Pow m1295(int p0) {return new com.badlogic.gdx.math.Interpolation.Pow(p0);}
  private native float m1297(com.badlogic.gdx.math.Interpolation.PowIn obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.PowIn::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.PowIn m1298(int p0) {return new com.badlogic.gdx.math.Interpolation.PowIn(p0);}
  private native float m1300(com.badlogic.gdx.math.Interpolation.PowOut obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.PowOut::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.PowOut m1301(int p0) {return new com.badlogic.gdx.math.Interpolation.PowOut(p0);}
  private native float m1305(com.badlogic.gdx.math.Interpolation.Swing obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.Swing::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.Swing m1306(float p0) {return new com.badlogic.gdx.math.Interpolation.Swing(p0);}
  private native float m1310(com.badlogic.gdx.math.Interpolation.SwingIn obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.SwingIn::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.SwingIn m1311(float p0) {return new com.badlogic.gdx.math.Interpolation.SwingIn(p0);}
  private native float m1315(com.badlogic.gdx.math.Interpolation.SwingOut obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Interpolation.SwingOut::apply(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Interpolation.SwingOut m1316(float p0) {return new com.badlogic.gdx.math.Interpolation.SwingOut(p0);}
  private native boolean m1346(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2,com.badlogic.gdx.math.Vector3 p3) /*-{return @com.badlogic.gdx.math.Intersector::isPointInTriangle(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3);}-*/;
  private native boolean m1347(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3) /*-{return @com.badlogic.gdx.math.Intersector::isPointInTriangle(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3);}-*/;
  private native boolean m1348(float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7) /*-{return @com.badlogic.gdx.math.Intersector::isPointInTriangle(FFFFFFFF)(p0, p1, p2, p3, p4, p5, p6, p7);}-*/;
  private native boolean m1349(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Plane p2,com.badlogic.gdx.math.Vector3 p3) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegmentPlane(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Plane;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3);}-*/;
  private native int m1350(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2) /*-{return @com.badlogic.gdx.math.Intersector::pointLineSide(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2);}-*/;
  private native int m1351(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Intersector::pointLineSide(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native boolean m1352(com.badlogic.gdx.utils.Array p0,com.badlogic.gdx.math.Vector2 p1) /*-{return @com.badlogic.gdx.math.Intersector::isPointInPolygon(Lcom/badlogic/gdx/utils/Array;Lcom/badlogic/gdx/math/Vector2;)(p0, p1);}-*/;
  private native boolean m1353(float[] p0,int p1,int p2,float p3,float p4) /*-{return @com.badlogic.gdx.math.Intersector::isPointInPolygon([FIIFF)(p0, p1, p2, p3, p4);}-*/;
  private native float m1354(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2) /*-{return @com.badlogic.gdx.math.Intersector::distanceLinePoint(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2);}-*/;
  private native float m1355(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Intersector::distanceLinePoint(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native float m1356(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Intersector::distanceSegmentPoint(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native float m1357(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2) /*-{return @com.badlogic.gdx.math.Intersector::distanceSegmentPoint(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1358(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3) /*-{return @com.badlogic.gdx.math.Intersector::nearestSegmentPoint(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1359(float p0,float p1,float p2,float p3,float p4,float p5,com.badlogic.gdx.math.Vector2 p6) /*-{return @com.badlogic.gdx.math.Intersector::nearestSegmentPoint(FFFFFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native boolean m1360(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,float p3) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegmentCircle(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;F)(p0, p1, p2, p3);}-*/;
  private native float m1361(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,float p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegmentCircleDisplace(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;FLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1362(com.badlogic.gdx.math.collision.Ray p0,com.badlogic.gdx.math.Plane p1,com.badlogic.gdx.math.Vector3 p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayPlane(Lcom/badlogic/gdx/math/collision/Ray;Lcom/badlogic/gdx/math/Plane;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native float m1363(float p0,float p1,float p2,float p3,float p4,float p5,com.badlogic.gdx.math.Plane p6,com.badlogic.gdx.math.Vector3 p7) /*-{return @com.badlogic.gdx.math.Intersector::intersectLinePlane(FFFFFFLcom/badlogic/gdx/math/Plane;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3, p4, p5, p6, p7);}-*/;
  private native boolean m1364(com.badlogic.gdx.math.collision.Ray p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2,com.badlogic.gdx.math.Vector3 p3,com.badlogic.gdx.math.Vector3 p4) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayTriangle(Lcom/badlogic/gdx/math/collision/Ray;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1365(com.badlogic.gdx.math.collision.Ray p0,com.badlogic.gdx.math.Vector3 p1,float p2,com.badlogic.gdx.math.Vector3 p3) /*-{return @com.badlogic.gdx.math.Intersector::intersectRaySphere(Lcom/badlogic/gdx/math/collision/Ray;Lcom/badlogic/gdx/math/Vector3;FLcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3);}-*/;
  private native boolean m1366(com.badlogic.gdx.math.collision.Ray p0,com.badlogic.gdx.math.collision.BoundingBox p1,com.badlogic.gdx.math.Vector3 p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayBounds(Lcom/badlogic/gdx/math/collision/Ray;Lcom/badlogic/gdx/math/collision/BoundingBox;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native boolean m1367(com.badlogic.gdx.math.collision.Ray p0,com.badlogic.gdx.math.collision.BoundingBox p1) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayBoundsFast(Lcom/badlogic/gdx/math/collision/Ray;Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0, p1);}-*/;
  private native boolean m1368(com.badlogic.gdx.math.collision.Ray p0,float[] p1,com.badlogic.gdx.math.Vector3 p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayTriangles(Lcom/badlogic/gdx/math/collision/Ray;[FLcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native boolean m1369(com.badlogic.gdx.math.collision.Ray p0,float[] p1,short[] p2,int p3,com.badlogic.gdx.math.Vector3 p4) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayTriangles(Lcom/badlogic/gdx/math/collision/Ray;[F[SILcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1370(com.badlogic.gdx.math.collision.Ray p0,java.util.List p1,com.badlogic.gdx.math.Vector3 p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectRayTriangles(Lcom/badlogic/gdx/math/collision/Ray;Ljava/util/List;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native boolean m1371(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.Intersector::intersectLines(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1372(float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,com.badlogic.gdx.math.Vector2 p8) /*-{return @com.badlogic.gdx.math.Intersector::intersectLines(FFFFFFFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4, p5, p6, p7, p8);}-*/;
  private native boolean m1373(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Polygon p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectLinePolygon(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Polygon;)(p0, p1, p2);}-*/;
  private native boolean m1374(com.badlogic.gdx.math.Rectangle p0,com.badlogic.gdx.math.Rectangle p1,com.badlogic.gdx.math.Rectangle p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectRectangles(Lcom/badlogic/gdx/math/Rectangle;Lcom/badlogic/gdx/math/Rectangle;Lcom/badlogic/gdx/math/Rectangle;)(p0, p1, p2);}-*/;
  private native boolean m1375(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Polygon p2) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegmentPolygon(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Polygon;)(p0, p1, p2);}-*/;
  private native boolean m1376(com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3,com.badlogic.gdx.math.Vector2 p4) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegments(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);}-*/;
  private native boolean m1377(float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,com.badlogic.gdx.math.Vector2 p8) /*-{return @com.badlogic.gdx.math.Intersector::intersectSegments(FFFFFFFFLcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4, p5, p6, p7, p8);}-*/;
  private native float m1378(float p0,float p1,float p2,float p3) /*-{return @com.badlogic.gdx.math.Intersector::det(FFFF)(p0, p1, p2, p3);}-*/;
  private native double m1379(double p0,double p1,double p2,double p3) /*-{return @com.badlogic.gdx.math.Intersector::detd(DDDD)(p0, p1, p2, p3);}-*/;
  private native boolean m1380(com.badlogic.gdx.math.Circle p0,com.badlogic.gdx.math.Circle p1) /*-{return @com.badlogic.gdx.math.Intersector::overlaps(Lcom/badlogic/gdx/math/Circle;Lcom/badlogic/gdx/math/Circle;)(p0, p1);}-*/;
  private native boolean m1381(com.badlogic.gdx.math.Rectangle p0,com.badlogic.gdx.math.Rectangle p1) /*-{return @com.badlogic.gdx.math.Intersector::overlaps(Lcom/badlogic/gdx/math/Rectangle;Lcom/badlogic/gdx/math/Rectangle;)(p0, p1);}-*/;
  private native boolean m1382(com.badlogic.gdx.math.Circle p0,com.badlogic.gdx.math.Rectangle p1) /*-{return @com.badlogic.gdx.math.Intersector::overlaps(Lcom/badlogic/gdx/math/Circle;Lcom/badlogic/gdx/math/Rectangle;)(p0, p1);}-*/;
  private native boolean m1383(com.badlogic.gdx.math.Polygon p0,com.badlogic.gdx.math.Polygon p1) /*-{return @com.badlogic.gdx.math.Intersector::overlapConvexPolygons(Lcom/badlogic/gdx/math/Polygon;Lcom/badlogic/gdx/math/Polygon;)(p0, p1);}-*/;
  private native boolean m1384(com.badlogic.gdx.math.Polygon p0,com.badlogic.gdx.math.Polygon p1,com.badlogic.gdx.math.Intersector.MinimumTranslationVector p2) /*-{return @com.badlogic.gdx.math.Intersector::overlapConvexPolygons(Lcom/badlogic/gdx/math/Polygon;Lcom/badlogic/gdx/math/Polygon;Lcom/badlogic/gdx/math/Intersector$MinimumTranslationVector;)(p0, p1, p2);}-*/;
  private native boolean m1385(float[] p0,float[] p1,com.badlogic.gdx.math.Intersector.MinimumTranslationVector p2) /*-{return @com.badlogic.gdx.math.Intersector::overlapConvexPolygons([F[FLcom/badlogic/gdx/math/Intersector$MinimumTranslationVector;)(p0, p1, p2);}-*/;
  private native boolean m1386(float[] p0,int p1,int p2,float[] p3,int p4,int p5,com.badlogic.gdx.math.Intersector.MinimumTranslationVector p6) /*-{return @com.badlogic.gdx.math.Intersector::overlapConvexPolygons([FII[FIILcom/badlogic/gdx/math/Intersector$MinimumTranslationVector;)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native Object m1387(float[] p0,com.badlogic.gdx.math.Plane p1,com.badlogic.gdx.math.Intersector.SplitTriangle p2) /*-{@com.badlogic.gdx.math.Intersector::splitTriangle([FLcom/badlogic/gdx/math/Plane;Lcom/badlogic/gdx/math/Intersector$SplitTriangle;)(p0, p1, p2);return null;}-*/;
  private native Object m1388(float[] p0,int p1,int p2,int p3,com.badlogic.gdx.math.Plane p4,float[] p5,int p6) /*-{@com.badlogic.gdx.math.Intersector::splitEdge([FIIILcom/badlogic/gdx/math/Plane;[FI)(p0, p1, p2, p3, p4, p5, p6);return null;}-*/;
  private native Object m1389(java.lang.String[] p0) /*-{@com.badlogic.gdx.math.Intersector::main([Ljava/lang/String;)(p0);return null;}-*/;
  private static com.badlogic.gdx.math.Intersector m1390() {return new com.badlogic.gdx.math.Intersector();}
  private static com.badlogic.gdx.math.Intersector.MinimumTranslationVector m1396() {return new com.badlogic.gdx.math.Intersector.MinimumTranslationVector();}
  private native java.lang.String m1416(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::toString()();}-*/;
  private native Object m1417(com.badlogic.gdx.math.Intersector.SplitTriangle obj, boolean p0) /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::setSide(Z)(p0);return null;}-*/;
  private native boolean m1418(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{return obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::getSide()();}-*/;
  private native Object m1419(com.badlogic.gdx.math.Intersector.SplitTriangle obj, float[] p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::add([FII)(p0, p1, p2);return null;}-*/;
  private native Object m1420(com.badlogic.gdx.math.Intersector.SplitTriangle obj) /*-{obj.@com.badlogic.gdx.math.Intersector.SplitTriangle::reset()();return null;}-*/;
  private static com.badlogic.gdx.math.Intersector.SplitTriangle m1421(int p0) {return new com.badlogic.gdx.math.Intersector.SplitTriangle(p0);}
  private native float m1477(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::sin(F)(p0);}-*/;
  private native float m1478(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::cos(F)(p0);}-*/;
  private native float m1479(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::sinDeg(F)(p0);}-*/;
  private native float m1480(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::cosDeg(F)(p0);}-*/;
  private native float m1481(float p0,float p1) /*-{return @com.badlogic.gdx.math.MathUtils::atan2(FF)(p0, p1);}-*/;
  private native int m1482(int p0) /*-{return @com.badlogic.gdx.math.MathUtils::random(I)(p0);}-*/;
  private native int m1483(int p0,int p1) /*-{return @com.badlogic.gdx.math.MathUtils::random(II)(p0, p1);}-*/;
  private native float m1484() /*-{return @com.badlogic.gdx.math.MathUtils::random()();}-*/;
  private native float m1485(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::random(F)(p0);}-*/;
  private native float m1486(float p0,float p1) /*-{return @com.badlogic.gdx.math.MathUtils::random(FF)(p0, p1);}-*/;
  private native boolean m1487() /*-{return @com.badlogic.gdx.math.MathUtils::randomBoolean()();}-*/;
  private native boolean m1488(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::randomBoolean(F)(p0);}-*/;
  private native int m1489(int p0) /*-{return @com.badlogic.gdx.math.MathUtils::nextPowerOfTwo(I)(p0);}-*/;
  private native boolean m1490(int p0) /*-{return @com.badlogic.gdx.math.MathUtils::isPowerOfTwo(I)(p0);}-*/;
  private native int m1491(int p0,int p1,int p2) /*-{return @com.badlogic.gdx.math.MathUtils::clamp(III)(p0, p1, p2);}-*/;
  private native short m1492(short p0,short p1,short p2) /*-{return @com.badlogic.gdx.math.MathUtils::clamp(SSS)(p0, p1, p2);}-*/;
  private native float m1493(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.math.MathUtils::clamp(FFF)(p0, p1, p2);}-*/;
  private native int m1494(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::floor(F)(p0);}-*/;
  private native int m1495(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::floorPositive(F)(p0);}-*/;
  private native int m1496(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::ceil(F)(p0);}-*/;
  private native int m1497(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::ceilPositive(F)(p0);}-*/;
  private native int m1498(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::round(F)(p0);}-*/;
  private native int m1499(float p0) /*-{return @com.badlogic.gdx.math.MathUtils::roundPositive(F)(p0);}-*/;
  private static com.badlogic.gdx.math.MathUtils m1500() {return new com.badlogic.gdx.math.MathUtils();}
  private native com.badlogic.gdx.math.Matrix3 m1526(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::idt()();}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1527(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Matrix3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::mul(Lcom/badlogic/gdx/math/Matrix3;)(p0);}-*/;
  private native Object m1528(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix3::mul([F[F)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1529(com.badlogic.gdx.math.Matrix3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::setToRotation(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1530(com.badlogic.gdx.math.Matrix3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::setToRotationRad(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1531(com.badlogic.gdx.math.Matrix3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix3::setToTranslation(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1532(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::setToTranslation(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1533(com.badlogic.gdx.math.Matrix3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix3::setToScaling(FF)(p0, p1);}-*/;
  private native java.lang.String m1534(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::toString()();}-*/;
  private native float m1535(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::det()();}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1536(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::inv()();}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1537(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Matrix3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::set(Lcom/badlogic/gdx/math/Matrix3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1538(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::set(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1539(com.badlogic.gdx.math.Matrix3 obj, float[] p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::set([F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1540(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::trn(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1541(com.badlogic.gdx.math.Matrix3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix3::trn(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1542(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::trn(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1543(com.badlogic.gdx.math.Matrix3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix3::translate(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1544(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::translate(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1545(com.badlogic.gdx.math.Matrix3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::rotate(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1546(com.badlogic.gdx.math.Matrix3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::rotateRad(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1547(com.badlogic.gdx.math.Matrix3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix3::scale(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1548(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::scale(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float[] m1549(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::getValues()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m1550(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::getTranslation(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1551(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::getScale(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float m1552(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::getRotation()();}-*/;
  private native float m1553(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::getRotationRad()();}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1554(com.badlogic.gdx.math.Matrix3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::scl(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1555(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::scl(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1556(com.badlogic.gdx.math.Matrix3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix3::scl(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix3 m1557(com.badlogic.gdx.math.Matrix3 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix3::transpose()();}-*/;
  private static com.badlogic.gdx.math.Matrix3 m1558() {return new com.badlogic.gdx.math.Matrix3();}
  private static com.badlogic.gdx.math.Matrix3 m1559(com.badlogic.gdx.math.Matrix3 p0) {return new com.badlogic.gdx.math.Matrix3(p0);}
  private static com.badlogic.gdx.math.Matrix3 m1560(float[] p0) {return new com.badlogic.gdx.math.Matrix3(p0);}
  private native com.badlogic.gdx.math.Matrix4 m1618(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1619(com.badlogic.gdx.math.Matrix4 obj, float[] p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set([F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1620(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1621(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1622(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Quaternion p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Quaternion;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1623(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5,float p6) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(FFFFFFF)(p0, p1, p2, p3, p4, p5, p6);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1624(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2,com.badlogic.gdx.math.Vector3 p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1625(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Quaternion p1,com.badlogic.gdx.math.Vector3 p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Quaternion;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1626(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Matrix3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(Lcom/badlogic/gdx/math/Matrix3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1627(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,float p8,float p9) /*-{return obj.@com.badlogic.gdx.math.Matrix4::set(FFFFFFFFFF)(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1628(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::cpy()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1629(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::trn(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1630(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::trn(FFF)(p0, p1, p2);}-*/;
  private native float[] m1631(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::getValues()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1632(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::mul(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native Object m1633(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix4::mul([F[F)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1634(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::tra()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1635(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::idt()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1636(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::inv()();}-*/;
  private native boolean m1637(float[] p0) /*-{return @com.badlogic.gdx.math.Matrix4::inv([F)(p0);}-*/;
  private native float m1638(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::det()();}-*/;
  private native float m1639(float[] p0) /*-{return @com.badlogic.gdx.math.Matrix4::det([F)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1640(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToProjection(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1641(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToOrtho2D(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1642(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToOrtho2D(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1643(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToOrtho(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1644(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setTranslation(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1645(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setTranslation(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1646(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToTranslation(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1647(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToTranslation(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1648(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1649(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1650(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotation(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1651(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotation(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1652(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotation(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1653(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotation(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1654(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotationRad(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1655(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToRotationRad(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1656(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setFromEulerAngles(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1657(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToScaling(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1658(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToScaling(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1659(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToLookAt(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1660(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToLookAt(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1661(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::setToWorld(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);}-*/;
  private native java.lang.String m1662(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::toString()();}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1663(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Matrix4 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::lerp(Lcom/badlogic/gdx/math/Matrix4;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1664(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::scl(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1665(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::scl(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1666(com.badlogic.gdx.math.Matrix4 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::scl(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m1667(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::getTranslation(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1668(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Quaternion p0,boolean p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::getRotation(Lcom/badlogic/gdx/math/Quaternion;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1669(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::getRotation(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m1670(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::getScale(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1671(com.badlogic.gdx.math.Matrix4 obj) /*-{return obj.@com.badlogic.gdx.math.Matrix4::toNormalMatrix()();}-*/;
  private native Object m1672(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix4::matrix4_mul([F[F)(p0, p1);return null;}-*/;
  private native float m1673(float[] p0) /*-{return @com.badlogic.gdx.math.Matrix4::matrix4_det([F)(p0);}-*/;
  private native boolean m1674(float[] p0) /*-{return @com.badlogic.gdx.math.Matrix4::matrix4_inv([F)(p0);}-*/;
  private native Object m1675(float[] p0,float[] p1,int p2) /*-{@com.badlogic.gdx.math.Matrix4::matrix4_mulVec([F[FI)(p0, p1, p2);return null;}-*/;
  private native Object m1676(float[] p0,float[] p1,int p2) /*-{@com.badlogic.gdx.math.Matrix4::matrix4_proj([F[FI)(p0, p1, p2);return null;}-*/;
  private native Object m1677(float[] p0,float[] p1,int p2) /*-{@com.badlogic.gdx.math.Matrix4::matrix4_rot([F[FI)(p0, p1, p2);return null;}-*/;
  private native Object m1678(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix4::mulVec([F[F)(p0, p1);return null;}-*/;
  private native Object m1679(float[] p0,float[] p1,int p2,int p3,int p4) /*-{@com.badlogic.gdx.math.Matrix4::mulVec([F[FIII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m1680(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix4::prj([F[F)(p0, p1);return null;}-*/;
  private native Object m1681(float[] p0,float[] p1,int p2,int p3,int p4) /*-{@com.badlogic.gdx.math.Matrix4::prj([F[FIII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m1682(float[] p0,float[] p1) /*-{@com.badlogic.gdx.math.Matrix4::rot([F[F)(p0, p1);return null;}-*/;
  private native Object m1683(float[] p0,float[] p1,int p2,int p3,int p4) /*-{@com.badlogic.gdx.math.Matrix4::rot([F[FIII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1684(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::translate(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1685(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::translate(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1686(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotate(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1687(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotate(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1688(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotate(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1689(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotate(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1690(com.badlogic.gdx.math.Matrix4 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotateRad(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1691(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Matrix4::rotateRad(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Matrix4 m1692(com.badlogic.gdx.math.Matrix4 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Matrix4::scale(FFF)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.math.Matrix4 m1693() {return new com.badlogic.gdx.math.Matrix4();}
  private static com.badlogic.gdx.math.Matrix4 m1694(com.badlogic.gdx.math.Matrix4 p0) {return new com.badlogic.gdx.math.Matrix4(p0);}
  private static com.badlogic.gdx.math.Matrix4 m1695(float[] p0) {return new com.badlogic.gdx.math.Matrix4(p0);}
  private static com.badlogic.gdx.math.Matrix4 m1696(com.badlogic.gdx.math.Quaternion p0) {return new com.badlogic.gdx.math.Matrix4(p0);}
  private static com.badlogic.gdx.math.Matrix4 m1697(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Quaternion p1,com.badlogic.gdx.math.Vector3 p2) {return new com.badlogic.gdx.math.Matrix4(p0, p1, p2);}
  private native Object m1707(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2) /*-{obj.@com.badlogic.gdx.math.Plane::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1, p2);return null;}-*/;
  private native Object m1708(com.badlogic.gdx.math.Plane obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.math.Plane::set(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native Object m1709(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{obj.@com.badlogic.gdx.math.Plane::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);return null;}-*/;
  private native Object m1710(com.badlogic.gdx.math.Plane obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{obj.@com.badlogic.gdx.math.Plane::set(FFFFFF)(p0, p1, p2, p3, p4, p5);return null;}-*/;
  private native Object m1711(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Plane p0) /*-{obj.@com.badlogic.gdx.math.Plane::set(Lcom/badlogic/gdx/math/Plane;)(p0);return null;}-*/;
  private native float m1712(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Plane::distance(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Plane.PlaneSide m1713(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Plane::testPoint(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Plane.PlaneSide m1714(com.badlogic.gdx.math.Plane obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Plane::testPoint(FFF)(p0, p1, p2);}-*/;
  private native boolean m1715(com.badlogic.gdx.math.Plane obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Plane::isFrontFacing(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m1716(com.badlogic.gdx.math.Plane obj) /*-{return obj.@com.badlogic.gdx.math.Plane::getNormal()();}-*/;
  private native float m1717(com.badlogic.gdx.math.Plane obj) /*-{return obj.@com.badlogic.gdx.math.Plane::getD()();}-*/;
  private native java.lang.String m1718(com.badlogic.gdx.math.Plane obj) /*-{return obj.@com.badlogic.gdx.math.Plane::toString()();}-*/;
  private static com.badlogic.gdx.math.Plane m1719(com.badlogic.gdx.math.Vector3 p0,float p1) {return new com.badlogic.gdx.math.Plane(p0, p1);}
  private static com.badlogic.gdx.math.Plane m1720(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) {return new com.badlogic.gdx.math.Plane(p0, p1);}
  private static com.badlogic.gdx.math.Plane m1721(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1,com.badlogic.gdx.math.Vector3 p2) {return new com.badlogic.gdx.math.Plane(p0, p1, p2);}
  private native com.badlogic.gdx.math.Plane.PlaneSide[] m1729() /*-{return @com.badlogic.gdx.math.Plane.PlaneSide::values()();}-*/;
  private native com.badlogic.gdx.math.Plane.PlaneSide m1730(java.lang.String p0) /*-{return @com.badlogic.gdx.math.Plane.PlaneSide::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native float[] m1756(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getVertices()();}-*/;
  private native float[] m1757(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getTransformedVertices()();}-*/;
  private native Object m1758(com.badlogic.gdx.math.Polygon obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polygon::setOrigin(FF)(p0, p1);return null;}-*/;
  private native Object m1759(com.badlogic.gdx.math.Polygon obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polygon::setPosition(FF)(p0, p1);return null;}-*/;
  private native Object m1760(com.badlogic.gdx.math.Polygon obj, float[] p0) /*-{obj.@com.badlogic.gdx.math.Polygon::setVertices([F)(p0);return null;}-*/;
  private native Object m1761(com.badlogic.gdx.math.Polygon obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polygon::translate(FF)(p0, p1);return null;}-*/;
  private native Object m1762(com.badlogic.gdx.math.Polygon obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polygon::setRotation(F)(p0);return null;}-*/;
  private native Object m1763(com.badlogic.gdx.math.Polygon obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polygon::rotate(F)(p0);return null;}-*/;
  private native Object m1764(com.badlogic.gdx.math.Polygon obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polygon::setScale(FF)(p0, p1);return null;}-*/;
  private native Object m1765(com.badlogic.gdx.math.Polygon obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polygon::scale(F)(p0);return null;}-*/;
  private native Object m1766(com.badlogic.gdx.math.Polygon obj) /*-{obj.@com.badlogic.gdx.math.Polygon::dirty()();return null;}-*/;
  private native float m1767(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::area()();}-*/;
  private native com.badlogic.gdx.math.Rectangle m1768(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getBoundingRectangle()();}-*/;
  private native boolean m1769(com.badlogic.gdx.math.Polygon obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Polygon::contains(FF)(p0, p1);}-*/;
  private native float m1770(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getX()();}-*/;
  private native float m1771(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getY()();}-*/;
  private native float m1772(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getOriginX()();}-*/;
  private native float m1773(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getOriginY()();}-*/;
  private native float m1774(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getRotation()();}-*/;
  private native float m1775(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getScaleX()();}-*/;
  private native float m1776(com.badlogic.gdx.math.Polygon obj) /*-{return obj.@com.badlogic.gdx.math.Polygon::getScaleY()();}-*/;
  private static com.badlogic.gdx.math.Polygon m1777() {return new com.badlogic.gdx.math.Polygon();}
  private static com.badlogic.gdx.math.Polygon m1778(float[] p0) {return new com.badlogic.gdx.math.Polygon(p0);}
  private native float[] m1808(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getVertices()();}-*/;
  private native float[] m1809(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getTransformedVertices()();}-*/;
  private native float m1810(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getLength()();}-*/;
  private native float m1811(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getScaledLength()();}-*/;
  private native float m1812(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getX()();}-*/;
  private native float m1813(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getY()();}-*/;
  private native float m1814(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getOriginX()();}-*/;
  private native float m1815(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getOriginY()();}-*/;
  private native float m1816(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getRotation()();}-*/;
  private native float m1817(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getScaleX()();}-*/;
  private native float m1818(com.badlogic.gdx.math.Polyline obj) /*-{return obj.@com.badlogic.gdx.math.Polyline::getScaleY()();}-*/;
  private native Object m1819(com.badlogic.gdx.math.Polyline obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polyline::setOrigin(FF)(p0, p1);return null;}-*/;
  private native Object m1820(com.badlogic.gdx.math.Polyline obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polyline::setPosition(FF)(p0, p1);return null;}-*/;
  private native Object m1821(com.badlogic.gdx.math.Polyline obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polyline::setRotation(F)(p0);return null;}-*/;
  private native Object m1822(com.badlogic.gdx.math.Polyline obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polyline::rotate(F)(p0);return null;}-*/;
  private native Object m1823(com.badlogic.gdx.math.Polyline obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polyline::setScale(FF)(p0, p1);return null;}-*/;
  private native Object m1824(com.badlogic.gdx.math.Polyline obj, float p0) /*-{obj.@com.badlogic.gdx.math.Polyline::scale(F)(p0);return null;}-*/;
  private native Object m1825(com.badlogic.gdx.math.Polyline obj) /*-{obj.@com.badlogic.gdx.math.Polyline::calculateLength()();return null;}-*/;
  private native Object m1826(com.badlogic.gdx.math.Polyline obj) /*-{obj.@com.badlogic.gdx.math.Polyline::calculateScaledLength()();return null;}-*/;
  private native Object m1827(com.badlogic.gdx.math.Polyline obj) /*-{obj.@com.badlogic.gdx.math.Polyline::dirty()();return null;}-*/;
  private native Object m1828(com.badlogic.gdx.math.Polyline obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.math.Polyline::translate(FF)(p0, p1);return null;}-*/;
  private static com.badlogic.gdx.math.Polyline m1829() {return new com.badlogic.gdx.math.Polyline();}
  private static com.badlogic.gdx.math.Polyline m1830(float[] p0) {return new com.badlogic.gdx.math.Polyline(p0);}
  private native com.badlogic.gdx.math.Quaternion m1848(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Quaternion::set(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1849(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::set(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1850(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::set(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1851(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::cpy()();}-*/;
  private native float m1852(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::len()();}-*/;
  private native java.lang.String m1853(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::toString()();}-*/;
  private native com.badlogic.gdx.math.Quaternion m1854(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setEulerAngles(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1855(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setEulerAnglesRad(FFF)(p0, p1, p2);}-*/;
  private native float m1856(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::len2()();}-*/;
  private native com.badlogic.gdx.math.Quaternion m1857(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::nor()();}-*/;
  private native com.badlogic.gdx.math.Quaternion m1858(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::conjugate()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m1859(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::transform(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1860(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::mul(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1861(com.badlogic.gdx.math.Quaternion obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::mul(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1862(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::mulLeft(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native Object m1863(com.badlogic.gdx.math.Quaternion obj, float[] p0) /*-{obj.@com.badlogic.gdx.math.Quaternion::toMatrix([F)(p0);return null;}-*/;
  private native com.badlogic.gdx.math.Quaternion m1864(com.badlogic.gdx.math.Quaternion obj) /*-{return obj.@com.badlogic.gdx.math.Quaternion::idt()();}-*/;
  private native com.badlogic.gdx.math.Quaternion m1865(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxis(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1866(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxis(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1867(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxisRad(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1868(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxisRad(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1869(com.badlogic.gdx.math.Quaternion obj, boolean p0,com.badlogic.gdx.math.Matrix4 p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromMatrix(ZLcom/badlogic/gdx/math/Matrix4;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1870(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromMatrix(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1871(com.badlogic.gdx.math.Quaternion obj, boolean p0,com.badlogic.gdx.math.Matrix3 p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromMatrix(ZLcom/badlogic/gdx/math/Matrix3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1872(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Matrix3 p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromMatrix(Lcom/badlogic/gdx/math/Matrix3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1873(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,float p8) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxes(FFFFFFFFF)(p0, p1, p2, p3, p4, p5, p6, p7, p8);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1874(com.badlogic.gdx.math.Quaternion obj, boolean p0,float p1,float p2,float p3,float p4,float p5,float p6,float p7,float p8,float p9) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromAxes(ZFFFFFFFFF)(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1875(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromCross(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1876(com.badlogic.gdx.math.Quaternion obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.Quaternion::setFromCross(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.Quaternion m1877(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Quaternion::slerp(Lcom/badlogic/gdx/math/Quaternion;F)(p0, p1);}-*/;
  private native boolean m1878(com.badlogic.gdx.math.Quaternion obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::equals(Ljava/lang/Object;)(p0);}-*/;
  private native float m1879(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::dot(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native float m1880(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::getAxisAngle(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m1881(com.badlogic.gdx.math.Quaternion obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Quaternion::getAxisAngleRad(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private static com.badlogic.gdx.math.Quaternion m1882(float p0,float p1,float p2,float p3) {return new com.badlogic.gdx.math.Quaternion(p0, p1, p2, p3);}
  private static com.badlogic.gdx.math.Quaternion m1883() {return new com.badlogic.gdx.math.Quaternion();}
  private static com.badlogic.gdx.math.Quaternion m1884(com.badlogic.gdx.math.Quaternion p0) {return new com.badlogic.gdx.math.Quaternion(p0);}
  private static com.badlogic.gdx.math.Quaternion m1885(com.badlogic.gdx.math.Vector3 p0,float p1) {return new com.badlogic.gdx.math.Quaternion(p0, p1);}
  private native com.badlogic.gdx.math.Rectangle m1901(com.badlogic.gdx.math.Rectangle obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Rectangle::set(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1902(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::set(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native float m1903(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getX()();}-*/;
  private native com.badlogic.gdx.math.Rectangle m1904(com.badlogic.gdx.math.Rectangle obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setX(F)(p0);}-*/;
  private native float m1905(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getY()();}-*/;
  private native com.badlogic.gdx.math.Rectangle m1906(com.badlogic.gdx.math.Rectangle obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setY(F)(p0);}-*/;
  private native float m1907(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getWidth()();}-*/;
  private native com.badlogic.gdx.math.Rectangle m1908(com.badlogic.gdx.math.Rectangle obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setWidth(F)(p0);}-*/;
  private native float m1909(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getHeight()();}-*/;
  private native com.badlogic.gdx.math.Rectangle m1910(com.badlogic.gdx.math.Rectangle obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setHeight(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1911(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getPosition(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1912(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setPosition(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1913(com.badlogic.gdx.math.Rectangle obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setPosition(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1914(com.badlogic.gdx.math.Rectangle obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setSize(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1915(com.badlogic.gdx.math.Rectangle obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setSize(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1916(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getSize(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native boolean m1917(com.badlogic.gdx.math.Rectangle obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Rectangle::contains(FF)(p0, p1);}-*/;
  private native boolean m1918(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::contains(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native boolean m1919(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::contains(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native boolean m1920(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::overlaps(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1921(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::merge(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native float m1922(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getAspectRatio()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m1923(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::getCenter(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1924(com.badlogic.gdx.math.Rectangle obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setCenter(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1925(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::setCenter(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1926(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::fitOutside(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m1927(com.badlogic.gdx.math.Rectangle obj, com.badlogic.gdx.math.Rectangle p0) /*-{return obj.@com.badlogic.gdx.math.Rectangle::fitInside(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native java.lang.String m1928(com.badlogic.gdx.math.Rectangle obj) /*-{return obj.@com.badlogic.gdx.math.Rectangle::toString()();}-*/;
  private static com.badlogic.gdx.math.Rectangle m1929() {return new com.badlogic.gdx.math.Rectangle();}
  private static com.badlogic.gdx.math.Rectangle m1930(float p0,float p1,float p2,float p3) {return new com.badlogic.gdx.math.Rectangle(p0, p1, p2, p3);}
  private static com.badlogic.gdx.math.Rectangle m1931(com.badlogic.gdx.math.Rectangle p0) {return new com.badlogic.gdx.math.Rectangle(p0);}
  private native com.badlogic.gdx.math.Vector2 m1946(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::cpy()();}-*/;
  private native float m1947(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::len()();}-*/;
  private native float m1948(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::len2()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m1949(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::set(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1950(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::set(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1951(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::sub(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1952(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::sub(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1953(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::nor()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m1954(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::add(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1955(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::add(FF)(p0, p1);}-*/;
  private native float m1956(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::dot(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1957(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::scl(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1958(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::scl(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1959(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::scl(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1960(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::mul(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1961(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::mul(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1962(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::mul(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1963(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Matrix3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::mul(Lcom/badlogic/gdx/math/Matrix3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1964(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::div(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1965(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::div(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1966(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::div(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float m1967(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::dst(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float m1968(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::dst(FF)(p0, p1);}-*/;
  private native float m1969(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::dst2(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float m1970(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::dst2(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1971(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::limit(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1972(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::clamp(FF)(p0, p1);}-*/;
  private native java.lang.String m1973(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::toString()();}-*/;
  private native float m1974(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::crs(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native float m1975(com.badlogic.gdx.math.Vector2 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::crs(FF)(p0, p1);}-*/;
  private native float m1976(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::angle()();}-*/;
  private native float m1977(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::getAngleRad()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m1978(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::setAngle(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1979(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::setAngleRad(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1980(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::rotate(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1981(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::rotateRad(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1982(com.badlogic.gdx.math.Vector2 obj, int p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::rotate90(I)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m1983(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::lerp(Lcom/badlogic/gdx/math/Vector2;F)(p0, p1);}-*/;
  private native int m1984(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::hashCode()();}-*/;
  private native boolean m1985(com.badlogic.gdx.math.Vector2 obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::equals(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m1986(com.badlogic.gdx.math.Vector2 obj, com.badlogic.gdx.math.Vector2 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector2::epsilonEquals(Lcom/badlogic/gdx/math/Vector2;F)(p0, p1);}-*/;
  private native boolean m1987(com.badlogic.gdx.math.Vector2 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector2::epsilonEquals(FFF)(p0, p1, p2);}-*/;
  private native boolean m1988(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::isUnit()();}-*/;
  private native boolean m1989(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::isUnit(F)(p0);}-*/;
  private native boolean m1990(com.badlogic.gdx.math.Vector2 obj) /*-{return obj.@com.badlogic.gdx.math.Vector2::isZero()();}-*/;
  private native boolean m1991(com.badlogic.gdx.math.Vector2 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector2::isZero(F)(p0);}-*/;
  private static com.badlogic.gdx.math.Vector2 m1992() {return new com.badlogic.gdx.math.Vector2();}
  private static com.badlogic.gdx.math.Vector2 m1993(float p0,float p1) {return new com.badlogic.gdx.math.Vector2(p0, p1);}
  private static com.badlogic.gdx.math.Vector2 m1994(com.badlogic.gdx.math.Vector2 p0) {return new com.badlogic.gdx.math.Vector2(p0);}
  private native com.badlogic.gdx.math.Vector3 m2020(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::set(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2021(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::set(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2022(com.badlogic.gdx.math.Vector3 obj, float[] p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::set([F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2023(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector2 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::set(Lcom/badlogic/gdx/math/Vector2;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2024(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::cpy()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2025(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::tmp()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2026(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::tmp2()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2027(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::tmp3()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2028(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::add(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2029(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::add(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2030(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::add(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2031(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::sub(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2032(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::sub(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2033(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::sub(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2034(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::scl(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2035(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::scl(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2036(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::scl(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2037(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::mul(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2038(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::mul(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2039(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::mul(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2040(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::mul(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2041(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Quaternion p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::mul(Lcom/badlogic/gdx/math/Quaternion;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2042(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::scale(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2043(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::div(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2044(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::div(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2045(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::div(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m2046(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.math.Vector3::len(FFF)(p0, p1, p2);}-*/;
  private native float m2047(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::len()();}-*/;
  private native float m2048(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.math.Vector3::len2(FFF)(p0, p1, p2);}-*/;
  private native float m2049(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::len2()();}-*/;
  private native boolean m2050(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::idt(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m2051(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Vector3::dst(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native float m2052(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::dst(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m2053(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::dst(FFF)(p0, p1, p2);}-*/;
  private native float m2054(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Vector3::dst2(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native float m2055(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::dst2(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m2056(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::dst2(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2057(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::nor()();}-*/;
  private native float m2058(float p0,float p1,float p2,float p3,float p4,float p5) /*-{return @com.badlogic.gdx.math.Vector3::dot(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native float m2059(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::dot(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native float m2060(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::dot(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2061(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::crs(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2062(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.Vector3::crs(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2063(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::prj(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2064(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::rot(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2065(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Vector3::rotate(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2066(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::rotate(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2067(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Vector3::rotateRad(FFFF)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2068(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::rotateRad(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native boolean m2069(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::isUnit()();}-*/;
  private native boolean m2070(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::isUnit(F)(p0);}-*/;
  private native boolean m2071(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::isZero()();}-*/;
  private native boolean m2072(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::isZero(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2073(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::lerp(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2074(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::slerp(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native java.lang.String m2075(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::toString()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2076(com.badlogic.gdx.math.Vector3 obj, float p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::limit(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2077(com.badlogic.gdx.math.Vector3 obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::clamp(FF)(p0, p1);}-*/;
  private native int m2078(com.badlogic.gdx.math.Vector3 obj) /*-{return obj.@com.badlogic.gdx.math.Vector3::hashCode()();}-*/;
  private native boolean m2079(com.badlogic.gdx.math.Vector3 obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.math.Vector3::equals(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m2080(com.badlogic.gdx.math.Vector3 obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.Vector3::epsilonEquals(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native boolean m2081(com.badlogic.gdx.math.Vector3 obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.math.Vector3::epsilonEquals(FFFF)(p0, p1, p2, p3);}-*/;
  private static com.badlogic.gdx.math.Vector3 m2082() {return new com.badlogic.gdx.math.Vector3();}
  private static com.badlogic.gdx.math.Vector3 m2083(float p0,float p1,float p2) {return new com.badlogic.gdx.math.Vector3(p0, p1, p2);}
  private static com.badlogic.gdx.math.Vector3 m2084(com.badlogic.gdx.math.Vector3 p0) {return new com.badlogic.gdx.math.Vector3(p0);}
  private static com.badlogic.gdx.math.Vector3 m2085(float[] p0) {return new com.badlogic.gdx.math.Vector3(p0);}
  private static com.badlogic.gdx.math.Vector3 m2086(com.badlogic.gdx.math.Vector2 p0,float p1) {return new com.badlogic.gdx.math.Vector3(p0, p1);}
  private native boolean m2100(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::hasEnoughData()();}-*/;
  private native Object m2101(com.badlogic.gdx.math.WindowedMean obj) /*-{obj.@com.badlogic.gdx.math.WindowedMean::clear()();return null;}-*/;
  private native Object m2102(com.badlogic.gdx.math.WindowedMean obj, float p0) /*-{obj.@com.badlogic.gdx.math.WindowedMean::addValue(F)(p0);return null;}-*/;
  private native float m2103(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::getMean()();}-*/;
  private native float m2104(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::getOldest()();}-*/;
  private native float m2105(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::getLatest()();}-*/;
  private native float m2106(com.badlogic.gdx.math.WindowedMean obj) /*-{return obj.@com.badlogic.gdx.math.WindowedMean::standardDeviation()();}-*/;
  private static com.badlogic.gdx.math.WindowedMean m2107(int p0) {return new com.badlogic.gdx.math.WindowedMean(p0);}
  private native com.badlogic.gdx.math.Vector3 m2123(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::getCenter()();}-*/;
  private native Object m2124(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{obj.@com.badlogic.gdx.math.collision.BoundingBox::updateCorners()();return null;}-*/;
  private native com.badlogic.gdx.math.Vector3[] m2125(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::getCorners()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2126(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::getDimensions()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2127(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::getMin()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2128(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::getMax()();}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2129(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::set(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2130(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2131(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.Vector3[] p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::set([Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2132(com.badlogic.gdx.math.collision.BoundingBox obj, java.util.List p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::set(Ljava/util/List;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2133(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::inf()();}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2134(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::ext(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2135(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::ext(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2136(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.collision.BoundingBox p0,com.badlogic.gdx.math.Matrix4 p1) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::ext(Lcom/badlogic/gdx/math/collision/BoundingBox;Lcom/badlogic/gdx/math/Matrix4;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2137(com.badlogic.gdx.math.collision.BoundingBox obj, float p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::ext(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2138(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::clr()();}-*/;
  private native boolean m2139(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::isValid()();}-*/;
  private native com.badlogic.gdx.math.collision.BoundingBox m2140(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::mul(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native boolean m2141(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::contains(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native boolean m2142(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.Vector3 p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::contains(Lcom/badlogic/gdx/math/Vector3;)(p0);}-*/;
  private native boolean m2143(com.badlogic.gdx.math.collision.BoundingBox obj, com.badlogic.gdx.math.collision.BoundingBox p0) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::intersects(Lcom/badlogic/gdx/math/collision/BoundingBox;)(p0);}-*/;
  private native java.lang.String m2144(com.badlogic.gdx.math.collision.BoundingBox obj) /*-{return obj.@com.badlogic.gdx.math.collision.BoundingBox::toString()();}-*/;
  private native float m2145(float p0,float p1) /*-{return @com.badlogic.gdx.math.collision.BoundingBox::min(FF)(p0, p1);}-*/;
  private native float m2146(float p0,float p1) /*-{return @com.badlogic.gdx.math.collision.BoundingBox::max(FF)(p0, p1);}-*/;
  private static com.badlogic.gdx.math.collision.BoundingBox m2147() {return new com.badlogic.gdx.math.collision.BoundingBox();}
  private static com.badlogic.gdx.math.collision.BoundingBox m2148(com.badlogic.gdx.math.collision.BoundingBox p0) {return new com.badlogic.gdx.math.collision.BoundingBox(p0);}
  private static com.badlogic.gdx.math.collision.BoundingBox m2149(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) {return new com.badlogic.gdx.math.collision.BoundingBox(p0, p1);}
  private native com.badlogic.gdx.math.collision.Ray m2159(com.badlogic.gdx.math.collision.Ray obj) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::cpy()();}-*/;
  private native com.badlogic.gdx.math.Vector3 m2160(com.badlogic.gdx.math.collision.Ray obj, float p0) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::getEndPoint(F)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector3 m2161(com.badlogic.gdx.math.collision.Ray obj, com.badlogic.gdx.math.Vector3 p0,float p1) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::getEndPoint(Lcom/badlogic/gdx/math/Vector3;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.collision.Ray m2162(com.badlogic.gdx.math.collision.Ray obj, com.badlogic.gdx.math.Matrix4 p0) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::mul(Lcom/badlogic/gdx/math/Matrix4;)(p0);}-*/;
  private native java.lang.String m2163(com.badlogic.gdx.math.collision.Ray obj) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::toString()();}-*/;
  private native com.badlogic.gdx.math.collision.Ray m2164(com.badlogic.gdx.math.collision.Ray obj, com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::set(Lcom/badlogic/gdx/math/Vector3;Lcom/badlogic/gdx/math/Vector3;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.collision.Ray m2165(com.badlogic.gdx.math.collision.Ray obj, float p0,float p1,float p2,float p3,float p4,float p5) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::set(FFFFFF)(p0, p1, p2, p3, p4, p5);}-*/;
  private native com.badlogic.gdx.math.collision.Ray m2166(com.badlogic.gdx.math.collision.Ray obj, com.badlogic.gdx.math.collision.Ray p0) /*-{return obj.@com.badlogic.gdx.math.collision.Ray::set(Lcom/badlogic/gdx/math/collision/Ray;)(p0);}-*/;
  private static com.badlogic.gdx.math.collision.Ray m2167(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) {return new com.badlogic.gdx.math.collision.Ray(p0, p1);}
  private static com.badlogic.gdx.math.collision.Segment m2175(com.badlogic.gdx.math.Vector3 p0,com.badlogic.gdx.math.Vector3 p1) {return new com.badlogic.gdx.math.collision.Segment(p0, p1);}
  private static com.badlogic.gdx.math.collision.Segment m2176(float p0,float p1,float p2,float p3,float p4,float p5) {return new com.badlogic.gdx.math.collision.Segment(p0, p1, p2, p3, p4, p5);}
  private native boolean m2184(com.badlogic.gdx.math.collision.Sphere obj, com.badlogic.gdx.math.collision.Sphere p0) /*-{return obj.@com.badlogic.gdx.math.collision.Sphere::overlaps(Lcom/badlogic/gdx/math/collision/Sphere;)(p0);}-*/;
  private static com.badlogic.gdx.math.collision.Sphere m2185(com.badlogic.gdx.math.Vector3 p0,float p1) {return new com.badlogic.gdx.math.collision.Sphere(p0, p1);}
  private native boolean m2191(com.badlogic.gdx.scenes.scene2d.Action obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::act(F)(p0);}-*/;
  private native Object m2192(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::restart()();return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2193(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::getActor()();}-*/;
  private native Object m2194(com.badlogic.gdx.scenes.scene2d.Action obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m2195(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::reset()();return null;}-*/;
  private native com.badlogic.gdx.utils.Pool m2196(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::getPool()();}-*/;
  private native Object m2197(com.badlogic.gdx.scenes.scene2d.Action obj, com.badlogic.gdx.utils.Pool p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Action::setPool(Lcom/badlogic/gdx/utils/Pool;)(p0);return null;}-*/;
  private native java.lang.String m2198(com.badlogic.gdx.scenes.scene2d.Action obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Action::toString()();}-*/;
  private native Object m2239(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private native Object m2240(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::act(F)(p0);return null;}-*/;
  private native boolean m2241(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::fire(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native boolean m2242(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Event p0,boolean p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::notify(Lcom/badlogic/gdx/scenes/scene2d/Event;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2243(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1,boolean p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::hit(FFZ)(p0, p1, p2);}-*/;
  private native boolean m2244(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::remove()();}-*/;
  private native boolean m2245(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::addListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native boolean m2246(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::removeListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native com.badlogic.gdx.utils.Array m2247(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getListeners()();}-*/;
  private native boolean m2248(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::addCaptureListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native boolean m2249(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::removeCaptureListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native com.badlogic.gdx.utils.Array m2250(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getCaptureListeners()();}-*/;
  private native Object m2251(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::addAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native Object m2252(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::removeAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native com.badlogic.gdx.utils.Array m2253(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getActions()();}-*/;
  private native Object m2254(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::clearActions()();return null;}-*/;
  private native Object m2255(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::clearListeners()();return null;}-*/;
  private native Object m2256(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::clear()();return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Stage m2257(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getStage()();}-*/;
  private native Object m2258(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Stage p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setStage(Lcom/badlogic/gdx/scenes/scene2d/Stage;)(p0);return null;}-*/;
  private native boolean m2259(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::isDescendantOf(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);}-*/;
  private native boolean m2260(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::isAscendantOf(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);}-*/;
  private native boolean m2261(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::hasParent()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Group m2262(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getParent()();}-*/;
  private native Object m2263(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Group p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setParent(Lcom/badlogic/gdx/scenes/scene2d/Group;)(p0);return null;}-*/;
  private native boolean m2264(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::isTouchable()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Touchable m2265(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getTouchable()();}-*/;
  private native Object m2266(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Touchable p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setTouchable(Lcom/badlogic/gdx/scenes/scene2d/Touchable;)(p0);return null;}-*/;
  private native boolean m2267(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::isVisible()();}-*/;
  private native Object m2268(com.badlogic.gdx.scenes.scene2d.Actor obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setVisible(Z)(p0);return null;}-*/;
  private native java.lang.Object m2269(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getUserObject()();}-*/;
  private native Object m2270(com.badlogic.gdx.scenes.scene2d.Actor obj, java.lang.Object p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setUserObject(Ljava/lang/Object;)(p0);return null;}-*/;
  private native float m2271(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getX()();}-*/;
  private native Object m2272(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setX(F)(p0);return null;}-*/;
  private native float m2273(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getY()();}-*/;
  private native Object m2274(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setY(F)(p0);return null;}-*/;
  private native Object m2275(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setPosition(FF)(p0, p1);return null;}-*/;
  private native Object m2276(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::translate(FF)(p0, p1);return null;}-*/;
  private native float m2277(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getWidth()();}-*/;
  private native Object m2278(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setWidth(F)(p0);return null;}-*/;
  private native float m2279(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getHeight()();}-*/;
  private native Object m2280(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setHeight(F)(p0);return null;}-*/;
  private native float m2281(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getTop()();}-*/;
  private native float m2282(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getRight()();}-*/;
  private native Object m2283(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::sizeChanged()();return null;}-*/;
  private native Object m2284(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setSize(FF)(p0, p1);return null;}-*/;
  private native Object m2285(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::size(F)(p0);return null;}-*/;
  private native Object m2286(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::size(FF)(p0, p1);return null;}-*/;
  private native Object m2287(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setBounds(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native float m2288(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getOriginX()();}-*/;
  private native Object m2289(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setOriginX(F)(p0);return null;}-*/;
  private native float m2290(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getOriginY()();}-*/;
  private native Object m2291(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setOriginY(F)(p0);return null;}-*/;
  private native Object m2292(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setOrigin(FF)(p0, p1);return null;}-*/;
  private native float m2293(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getScaleX()();}-*/;
  private native Object m2294(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setScaleX(F)(p0);return null;}-*/;
  private native float m2295(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getScaleY()();}-*/;
  private native Object m2296(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setScaleY(F)(p0);return null;}-*/;
  private native Object m2297(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setScale(F)(p0);return null;}-*/;
  private native Object m2298(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setScale(FF)(p0, p1);return null;}-*/;
  private native Object m2299(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::scale(F)(p0);return null;}-*/;
  private native Object m2300(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::scale(FF)(p0, p1);return null;}-*/;
  private native float m2301(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getRotation()();}-*/;
  private native Object m2302(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setRotation(F)(p0);return null;}-*/;
  private native Object m2303(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::rotate(F)(p0);return null;}-*/;
  private native Object m2304(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native Object m2305(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1,float p2,float p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setColor(FFFF)(p0, p1, p2, p3);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m2306(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getColor()();}-*/;
  private native java.lang.String m2307(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getName()();}-*/;
  private native Object m2308(com.badlogic.gdx.scenes.scene2d.Actor obj, java.lang.String p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setName(Ljava/lang/String;)(p0);return null;}-*/;
  private native Object m2309(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::toFront()();return null;}-*/;
  private native Object m2310(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::toBack()();return null;}-*/;
  private native Object m2311(com.badlogic.gdx.scenes.scene2d.Actor obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::setZIndex(I)(p0);return null;}-*/;
  private native int m2312(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::getZIndex()();}-*/;
  private native boolean m2313(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::clipBegin()();}-*/;
  private native boolean m2314(com.badlogic.gdx.scenes.scene2d.Actor obj, float p0,float p1,float p2,float p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::clipBegin(FFFF)(p0, p1, p2, p3);}-*/;
  private native Object m2315(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Actor::clipEnd()();return null;}-*/;
  private native com.badlogic.gdx.math.Vector2 m2316(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::screenToLocalCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2317(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::stageToLocalCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2318(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::localToStageCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2319(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::localToParentCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2320(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.math.Vector2 p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::localToAscendantCoordinates(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/math/Vector2;)(p0, p1);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2321(com.badlogic.gdx.scenes.scene2d.Actor obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::parentToLocalCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native java.lang.String m2322(com.badlogic.gdx.scenes.scene2d.Actor obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Actor::toString()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.Actor m2323() {return new com.badlogic.gdx.scenes.scene2d.Actor();}
  private native Object m2342(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::handle()();return null;}-*/;
  private native Object m2343(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::cancel()();return null;}-*/;
  private native Object m2344(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::stop()();return null;}-*/;
  private native Object m2345(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::reset()();return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2346(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::getTarget()();}-*/;
  private native Object m2347(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::setTarget(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2348(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::getListenerActor()();}-*/;
  private native Object m2349(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::setListenerActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native boolean m2350(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::getBubbles()();}-*/;
  private native Object m2351(com.badlogic.gdx.scenes.scene2d.Event obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::setBubbles(Z)(p0);return null;}-*/;
  private native boolean m2352(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::isHandled()();}-*/;
  private native boolean m2353(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::isStopped()();}-*/;
  private native boolean m2354(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::isCancelled()();}-*/;
  private native Object m2355(com.badlogic.gdx.scenes.scene2d.Event obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::setCapture(Z)(p0);return null;}-*/;
  private native boolean m2356(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::isCapture()();}-*/;
  private native Object m2357(com.badlogic.gdx.scenes.scene2d.Event obj, com.badlogic.gdx.scenes.scene2d.Stage p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Event::setStage(Lcom/badlogic/gdx/scenes/scene2d/Stage;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Stage m2358(com.badlogic.gdx.scenes.scene2d.Event obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Event::getStage()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.Event m2359() {return new com.badlogic.gdx.scenes.scene2d.Event();}
  private native Object m2378(com.badlogic.gdx.scenes.scene2d.Group obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::act(F)(p0);return null;}-*/;
  private native Object m2379(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private native Object m2380(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::drawChildren(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private native Object m2381(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.graphics.g2d.Batch p0,com.badlogic.gdx.math.Matrix4 p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::applyTransform(Lcom/badlogic/gdx/graphics/g2d/Batch;Lcom/badlogic/gdx/math/Matrix4;)(p0, p1);return null;}-*/;
  private native com.badlogic.gdx.math.Matrix4 m2382(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::computeTransform()();}-*/;
  private native Object m2383(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.graphics.g2d.Batch p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::resetTransform(Lcom/badlogic/gdx/graphics/g2d/Batch;)(p0);return null;}-*/;
  private native Object m2384(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.math.Rectangle p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::setCullingArea(Lcom/badlogic/gdx/math/Rectangle;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2385(com.badlogic.gdx.scenes.scene2d.Group obj, float p0,float p1,boolean p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::hit(FFZ)(p0, p1, p2);}-*/;
  private native Object m2386(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::childrenChanged()();return null;}-*/;
  private native Object m2387(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::addActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m2388(com.badlogic.gdx.scenes.scene2d.Group obj, int p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::addActorAt(ILcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);return null;}-*/;
  private native Object m2389(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::addActorBefore(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);return null;}-*/;
  private native Object m2390(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::addActorAfter(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);return null;}-*/;
  private native boolean m2391(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::removeActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);}-*/;
  private native Object m2392(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::clearChildren()();return null;}-*/;
  private native Object m2393(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::clear()();return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2394(com.badlogic.gdx.scenes.scene2d.Group obj, java.lang.String p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::findActor(Ljava/lang/String;)(p0);}-*/;
  private native Object m2395(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Stage p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::setStage(Lcom/badlogic/gdx/scenes/scene2d/Stage;)(p0);return null;}-*/;
  private native boolean m2396(com.badlogic.gdx.scenes.scene2d.Group obj, int p0,int p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::swapActor(II)(p0, p1);}-*/;
  private native boolean m2397(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::swapActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);}-*/;
  private native com.badlogic.gdx.utils.SnapshotArray m2398(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::getChildren()();}-*/;
  private native boolean m2399(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::hasChildren()();}-*/;
  private native Object m2400(com.badlogic.gdx.scenes.scene2d.Group obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::setTransform(Z)(p0);return null;}-*/;
  private native boolean m2401(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::isTransform()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m2402(com.badlogic.gdx.scenes.scene2d.Group obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.math.Vector2 p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Group::localToDescendantCoordinates(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/math/Vector2;)(p0, p1);}-*/;
  private native Object m2403(com.badlogic.gdx.scenes.scene2d.Group obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::print()();return null;}-*/;
  private native Object m2404(com.badlogic.gdx.scenes.scene2d.Group obj, java.lang.String p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Group::print(Ljava/lang/String;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.Group m2405() {return new com.badlogic.gdx.scenes.scene2d.Group();}
  private native Object m2425(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::reset()();return null;}-*/;
  private native float m2426(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getStageX()();}-*/;
  private native Object m2427(com.badlogic.gdx.scenes.scene2d.InputEvent obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setStageX(F)(p0);return null;}-*/;
  private native float m2428(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getStageY()();}-*/;
  private native Object m2429(com.badlogic.gdx.scenes.scene2d.InputEvent obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setStageY(F)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type m2430(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getType()();}-*/;
  private native Object m2431(com.badlogic.gdx.scenes.scene2d.InputEvent obj, com.badlogic.gdx.scenes.scene2d.InputEvent.Type p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setType(Lcom/badlogic/gdx/scenes/scene2d/InputEvent$Type;)(p0);return null;}-*/;
  private native int m2432(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getPointer()();}-*/;
  private native Object m2433(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setPointer(I)(p0);return null;}-*/;
  private native int m2434(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getButton()();}-*/;
  private native Object m2435(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setButton(I)(p0);return null;}-*/;
  private native int m2436(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getKeyCode()();}-*/;
  private native Object m2437(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setKeyCode(I)(p0);return null;}-*/;
  private native char m2438(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getCharacter()();}-*/;
  private native Object m2439(com.badlogic.gdx.scenes.scene2d.InputEvent obj, char p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setCharacter(C)(p0);return null;}-*/;
  private native int m2440(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getScrollAmount()();}-*/;
  private native Object m2441(com.badlogic.gdx.scenes.scene2d.InputEvent obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setScrollAmount(I)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2442(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::getRelatedActor()();}-*/;
  private native Object m2443(com.badlogic.gdx.scenes.scene2d.InputEvent obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::setRelatedActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.math.Vector2 m2444(com.badlogic.gdx.scenes.scene2d.InputEvent obj, com.badlogic.gdx.scenes.scene2d.Actor p0,com.badlogic.gdx.math.Vector2 p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::toCoordinates(Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/math/Vector2;)(p0, p1);}-*/;
  private native boolean m2445(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::isTouchFocusCancel()();}-*/;
  private native java.lang.String m2446(com.badlogic.gdx.scenes.scene2d.InputEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputEvent::toString()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.InputEvent m2447() {return new com.badlogic.gdx.scenes.scene2d.InputEvent();}
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type[] m2469() /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::values()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.InputEvent.Type m2470(java.lang.String p0) /*-{return @com.badlogic.gdx.scenes.scene2d.InputEvent.Type::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native boolean m2475(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native boolean m2476(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::touchDown(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native Object m2477(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputListener::touchUp(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m2478(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputListener::touchDragged(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native boolean m2479(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::mouseMoved(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FF)(p0, p1, p2);}-*/;
  private native Object m2480(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,com.badlogic.gdx.scenes.scene2d.Actor p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputListener::enter(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFILcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m2481(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,com.badlogic.gdx.scenes.scene2d.Actor p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.InputListener::exit(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFILcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native boolean m2482(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::scrolled(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);}-*/;
  private native boolean m2483(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,int p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::keyDown(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;I)(p0, p1);}-*/;
  private native boolean m2484(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,int p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::keyUp(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;I)(p0, p1);}-*/;
  private native boolean m2485(com.badlogic.gdx.scenes.scene2d.InputListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,char p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.InputListener::keyTyped(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;C)(p0, p1);}-*/;
  private static com.badlogic.gdx.scenes.scene2d.InputListener m2486() {return new com.badlogic.gdx.scenes.scene2d.InputListener();}
  private native Object m2538(com.badlogic.gdx.scenes.scene2d.Stage obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setViewport(FF)(p0, p1);return null;}-*/;
  private native Object m2539(com.badlogic.gdx.scenes.scene2d.Stage obj, float p0,float p1,boolean p2) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setViewport(FFZ)(p0, p1, p2);return null;}-*/;
  private native Object m2540(com.badlogic.gdx.scenes.scene2d.Stage obj, float p0,float p1,boolean p2,float p3,float p4,float p5,float p6) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setViewport(FFZFFFF)(p0, p1, p2, p3, p4, p5, p6);return null;}-*/;
  private native Object m2541(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::draw()();return null;}-*/;
  private native Object m2542(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::act()();return null;}-*/;
  private native Object m2543(com.badlogic.gdx.scenes.scene2d.Stage obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::act(F)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2544(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor p0,int p1,int p2,int p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::fireEnterAndExit(Lcom/badlogic/gdx/scenes/scene2d/Actor;III)(p0, p1, p2, p3);}-*/;
  private native boolean m2545(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0,int p1,int p2,int p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::touchDown(IIII)(p0, p1, p2, p3);}-*/;
  private native boolean m2546(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0,int p1,int p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::touchDragged(III)(p0, p1, p2);}-*/;
  private native boolean m2547(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0,int p1,int p2,int p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::touchUp(IIII)(p0, p1, p2, p3);}-*/;
  private native boolean m2548(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0,int p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::mouseMoved(II)(p0, p1);}-*/;
  private native boolean m2549(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::scrolled(I)(p0);}-*/;
  private native boolean m2550(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::keyDown(I)(p0);}-*/;
  private native boolean m2551(com.badlogic.gdx.scenes.scene2d.Stage obj, int p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::keyUp(I)(p0);}-*/;
  private native boolean m2552(com.badlogic.gdx.scenes.scene2d.Stage obj, char p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::keyTyped(C)(p0);}-*/;
  private native Object m2553(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0,com.badlogic.gdx.scenes.scene2d.Actor p1,com.badlogic.gdx.scenes.scene2d.Actor p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::addTouchFocus(Lcom/badlogic/gdx/scenes/scene2d/EventListener;Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/scenes/scene2d/Actor;II)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m2554(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0,com.badlogic.gdx.scenes.scene2d.Actor p1,com.badlogic.gdx.scenes.scene2d.Actor p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::removeTouchFocus(Lcom/badlogic/gdx/scenes/scene2d/EventListener;Lcom/badlogic/gdx/scenes/scene2d/Actor;Lcom/badlogic/gdx/scenes/scene2d/Actor;II)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m2555(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::cancelTouchFocus()();return null;}-*/;
  private native Object m2556(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::cancelTouchFocus(Lcom/badlogic/gdx/scenes/scene2d/EventListener;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);return null;}-*/;
  private native Object m2557(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::addActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m2558(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::addAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native com.badlogic.gdx.utils.Array m2559(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getActors()();}-*/;
  private native boolean m2560(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::addListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native boolean m2561(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::removeListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native boolean m2562(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::addCaptureListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native boolean m2563(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::removeCaptureListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);}-*/;
  private native Object m2564(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::clear()();return null;}-*/;
  private native Object m2565(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::unfocusAll()();return null;}-*/;
  private native Object m2566(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::unfocus(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m2567(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setKeyboardFocus(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2568(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getKeyboardFocus()();}-*/;
  private native Object m2569(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setScrollFocus(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2570(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getScrollFocus()();}-*/;
  private native float m2571(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getWidth()();}-*/;
  private native float m2572(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getHeight()();}-*/;
  private native float m2573(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getGutterWidth()();}-*/;
  private native float m2574(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getGutterHeight()();}-*/;
  private native com.badlogic.gdx.graphics.g2d.Batch m2575(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getSpriteBatch()();}-*/;
  private native com.badlogic.gdx.graphics.Camera m2576(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getCamera()();}-*/;
  private native Object m2577(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.graphics.Camera p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::setCamera(Lcom/badlogic/gdx/graphics/Camera;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Group m2578(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::getRoot()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2579(com.badlogic.gdx.scenes.scene2d.Stage obj, float p0,float p1,boolean p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::hit(FFZ)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2580(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::screenToStageCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2581(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.math.Vector2 p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::stageToScreenCoordinates(Lcom/badlogic/gdx/math/Vector2;)(p0);}-*/;
  private native com.badlogic.gdx.math.Vector2 m2582(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.math.Vector2 p0,com.badlogic.gdx.math.Matrix4 p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.Stage::toScreenCoordinates(Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Matrix4;)(p0, p1);}-*/;
  private native Object m2583(com.badlogic.gdx.scenes.scene2d.Stage obj, com.badlogic.gdx.math.Rectangle p0,com.badlogic.gdx.math.Rectangle p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::calculateScissors(Lcom/badlogic/gdx/math/Rectangle;Lcom/badlogic/gdx/math/Rectangle;)(p0, p1);return null;}-*/;
  private native Object m2584(com.badlogic.gdx.scenes.scene2d.Stage obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage::dispose()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.Stage m2585() {return new com.badlogic.gdx.scenes.scene2d.Stage();}
  private static com.badlogic.gdx.scenes.scene2d.Stage m2586(float p0,float p1) {return new com.badlogic.gdx.scenes.scene2d.Stage(p0, p1);}
  private static com.badlogic.gdx.scenes.scene2d.Stage m2587(float p0,float p1,boolean p2) {return new com.badlogic.gdx.scenes.scene2d.Stage(p0, p1, p2);}
  private static com.badlogic.gdx.scenes.scene2d.Stage m2588(float p0,float p1,boolean p2,com.badlogic.gdx.graphics.g2d.Batch p3) {return new com.badlogic.gdx.scenes.scene2d.Stage(p0, p1, p2, p3);}
  private native Object m2600(com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus::reset()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus m2601() {return new com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus();}
  private native com.badlogic.gdx.scenes.scene2d.Touchable[] m2609() /*-{return @com.badlogic.gdx.scenes.scene2d.Touchable::values()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Touchable m2610(java.lang.String p0) /*-{return @com.badlogic.gdx.scenes.scene2d.Touchable::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Action m2613(java.lang.Class p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::action(Ljava/lang/Class;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AddAction m2614(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::addAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AddAction m2615(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::addAction(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveAction m2616(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveAction m2617(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeAction(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveToAction m2618(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveTo(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveToAction m2619(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveTo(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveToAction m2620(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveTo(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveByAction m2621(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveBy(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveByAction m2622(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveBy(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.MoveByAction m2623(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::moveBy(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeToAction m2624(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeTo(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeToAction m2625(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeTo(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeToAction m2626(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeTo(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeByAction m2627(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeBy(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeByAction m2628(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeBy(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SizeByAction m2629(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sizeBy(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction m2630(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleTo(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction m2631(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleTo(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction m2632(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleTo(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction m2633(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleBy(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction m2634(float p0,float p1,float p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleBy(FFF)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction m2635(float p0,float p1,float p2,com.badlogic.gdx.math.Interpolation p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::scaleBy(FFFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateToAction m2636(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateTo(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateToAction m2637(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateTo(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateToAction m2638(float p0,float p1,com.badlogic.gdx.math.Interpolation p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateTo(FFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateByAction m2639(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateBy(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateByAction m2640(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateBy(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RotateByAction m2641(float p0,float p1,com.badlogic.gdx.math.Interpolation p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::rotateBy(FFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ColorAction m2642(com.badlogic.gdx.graphics.Color p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::color(Lcom/badlogic/gdx/graphics/Color;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ColorAction m2643(com.badlogic.gdx.graphics.Color p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::color(Lcom/badlogic/gdx/graphics/Color;F)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ColorAction m2644(com.badlogic.gdx.graphics.Color p0,float p1,com.badlogic.gdx.math.Interpolation p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::color(Lcom/badlogic/gdx/graphics/Color;FLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2645(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::alpha(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2646(float p0,float p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::alpha(FF)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2647(float p0,float p1,com.badlogic.gdx.math.Interpolation p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::alpha(FFLcom/badlogic/gdx/math/Interpolation;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2648(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::fadeOut(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2649(float p0,com.badlogic.gdx.math.Interpolation p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::fadeOut(FLcom/badlogic/gdx/math/Interpolation;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2650(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::fadeIn(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2651(float p0,com.badlogic.gdx.math.Interpolation p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::fadeIn(FLcom/badlogic/gdx/math/Interpolation;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.VisibleAction m2652() /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::show()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.VisibleAction m2653() /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::hide()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.VisibleAction m2654(boolean p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::visible(Z)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.TouchableAction m2655(com.badlogic.gdx.scenes.scene2d.Touchable p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::touchable(Lcom/badlogic/gdx/scenes/scene2d/Touchable;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction m2656() /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeActor()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction m2657(com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.DelayAction m2658(float p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::delay(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.DelayAction m2659(float p0,com.badlogic.gdx.scenes.scene2d.Action p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::delay(FLcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction m2660(float p0,com.badlogic.gdx.scenes.scene2d.Action p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::timeScale(FLcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2661(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2662(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2663(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2664(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2665(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3,com.badlogic.gdx.scenes.scene2d.Action p4) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2666(com.badlogic.gdx.scenes.scene2d.Action[] p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence([Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m2667() /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::sequence()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2668(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2669(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2670(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2671(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2, p3);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2672(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3,com.badlogic.gdx.scenes.scene2d.Action p4) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel(Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1, p2, p3, p4);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2673(com.badlogic.gdx.scenes.scene2d.Action[] p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel([Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2674() /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::parallel()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RepeatAction m2675(int p0,com.badlogic.gdx.scenes.scene2d.Action p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::repeat(ILcom/badlogic/gdx/scenes/scene2d/Action;)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RepeatAction m2676(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::forever(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RunnableAction m2677(java.lang.Runnable p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::run(Ljava/lang/Runnable;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.LayoutAction m2678(boolean p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::layout(Z)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AfterAction m2679(com.badlogic.gdx.scenes.scene2d.Action p0) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::after(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction m2680(com.badlogic.gdx.scenes.scene2d.EventListener p0,boolean p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::addListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction m2681(com.badlogic.gdx.scenes.scene2d.EventListener p0,boolean p1,com.badlogic.gdx.scenes.scene2d.Actor p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::addListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;ZLcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction m2682(com.badlogic.gdx.scenes.scene2d.EventListener p0,boolean p1) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;Z)(p0, p1);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction m2683(com.badlogic.gdx.scenes.scene2d.EventListener p0,boolean p1,com.badlogic.gdx.scenes.scene2d.Actor p2) /*-{return @com.badlogic.gdx.scenes.scene2d.actions.Actions::removeListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;ZLcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.Actions m2684() {return new com.badlogic.gdx.scenes.scene2d.actions.Actions();}
  private native boolean m2690(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::act(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2691(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::getTargetActor()();}-*/;
  private native Object m2692(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::setTargetActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Action m2693(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::getAction()();}-*/;
  private native Object m2694(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::setAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native Object m2695(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::restart()();return null;}-*/;
  private native Object m2696(com.badlogic.gdx.scenes.scene2d.actions.AddAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddAction::reset()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.AddAction m2697() {return new com.badlogic.gdx.scenes.scene2d.actions.AddAction();}
  private native boolean m2705(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::act(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2706(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::getTargetActor()();}-*/;
  private native Object m2707(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::setTargetActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.EventListener m2708(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::getListener()();}-*/;
  private native Object m2709(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::setListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);return null;}-*/;
  private native boolean m2710(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::getCapture()();}-*/;
  private native Object m2711(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::setCapture(Z)(p0);return null;}-*/;
  private native Object m2712(com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction::reset()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction m2713() {return new com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction();}
  private native Object m2717(com.badlogic.gdx.scenes.scene2d.actions.AfterAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AfterAction::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m2718(com.badlogic.gdx.scenes.scene2d.actions.AfterAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AfterAction::restart()();return null;}-*/;
  private native boolean m2719(com.badlogic.gdx.scenes.scene2d.actions.AfterAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AfterAction::delegate(F)(p0);}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.AfterAction m2720() {return new com.badlogic.gdx.scenes.scene2d.actions.AfterAction();}
  private native Object m2728(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::begin()();return null;}-*/;
  private native Object m2729(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::update(F)(p0);return null;}-*/;
  private native Object m2730(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::reset()();return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m2731(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::getColor()();}-*/;
  private native Object m2732(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native float m2733(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::getAlpha()();}-*/;
  private native Object m2734(com.badlogic.gdx.scenes.scene2d.actions.AlphaAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.AlphaAction::setAlpha(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction m2735() {return new com.badlogic.gdx.scenes.scene2d.actions.AlphaAction();}
  private native Object m2749(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::begin()();return null;}-*/;
  private native Object m2750(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::update(F)(p0);return null;}-*/;
  private native Object m2751(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::reset()();return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m2752(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::getColor()();}-*/;
  private native Object m2753(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::setColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.Color m2754(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::getEndColor()();}-*/;
  private native Object m2755(com.badlogic.gdx.scenes.scene2d.actions.ColorAction obj, com.badlogic.gdx.graphics.Color p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ColorAction::setEndColor(Lcom/badlogic/gdx/graphics/Color;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.ColorAction m2756() {return new com.badlogic.gdx.scenes.scene2d.actions.ColorAction();}
  private native boolean m2762(com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction m2763(java.lang.Class p0,int p1) {return new com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction(p0, p1);}
  private native boolean m2769(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::delegate(F)(p0);}-*/;
  private native Object m2770(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::finish()();return null;}-*/;
  private native Object m2771(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::restart()();return null;}-*/;
  private native float m2772(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::getTime()();}-*/;
  private native Object m2773(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::setTime(F)(p0);return null;}-*/;
  private native float m2774(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::getDuration()();}-*/;
  private native Object m2775(com.badlogic.gdx.scenes.scene2d.actions.DelayAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelayAction::setDuration(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.DelayAction m2776() {return new com.badlogic.gdx.scenes.scene2d.actions.DelayAction();}
  private static com.badlogic.gdx.scenes.scene2d.actions.DelayAction m2777(float p0) {return new com.badlogic.gdx.scenes.scene2d.actions.DelayAction(p0);}
  private native Object m2781(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::setAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Action m2782(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::getAction()();}-*/;
  private native boolean m2783(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::delegate(F)(p0);}-*/;
  private native boolean m2784(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::act(F)(p0);}-*/;
  private native Object m2785(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::restart()();return null;}-*/;
  private native Object m2786(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::reset()();return null;}-*/;
  private native Object m2787(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native java.lang.String m2788(com.badlogic.gdx.scenes.scene2d.actions.DelegateAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.DelegateAction::toString()();}-*/;
  private native Object m2796(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::restart()();return null;}-*/;
  private native Object m2797(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native boolean m2798(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native boolean m2799(com.badlogic.gdx.scenes.scene2d.actions.EventAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.EventAction::act(F)(p0);}-*/;
  private native Object m2807(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::begin()();return null;}-*/;
  private native Object m2808(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::update(F)(p0);return null;}-*/;
  private native float m2809(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::getValue()();}-*/;
  private native Object m2810(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::setValue(F)(p0);return null;}-*/;
  private native float m2811(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::getStart()();}-*/;
  private native Object m2812(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::setStart(F)(p0);return null;}-*/;
  private native float m2813(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::getEnd()();}-*/;
  private native Object m2814(com.badlogic.gdx.scenes.scene2d.actions.FloatAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.FloatAction::setEnd(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.FloatAction m2815() {return new com.badlogic.gdx.scenes.scene2d.actions.FloatAction();}
  private static com.badlogic.gdx.scenes.scene2d.actions.FloatAction m2816(float p0,float p1) {return new com.badlogic.gdx.scenes.scene2d.actions.FloatAction(p0, p1);}
  private native Object m2824(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::begin()();return null;}-*/;
  private native Object m2825(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::update(F)(p0);return null;}-*/;
  private native int m2826(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::getValue()();}-*/;
  private native Object m2827(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::setValue(I)(p0);return null;}-*/;
  private native int m2828(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::getStart()();}-*/;
  private native Object m2829(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::setStart(I)(p0);return null;}-*/;
  private native int m2830(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::getEnd()();}-*/;
  private native Object m2831(com.badlogic.gdx.scenes.scene2d.actions.IntAction obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.IntAction::setEnd(I)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.IntAction m2832() {return new com.badlogic.gdx.scenes.scene2d.actions.IntAction();}
  private static com.badlogic.gdx.scenes.scene2d.actions.IntAction m2833(int p0,int p1) {return new com.badlogic.gdx.scenes.scene2d.actions.IntAction(p0, p1);}
  private native Object m2837(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native boolean m2838(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::act(F)(p0);}-*/;
  private native boolean m2839(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::isEnabled()();}-*/;
  private native Object m2840(com.badlogic.gdx.scenes.scene2d.actions.LayoutAction obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.LayoutAction::setLayoutEnabled(Z)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction m2841() {return new com.badlogic.gdx.scenes.scene2d.actions.LayoutAction();}
  private native Object m2847(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::updateRelative(F)(p0);return null;}-*/;
  private native Object m2848(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::setAmount(FF)(p0, p1);return null;}-*/;
  private native float m2849(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::getAmountX()();}-*/;
  private native Object m2850(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::setAmountX(F)(p0);return null;}-*/;
  private native float m2851(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::getAmountY()();}-*/;
  private native Object m2852(com.badlogic.gdx.scenes.scene2d.actions.MoveByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveByAction::setAmountY(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction m2853() {return new com.badlogic.gdx.scenes.scene2d.actions.MoveByAction();}
  private native Object m2863(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::begin()();return null;}-*/;
  private native Object m2864(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::update(F)(p0);return null;}-*/;
  private native Object m2865(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setPosition(FF)(p0, p1);return null;}-*/;
  private native float m2866(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::getX()();}-*/;
  private native Object m2867(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setX(F)(p0);return null;}-*/;
  private native float m2868(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::getY()();}-*/;
  private native Object m2869(com.badlogic.gdx.scenes.scene2d.actions.MoveToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setY(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction m2870() {return new com.badlogic.gdx.scenes.scene2d.actions.MoveToAction();}
  private native boolean m2876(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::act(F)(p0);}-*/;
  private native Object m2877(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::restart()();return null;}-*/;
  private native Object m2878(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::reset()();return null;}-*/;
  private native Object m2879(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::addAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native Object m2880(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::setActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.utils.Array m2881(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::getActions()();}-*/;
  private native java.lang.String m2882(com.badlogic.gdx.scenes.scene2d.actions.ParallelAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ParallelAction::toString()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2883() {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction();}
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2884(com.badlogic.gdx.scenes.scene2d.Action p0) {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction(p0);}
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2885(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1) {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction(p0, p1);}
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2886(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2) {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction(p0, p1, p2);}
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2887(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3) {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction(p0, p1, p2, p3);}
  private static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction m2888(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3,com.badlogic.gdx.scenes.scene2d.Action p4) {return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction(p0, p1, p2, p3, p4);}
  private native Object m2892(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction::begin()();return null;}-*/;
  private native Object m2893(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction::update(F)(p0);return null;}-*/;
  private native Object m2894(com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction::updateRelative(F)(p0);return null;}-*/;
  private native boolean m2900(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::act(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2901(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::getTargetActor()();}-*/;
  private native Object m2902(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::setTargetActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Action m2903(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::getAction()();}-*/;
  private native Object m2904(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj, com.badlogic.gdx.scenes.scene2d.Action p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::setAction(Lcom/badlogic/gdx/scenes/scene2d/Action;)(p0);return null;}-*/;
  private native Object m2905(com.badlogic.gdx.scenes.scene2d.actions.RemoveAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveAction::reset()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RemoveAction m2906() {return new com.badlogic.gdx.scenes.scene2d.actions.RemoveAction();}
  private native boolean m2912(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::act(F)(p0);}-*/;
  private native Object m2913(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::restart()();return null;}-*/;
  private native Object m2914(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::reset()();return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2915(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::getRemoveActor()();}-*/;
  private native Object m2916(com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction::setRemoveActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction m2917() {return new com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction();}
  private native boolean m2925(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::act(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m2926(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::getTargetActor()();}-*/;
  private native Object m2927(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::setTargetActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.EventListener m2928(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::getListener()();}-*/;
  private native Object m2929(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, com.badlogic.gdx.scenes.scene2d.EventListener p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::setListener(Lcom/badlogic/gdx/scenes/scene2d/EventListener;)(p0);return null;}-*/;
  private native boolean m2930(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::getCapture()();}-*/;
  private native Object m2931(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::setCapture(Z)(p0);return null;}-*/;
  private native Object m2932(com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction::reset()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction m2933() {return new com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction();}
  private native boolean m2943(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::delegate(F)(p0);}-*/;
  private native Object m2944(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::finish()();return null;}-*/;
  private native Object m2945(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::restart()();return null;}-*/;
  private native Object m2946(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::setCount(I)(p0);return null;}-*/;
  private native int m2947(com.badlogic.gdx.scenes.scene2d.actions.RepeatAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RepeatAction::getCount()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RepeatAction m2948() {return new com.badlogic.gdx.scenes.scene2d.actions.RepeatAction();}
  private native Object m2952(com.badlogic.gdx.scenes.scene2d.actions.RotateByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateByAction::updateRelative(F)(p0);return null;}-*/;
  private native float m2953(com.badlogic.gdx.scenes.scene2d.actions.RotateByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateByAction::getAmount()();}-*/;
  private native Object m2954(com.badlogic.gdx.scenes.scene2d.actions.RotateByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateByAction::setAmount(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction m2955() {return new com.badlogic.gdx.scenes.scene2d.actions.RotateByAction();}
  private native Object m2961(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::begin()();return null;}-*/;
  private native Object m2962(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::update(F)(p0);return null;}-*/;
  private native float m2963(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::getRotation()();}-*/;
  private native Object m2964(com.badlogic.gdx.scenes.scene2d.actions.RotateToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RotateToAction::setRotation(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction m2965() {return new com.badlogic.gdx.scenes.scene2d.actions.RotateToAction();}
  private native boolean m2971(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::act(F)(p0);}-*/;
  private native Object m2972(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::run()();return null;}-*/;
  private native Object m2973(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::restart()();return null;}-*/;
  private native Object m2974(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::reset()();return null;}-*/;
  private native java.lang.Runnable m2975(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::getRunnable()();}-*/;
  private native Object m2976(com.badlogic.gdx.scenes.scene2d.actions.RunnableAction obj, java.lang.Runnable p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.RunnableAction::setRunnable(Ljava/lang/Runnable;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.RunnableAction m2977() {return new com.badlogic.gdx.scenes.scene2d.actions.RunnableAction();}
  private native Object m2983(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::updateRelative(F)(p0);return null;}-*/;
  private native Object m2984(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::setAmount(FF)(p0, p1);return null;}-*/;
  private native Object m2985(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::setAmount(F)(p0);return null;}-*/;
  private native float m2986(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::getAmountX()();}-*/;
  private native Object m2987(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::setAmountX(F)(p0);return null;}-*/;
  private native float m2988(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::getAmountY()();}-*/;
  private native Object m2989(com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction::setAmountY(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction m2990() {return new com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction();}
  private native Object m3000(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::begin()();return null;}-*/;
  private native Object m3001(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::update(F)(p0);return null;}-*/;
  private native Object m3002(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setScale(FF)(p0, p1);return null;}-*/;
  private native Object m3003(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setScale(F)(p0);return null;}-*/;
  private native float m3004(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::getX()();}-*/;
  private native Object m3005(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setX(F)(p0);return null;}-*/;
  private native float m3006(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::getY()();}-*/;
  private native Object m3007(com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setY(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction m3008() {return new com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction();}
  private native boolean m3012(com.badlogic.gdx.scenes.scene2d.actions.SequenceAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SequenceAction::act(F)(p0);}-*/;
  private native Object m3013(com.badlogic.gdx.scenes.scene2d.actions.SequenceAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SequenceAction::restart()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3014() {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction();}
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3015(com.badlogic.gdx.scenes.scene2d.Action p0) {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction(p0);}
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3016(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1) {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction(p0, p1);}
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3017(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2) {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction(p0, p1, p2);}
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3018(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3) {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction(p0, p1, p2, p3);}
  private static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction m3019(com.badlogic.gdx.scenes.scene2d.Action p0,com.badlogic.gdx.scenes.scene2d.Action p1,com.badlogic.gdx.scenes.scene2d.Action p2,com.badlogic.gdx.scenes.scene2d.Action p3,com.badlogic.gdx.scenes.scene2d.Action p4) {return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction(p0, p1, p2, p3, p4);}
  private native Object m3025(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::updateRelative(F)(p0);return null;}-*/;
  private native Object m3026(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::setAmount(FF)(p0, p1);return null;}-*/;
  private native float m3027(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::getAmountWidth()();}-*/;
  private native Object m3028(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::setAmountWidth(F)(p0);return null;}-*/;
  private native float m3029(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::getAmountHeight()();}-*/;
  private native Object m3030(com.badlogic.gdx.scenes.scene2d.actions.SizeByAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeByAction::setAmountHeight(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction m3031() {return new com.badlogic.gdx.scenes.scene2d.actions.SizeByAction();}
  private native Object m3041(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::begin()();return null;}-*/;
  private native Object m3042(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::update(F)(p0);return null;}-*/;
  private native Object m3043(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::setSize(FF)(p0, p1);return null;}-*/;
  private native float m3044(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::getWidth()();}-*/;
  private native Object m3045(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::setWidth(F)(p0);return null;}-*/;
  private native float m3046(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::getHeight()();}-*/;
  private native Object m3047(com.badlogic.gdx.scenes.scene2d.actions.SizeToAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::setHeight(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction m3048() {return new com.badlogic.gdx.scenes.scene2d.actions.SizeToAction();}
  private native boolean m3062(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::act(F)(p0);}-*/;
  private native Object m3063(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::begin()();return null;}-*/;
  private native Object m3064(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::end()();return null;}-*/;
  private native Object m3065(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::update(F)(p0);return null;}-*/;
  private native Object m3066(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::finish()();return null;}-*/;
  private native Object m3067(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::restart()();return null;}-*/;
  private native Object m3068(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::reset()();return null;}-*/;
  private native float m3069(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::getTime()();}-*/;
  private native Object m3070(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::setTime(F)(p0);return null;}-*/;
  private native float m3071(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::getDuration()();}-*/;
  private native Object m3072(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::setDuration(F)(p0);return null;}-*/;
  private native com.badlogic.gdx.math.Interpolation m3073(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::getInterpolation()();}-*/;
  private native Object m3074(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, com.badlogic.gdx.math.Interpolation p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::setInterpolation(Lcom/badlogic/gdx/math/Interpolation;)(p0);return null;}-*/;
  private native boolean m3075(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::isReverse()();}-*/;
  private native Object m3076(com.badlogic.gdx.scenes.scene2d.actions.TemporalAction obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TemporalAction::setReverse(Z)(p0);return null;}-*/;
  private native boolean m3080(com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction::delegate(F)(p0);}-*/;
  private native float m3081(com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction::getScale()();}-*/;
  private native Object m3082(com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction::setScale(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction m3083() {return new com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction();}
  private native boolean m3087(com.badlogic.gdx.scenes.scene2d.actions.TouchableAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TouchableAction::act(F)(p0);}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Touchable m3088(com.badlogic.gdx.scenes.scene2d.actions.TouchableAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.TouchableAction::getTouchable()();}-*/;
  private native Object m3089(com.badlogic.gdx.scenes.scene2d.actions.TouchableAction obj, com.badlogic.gdx.scenes.scene2d.Touchable p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.TouchableAction::setTouchable(Lcom/badlogic/gdx/scenes/scene2d/Touchable;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction m3090() {return new com.badlogic.gdx.scenes.scene2d.actions.TouchableAction();}
  private native boolean m3094(com.badlogic.gdx.scenes.scene2d.actions.VisibleAction obj, float p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.VisibleAction::act(F)(p0);}-*/;
  private native boolean m3095(com.badlogic.gdx.scenes.scene2d.actions.VisibleAction obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.actions.VisibleAction::isVisible()();}-*/;
  private native Object m3096(com.badlogic.gdx.scenes.scene2d.actions.VisibleAction obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.actions.VisibleAction::setVisible(Z)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction m3097() {return new com.badlogic.gdx.scenes.scene2d.actions.VisibleAction();}
  private native Object m3113(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::setAlignment(I)(p0);return null;}-*/;
  private native Object m3114(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::setReverse(Z)(p0);return null;}-*/;
  private native Object m3115(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::invalidate()();return null;}-*/;
  private native Object m3116(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::computeSize()();return null;}-*/;
  private native Object m3117(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::layout()();return null;}-*/;
  private native float m3118(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::getPrefWidth()();}-*/;
  private native float m3119(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::getPrefHeight()();}-*/;
  private native Object m3120(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::setSpacing(F)(p0);return null;}-*/;
  private native Object m3121(com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::setRound(Z)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup m3122() {return new com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup();}
  private native Object m3138(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::invalidate()();return null;}-*/;
  private native Object m3139(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::computeSize()();return null;}-*/;
  private native Object m3140(com.badlogic.gdx.scenes.scene2d.ui.Stack obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::add(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native Object m3141(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::layout()();return null;}-*/;
  private native float m3142(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getPrefWidth()();}-*/;
  private native float m3143(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getPrefHeight()();}-*/;
  private native float m3144(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getMinWidth()();}-*/;
  private native float m3145(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getMinHeight()();}-*/;
  private native float m3146(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getMaxWidth()();}-*/;
  private native float m3147(com.badlogic.gdx.scenes.scene2d.ui.Stack obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Stack::getMaxHeight()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.ui.Stack m3148() {return new com.badlogic.gdx.scenes.scene2d.ui.Stack();}
  private native Object m3164(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::setAlignment(I)(p0);return null;}-*/;
  private native Object m3165(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::setReverse(Z)(p0);return null;}-*/;
  private native Object m3166(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::invalidate()();return null;}-*/;
  private native Object m3167(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::computeSize()();return null;}-*/;
  private native Object m3168(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::layout()();return null;}-*/;
  private native float m3169(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::getPrefWidth()();}-*/;
  private native float m3170(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::getPrefHeight()();}-*/;
  private native Object m3171(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::setSpacing(F)(p0);return null;}-*/;
  private native Object m3172(com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::setRound(Z)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup m3173() {return new com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup();}
  private native float m3181(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getMinWidth()();}-*/;
  private native float m3182(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getMinHeight()();}-*/;
  private native float m3183(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getPrefWidth()();}-*/;
  private native float m3184(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getPrefHeight()();}-*/;
  private native float m3185(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getMaxWidth()();}-*/;
  private native float m3186(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::getMaxHeight()();}-*/;
  private native Object m3187(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::setLayoutEnabled(Z)(p0);return null;}-*/;
  private native Object m3188(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::validate()();return null;}-*/;
  private native boolean m3189(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::needsLayout()();}-*/;
  private native Object m3190(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::invalidate()();return null;}-*/;
  private native Object m3191(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::invalidateHierarchy()();return null;}-*/;
  private native Object m3192(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::sizeChanged()();return null;}-*/;
  private native Object m3193(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::pack()();return null;}-*/;
  private native Object m3194(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::setFillParent(Z)(p0);return null;}-*/;
  private native Object m3195(com.badlogic.gdx.scenes.scene2d.ui.Widget obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private native Object m3196(com.badlogic.gdx.scenes.scene2d.ui.Widget obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.Widget::layout()();return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.ui.Widget m3197() {return new com.badlogic.gdx.scenes.scene2d.ui.Widget();}
  private native float m3205(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getMinWidth()();}-*/;
  private native float m3206(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getMinHeight()();}-*/;
  private native float m3207(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getPrefWidth()();}-*/;
  private native float m3208(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getPrefHeight()();}-*/;
  private native float m3209(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getMaxWidth()();}-*/;
  private native float m3210(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::getMaxHeight()();}-*/;
  private native Object m3211(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::setLayoutEnabled(Z)(p0);return null;}-*/;
  private native Object m3212(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, com.badlogic.gdx.scenes.scene2d.Group p0,boolean p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::setLayoutEnabled(Lcom/badlogic/gdx/scenes/scene2d/Group;Z)(p0, p1);return null;}-*/;
  private native Object m3213(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::validate()();return null;}-*/;
  private native boolean m3214(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::needsLayout()();}-*/;
  private native Object m3215(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::invalidate()();return null;}-*/;
  private native Object m3216(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::invalidateHierarchy()();return null;}-*/;
  private native Object m3217(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::childrenChanged()();return null;}-*/;
  private native Object m3218(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::sizeChanged()();return null;}-*/;
  private native Object m3219(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::pack()();return null;}-*/;
  private native Object m3220(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::setFillParent(Z)(p0);return null;}-*/;
  private native Object m3221(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::layout()();return null;}-*/;
  private native Object m3222(com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;F)(p0, p1);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup m3223() {return new com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup();}
  private native boolean m3235(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native Object m3236(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::touchDown(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3237(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::touchUp(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3238(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::tap(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native boolean m3239(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.Actor p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::longPress(Lcom/badlogic/gdx/scenes/scene2d/Actor;FF)(p0, p1, p2);}-*/;
  private native Object m3240(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::fling(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3241(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,float p3,float p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::pan(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFFF)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3242(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::zoom(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FF)(p0, p1, p2);return null;}-*/;
  private native Object m3243(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,com.badlogic.gdx.math.Vector2 p1,com.badlogic.gdx.math.Vector2 p2,com.badlogic.gdx.math.Vector2 p3,com.badlogic.gdx.math.Vector2 p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::pinch(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.input.GestureDetector m3244(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::getGestureDetector()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3245(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener::getTouchDownTarget()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener m3246() {return new com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener();}
  private static com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener m3247(float p0,float p1,float p2,float p3) {return new com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener(p0, p1, p2, p3);}
  private static com.badlogic.gdx.scenes.scene2d.utils.Align m3259() {return new com.badlogic.gdx.scenes.scene2d.utils.Align();}
  private native Object m3273(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1,float p2,float p3,float p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;FFFF)(p0, p1, p2, p3, p4);return null;}-*/;
  private native float m3274(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getLeftWidth()();}-*/;
  private native Object m3275(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setLeftWidth(F)(p0);return null;}-*/;
  private native float m3276(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getRightWidth()();}-*/;
  private native Object m3277(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setRightWidth(F)(p0);return null;}-*/;
  private native float m3278(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getTopHeight()();}-*/;
  private native Object m3279(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setTopHeight(F)(p0);return null;}-*/;
  private native float m3280(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getBottomHeight()();}-*/;
  private native Object m3281(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setBottomHeight(F)(p0);return null;}-*/;
  private native float m3282(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getMinWidth()();}-*/;
  private native Object m3283(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setMinWidth(F)(p0);return null;}-*/;
  private native float m3284(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::getMinHeight()();}-*/;
  private native Object m3285(com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable::setMinHeight(F)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable m3286() {return new com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable();}
  private static com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable m3287(com.badlogic.gdx.scenes.scene2d.utils.Drawable p0) {return new com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable(p0);}
  private native boolean m3289(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ChangeListener::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native Object m3290(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener obj, com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent p0,com.badlogic.gdx.scenes.scene2d.Actor p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ChangeListener::changed(Lcom/badlogic/gdx/scenes/scene2d/utils/ChangeListener$ChangeEvent;Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent m3292() {return new com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent();}
  private native boolean m3318(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDown(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native Object m3319(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchDragged(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3320(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::touchUp(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3321(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,com.badlogic.gdx.scenes.scene2d.Actor p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::enter(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFILcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3322(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,com.badlogic.gdx.scenes.scene2d.Actor p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::exit(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFILcom/badlogic/gdx/scenes/scene2d/Actor;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3323(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::cancel()();return null;}-*/;
  private native Object m3324(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::clicked(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FF)(p0, p1, p2);return null;}-*/;
  private native boolean m3325(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, com.badlogic.gdx.scenes.scene2d.Actor p0,float p1,float p2) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::isOver(Lcom/badlogic/gdx/scenes/scene2d/Actor;FF)(p0, p1, p2);}-*/;
  private native boolean m3326(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::isOver()();}-*/;
  private native boolean m3327(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float p0,float p1) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::inTapSquare(FF)(p0, p1);}-*/;
  private native boolean m3328(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::inTapSquare()();}-*/;
  private native Object m3329(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::invalidateTapSquare()();return null;}-*/;
  private native boolean m3330(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::isPressed()();}-*/;
  private native Object m3331(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::setTapSquareSize(F)(p0);return null;}-*/;
  private native float m3332(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getTapSquareSize()();}-*/;
  private native Object m3333(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::setTapCountInterval(F)(p0);return null;}-*/;
  private native int m3334(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getTapCount()();}-*/;
  private native float m3335(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getTouchDownX()();}-*/;
  private native float m3336(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getTouchDownY()();}-*/;
  private native int m3337(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getPressedButton()();}-*/;
  private native int m3338(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getPressedPointer()();}-*/;
  private native int m3339(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::getButton()();}-*/;
  private native Object m3340(com.badlogic.gdx.scenes.scene2d.utils.ClickListener obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.ClickListener::setButton(I)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.ClickListener m3341() {return new com.badlogic.gdx.scenes.scene2d.utils.ClickListener();}
  private static com.badlogic.gdx.scenes.scene2d.utils.ClickListener m3342(int p0) {return new com.badlogic.gdx.scenes.scene2d.utils.ClickListener(p0);}
  private native Object m3378(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::addSource(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;)(p0);return null;}-*/;
  private native Object m3379(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::removeSource(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;)(p0);return null;}-*/;
  private native Object m3380(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::addTarget(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Target;)(p0);return null;}-*/;
  private native Object m3381(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::removeTarget(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Target;)(p0);return null;}-*/;
  private native Object m3382(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::clear()();return null;}-*/;
  private native Object m3383(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setTapSquareSize(F)(p0);return null;}-*/;
  private native Object m3384(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setButton(I)(p0);return null;}-*/;
  private native Object m3385(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setDragActorPosition(FF)(p0, p1);return null;}-*/;
  private native Object m3386(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, float p0,float p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setTouchOffset(FF)(p0, p1);return null;}-*/;
  private native boolean m3387(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::isDragging()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3388(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::getDragActor()();}-*/;
  private native Object m3389(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setDragTime(I)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop m3390() {return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop();}
  private native Object m3400(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::setDragActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3401(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::getDragActor()();}-*/;
  private native Object m3402(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::setValidDragActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3403(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::getValidDragActor()();}-*/;
  private native Object m3404(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::setInvalidDragActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3405(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::getInvalidDragActor()();}-*/;
  private native java.lang.Object m3406(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::getObject()();}-*/;
  private native Object m3407(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload obj, java.lang.Object p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload::setObject(Ljava/lang/Object;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload m3408() {return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload();}
  private native com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload m3412(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source::dragStart(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);}-*/;
  private native Object m3413(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source::dragStop(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFILcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Target;)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3414(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source::getActor()();}-*/;
  private native boolean m3418(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source p0,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload p1,float p2,float p3,int p4) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target::drag(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Payload;FFI)(p0, p1, p2, p3, p4);}-*/;
  private native Object m3419(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source p0,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload p1) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target::reset(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Payload;)(p0, p1);return null;}-*/;
  private native Object m3420(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target obj, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source p0,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload p1,float p2,float p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target::drop(Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Source;Lcom/badlogic/gdx/scenes/scene2d/utils/DragAndDrop$Payload;FFI)(p0, p1, p2, p3, p4);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3421(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target::getActor()();}-*/;
  private native boolean m3439(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDown(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);}-*/;
  private native Object m3440(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchDragged(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3441(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3,int p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::touchUp(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFII)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3442(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::dragStart(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3443(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::drag(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3444(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, com.badlogic.gdx.scenes.scene2d.InputEvent p0,float p1,float p2,int p3) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::dragStop(Lcom/badlogic/gdx/scenes/scene2d/InputEvent;FFI)(p0, p1, p2, p3);return null;}-*/;
  private native Object m3445(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::cancel()();return null;}-*/;
  private native boolean m3446(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::isDragging()();}-*/;
  private native Object m3447(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, float p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::setTapSquareSize(F)(p0);return null;}-*/;
  private native float m3448(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getTapSquareSize()();}-*/;
  private native float m3449(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getTouchDownX()();}-*/;
  private native float m3450(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getTouchDownY()();}-*/;
  private native float m3451(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getDeltaX()();}-*/;
  private native float m3452(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getDeltaY()();}-*/;
  private native int m3453(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::getButton()();}-*/;
  private native Object m3454(com.badlogic.gdx.scenes.scene2d.utils.DragListener obj, int p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.DragListener::setButton(I)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.DragListener m3455() {return new com.badlogic.gdx.scenes.scene2d.utils.DragListener();}
  private native boolean m3458(com.badlogic.gdx.scenes.scene2d.utils.FocusListener obj, com.badlogic.gdx.scenes.scene2d.Event p0) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener::handle(Lcom/badlogic/gdx/scenes/scene2d/Event;)(p0);}-*/;
  private native Object m3459(com.badlogic.gdx.scenes.scene2d.utils.FocusListener obj, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent p0,com.badlogic.gdx.scenes.scene2d.Actor p1,boolean p2) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener::keyboardFocusChanged(Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;Lcom/badlogic/gdx/scenes/scene2d/Actor;Z)(p0, p1, p2);return null;}-*/;
  private native Object m3460(com.badlogic.gdx.scenes.scene2d.utils.FocusListener obj, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent p0,com.badlogic.gdx.scenes.scene2d.Actor p1,boolean p2) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener::scrollFocusChanged(Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent;Lcom/badlogic/gdx/scenes/scene2d/Actor;Z)(p0, p1, p2);return null;}-*/;
  private native Object m3468(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::reset()();return null;}-*/;
  private native boolean m3469(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::isFocused()();}-*/;
  private native Object m3470(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, boolean p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::setFocused(Z)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type m3471(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::getType()();}-*/;
  private native Object m3472(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::setType(Lcom/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type;)(p0);return null;}-*/;
  private native com.badlogic.gdx.scenes.scene2d.Actor m3473(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::getRelatedActor()();}-*/;
  private native Object m3474(com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent obj, com.badlogic.gdx.scenes.scene2d.Actor p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent::setRelatedActor(Lcom/badlogic/gdx/scenes/scene2d/Actor;)(p0);return null;}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent m3475() {return new com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent();}
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[] m3481() /*-{return @com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type::values()();}-*/;
  private native com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type m3482(java.lang.String p0) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type::valueOf(Ljava/lang/String;)(p0);}-*/;
  private native Object m3488(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable obj, com.badlogic.gdx.graphics.g2d.Batch p0,float p1,float p2,float p3,float p4) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable::draw(Lcom/badlogic/gdx/graphics/g2d/Batch;FFFF)(p0, p1, p2, p3, p4);return null;}-*/;
  private native Object m3489(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable obj, com.badlogic.gdx.graphics.g2d.NinePatch p0) /*-{obj.@com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable::setPatch(Lcom/badlogic/gdx/graphics/g2d/NinePatch;)(p0);return null;}-*/;
  private native com.badlogic.gdx.graphics.g2d.NinePatch m3490(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable obj) /*-{return obj.@com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable::getPatch()();}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable m3491() {return new com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable();}
  private static com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable m3492(com.badlogic.gdx.graphics.g2d.NinePatch p0) {return new com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable(p0);}
  private static com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable m3493(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable p0) {return new com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable(p0);}
  private native boolean m3501(com.badlogic.gdx.math.Rectangle p0) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::pushScissors(Lcom/badlogic/gdx/math/Rectangle;)(p0);}-*/;
  private native com.badlogic.gdx.math.Rectangle m3502() /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::popScissors()();}-*/;
  private native Object m3503(com.badlogic.gdx.math.Rectangle p0) /*-{@com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::fix(Lcom/badlogic/gdx/math/Rectangle;)(p0);return null;}-*/;
  private native Object m3504(com.badlogic.gdx.graphics.Camera p0,float p1,float p2,float p3,float p4,com.badlogic.gdx.math.Matrix4 p5,com.badlogic.gdx.math.Rectangle p6,com.badlogic.gdx.math.Rectangle p7) /*-{@com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::calculateScissors(Lcom/badlogic/gdx/graphics/Camera;FFFFLcom/badlogic/gdx/math/Matrix4;Lcom/badlogic/gdx/math/Rectangle;Lcom/badlogic/gdx/math/Rectangle;)(p0, p1, p2, p3, p4, p5, p6, p7);return null;}-*/;
  private native com.badlogic.gdx.math.Rectangle m3505() /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::getViewport()();}-*/;
  private native com.badlogic.gdx.math.Vector2 m3506(com.badlogic.gdx.graphics.Camera p0,com.badlogic.gdx.math.Matrix4 p1,com.badlogic.gdx.math.Vector2 p2) /*-{return @com.badlogic.gdx.scenes.scene2d.utils.ScissorStack::toWindowCoordinates(Lcom/badlogic/gdx/graphics/Camera;Lcom/badlogic/gdx/math/Matrix4;Lcom/badlogic/gdx/math/Vector2;)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.scenes.scene2d.utils.ScissorStack m3507() {return new com.badlogic.gdx.scenes.scene2d.utils.ScissorStack();}
  private native Object m3519(com.badlogic.gdx.utils.Array obj, java.lang.Object p0) /*-{obj.@com.badlogic.gdx.utils.Array::add(Ljava/lang/Object;)(p0);return null;}-*/;
  private native Object m3520(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Array p0) /*-{obj.@com.badlogic.gdx.utils.Array::addAll(Lcom/badlogic/gdx/utils/Array;)(p0);return null;}-*/;
  private native Object m3521(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Array p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.utils.Array::addAll(Lcom/badlogic/gdx/utils/Array;II)(p0, p1, p2);return null;}-*/;
  private native Object m3522(com.badlogic.gdx.utils.Array obj, java.lang.Object[] p0) /*-{obj.@com.badlogic.gdx.utils.Array::addAll([Ljava/lang/Object;)(p0);return null;}-*/;
  private native Object m3523(com.badlogic.gdx.utils.Array obj, java.lang.Object[] p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.utils.Array::addAll([Ljava/lang/Object;II)(p0, p1, p2);return null;}-*/;
  private native java.lang.Object m3524(com.badlogic.gdx.utils.Array obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.Array::get(I)(p0);}-*/;
  private native Object m3525(com.badlogic.gdx.utils.Array obj, int p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.Array::set(ILjava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3526(com.badlogic.gdx.utils.Array obj, int p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.Array::insert(ILjava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3527(com.badlogic.gdx.utils.Array obj, int p0,int p1) /*-{obj.@com.badlogic.gdx.utils.Array::swap(II)(p0, p1);return null;}-*/;
  private native boolean m3528(com.badlogic.gdx.utils.Array obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.Array::contains(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native int m3529(com.badlogic.gdx.utils.Array obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.Array::indexOf(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native int m3530(com.badlogic.gdx.utils.Array obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.Array::lastIndexOf(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native boolean m3531(com.badlogic.gdx.utils.Array obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.Array::removeValue(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native java.lang.Object m3532(com.badlogic.gdx.utils.Array obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.Array::removeIndex(I)(p0);}-*/;
  private native boolean m3533(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Array p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.Array::removeAll(Lcom/badlogic/gdx/utils/Array;Z)(p0, p1);}-*/;
  private native java.lang.Object m3534(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::pop()();}-*/;
  private native java.lang.Object m3535(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::peek()();}-*/;
  private native java.lang.Object m3536(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::first()();}-*/;
  private native Object m3537(com.badlogic.gdx.utils.Array obj) /*-{obj.@com.badlogic.gdx.utils.Array::clear()();return null;}-*/;
  private native Object m3538(com.badlogic.gdx.utils.Array obj) /*-{obj.@com.badlogic.gdx.utils.Array::shrink()();return null;}-*/;
  private native java.lang.Object[] m3539(com.badlogic.gdx.utils.Array obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.Array::ensureCapacity(I)(p0);}-*/;
  private native java.lang.Object[] m3540(com.badlogic.gdx.utils.Array obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.Array::resize(I)(p0);}-*/;
  private native Object m3541(com.badlogic.gdx.utils.Array obj) /*-{obj.@com.badlogic.gdx.utils.Array::sort()();return null;}-*/;
  private native Object m3542(com.badlogic.gdx.utils.Array obj, java.util.Comparator p0) /*-{obj.@com.badlogic.gdx.utils.Array::sort(Ljava/util/Comparator;)(p0);return null;}-*/;
  private native java.lang.Object m3543(com.badlogic.gdx.utils.Array obj, java.util.Comparator p0,int p1) /*-{return obj.@com.badlogic.gdx.utils.Array::selectRanked(Ljava/util/Comparator;I)(p0, p1);}-*/;
  private native int m3544(com.badlogic.gdx.utils.Array obj, java.util.Comparator p0,int p1) /*-{return obj.@com.badlogic.gdx.utils.Array::selectRankedIndex(Ljava/util/Comparator;I)(p0, p1);}-*/;
  private native Object m3545(com.badlogic.gdx.utils.Array obj) /*-{obj.@com.badlogic.gdx.utils.Array::reverse()();return null;}-*/;
  private native Object m3546(com.badlogic.gdx.utils.Array obj) /*-{obj.@com.badlogic.gdx.utils.Array::shuffle()();return null;}-*/;
  private native java.util.Iterator m3547(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::iterator()();}-*/;
  private native java.lang.Iterable m3548(com.badlogic.gdx.utils.Array obj, com.badlogic.gdx.utils.Predicate p0) /*-{return obj.@com.badlogic.gdx.utils.Array::select(Lcom/badlogic/gdx/utils/Predicate;)(p0);}-*/;
  private native Object m3549(com.badlogic.gdx.utils.Array obj, int p0) /*-{obj.@com.badlogic.gdx.utils.Array::truncate(I)(p0);return null;}-*/;
  private native java.lang.Object m3550(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::random()();}-*/;
  private native java.lang.Object[] m3551(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::toArray()();}-*/;
  private native java.lang.Object[] m3552(com.badlogic.gdx.utils.Array obj, java.lang.Class p0) /*-{return obj.@com.badlogic.gdx.utils.Array::toArray(Ljava/lang/Class;)(p0);}-*/;
  private native boolean m3553(com.badlogic.gdx.utils.Array obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.Array::equals(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.String m3554(com.badlogic.gdx.utils.Array obj) /*-{return obj.@com.badlogic.gdx.utils.Array::toString()();}-*/;
  private native java.lang.String m3555(com.badlogic.gdx.utils.Array obj, java.lang.String p0) /*-{return obj.@com.badlogic.gdx.utils.Array::toString(Ljava/lang/String;)(p0);}-*/;
  private native com.badlogic.gdx.utils.Array m3556(java.lang.Class p0) /*-{return @com.badlogic.gdx.utils.Array::of(Ljava/lang/Class;)(p0);}-*/;
  private native com.badlogic.gdx.utils.Array m3557(boolean p0,int p1,java.lang.Class p2) /*-{return @com.badlogic.gdx.utils.Array::of(ZILjava/lang/Class;)(p0, p1, p2);}-*/;
  private static com.badlogic.gdx.utils.Array m3558() {return new com.badlogic.gdx.utils.Array();}
  private static com.badlogic.gdx.utils.Array m3559(int p0) {return new com.badlogic.gdx.utils.Array(p0);}
  private static com.badlogic.gdx.utils.Array m3560(boolean p0,int p1) {return new com.badlogic.gdx.utils.Array(p0, p1);}
  private static com.badlogic.gdx.utils.Array m3561(boolean p0,int p1,java.lang.Class p2) {return new com.badlogic.gdx.utils.Array(p0, p1, p2);}
  private static com.badlogic.gdx.utils.Array m3562(java.lang.Class p0) {return new com.badlogic.gdx.utils.Array(p0);}
  private static com.badlogic.gdx.utils.Array m3563(com.badlogic.gdx.utils.Array p0) {return new com.badlogic.gdx.utils.Array(p0);}
  private static com.badlogic.gdx.utils.Array m3564(java.lang.Object[] p0) {return new com.badlogic.gdx.utils.Array(p0);}
  private static com.badlogic.gdx.utils.Array m3565(boolean p0,java.lang.Object[] p1,int p2,int p3) {return new com.badlogic.gdx.utils.Array(p0, p1, p2, p3);}
  private native java.util.Iterator m3575(com.badlogic.gdx.utils.Array.ArrayIterable obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterable::iterator()();}-*/;
  private static com.badlogic.gdx.utils.Array.ArrayIterable m3576(com.badlogic.gdx.utils.Array p0) {return new com.badlogic.gdx.utils.Array.ArrayIterable(p0);}
  private static com.badlogic.gdx.utils.Array.ArrayIterable m3577(com.badlogic.gdx.utils.Array p0,boolean p1) {return new com.badlogic.gdx.utils.Array.ArrayIterable(p0, p1);}
  private native boolean m3587(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::hasNext()();}-*/;
  private native java.lang.Object m3588(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::next()();}-*/;
  private native Object m3589(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterator::remove()();return null;}-*/;
  private native Object m3590(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{obj.@com.badlogic.gdx.utils.Array.ArrayIterator::reset()();return null;}-*/;
  private native java.util.Iterator m3591(com.badlogic.gdx.utils.Array.ArrayIterator obj) /*-{return obj.@com.badlogic.gdx.utils.Array.ArrayIterator::iterator()();}-*/;
  private static com.badlogic.gdx.utils.Array.ArrayIterator m3592(com.badlogic.gdx.utils.Array p0) {return new com.badlogic.gdx.utils.Array.ArrayIterator(p0);}
  private static com.badlogic.gdx.utils.Array.ArrayIterator m3593(com.badlogic.gdx.utils.Array p0,boolean p1) {return new com.badlogic.gdx.utils.Array.ArrayIterator(p0, p1);}
  private native Object m3615(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::put(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3616(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,java.lang.Object p1,int p2) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::put(Ljava/lang/Object;Ljava/lang/Object;I)(p0, p1, p2);return null;}-*/;
  private native Object m3617(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::putAll(Lcom/badlogic/gdx/utils/ArrayMap;)(p0);return null;}-*/;
  private native Object m3618(com.badlogic.gdx.utils.ArrayMap obj, com.badlogic.gdx.utils.ArrayMap p0,int p1,int p2) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::putAll(Lcom/badlogic/gdx/utils/ArrayMap;II)(p0, p1, p2);return null;}-*/;
  private native java.lang.Object m3619(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::get(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.Object m3620(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::getKey(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native java.lang.Object m3621(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::getKeyAt(I)(p0);}-*/;
  private native java.lang.Object m3622(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::getValueAt(I)(p0);}-*/;
  private native java.lang.Object m3623(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::firstKey()();}-*/;
  private native java.lang.Object m3624(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::firstValue()();}-*/;
  private native Object m3625(com.badlogic.gdx.utils.ArrayMap obj, int p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::setKey(ILjava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3626(com.badlogic.gdx.utils.ArrayMap obj, int p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::setValue(ILjava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3627(com.badlogic.gdx.utils.ArrayMap obj, int p0,java.lang.Object p1,java.lang.Object p2) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::insert(ILjava/lang/Object;Ljava/lang/Object;)(p0, p1, p2);return null;}-*/;
  private native boolean m3628(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::containsKey(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m3629(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::containsValue(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native int m3630(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::indexOfKey(Ljava/lang/Object;)(p0);}-*/;
  private native int m3631(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::indexOfValue(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native java.lang.Object m3632(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::removeKey(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m3633(com.badlogic.gdx.utils.ArrayMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::removeValue(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native Object m3634(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::removeIndex(I)(p0);return null;}-*/;
  private native java.lang.Object m3635(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::peekKey()();}-*/;
  private native java.lang.Object m3636(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::peekValue()();}-*/;
  private native Object m3637(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::clear(I)(p0);return null;}-*/;
  private native Object m3638(com.badlogic.gdx.utils.ArrayMap obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::clear()();return null;}-*/;
  private native Object m3639(com.badlogic.gdx.utils.ArrayMap obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::shrink()();return null;}-*/;
  private native Object m3640(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::ensureCapacity(I)(p0);return null;}-*/;
  private native Object m3641(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::resize(I)(p0);return null;}-*/;
  private native Object m3642(com.badlogic.gdx.utils.ArrayMap obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::reverse()();return null;}-*/;
  private native Object m3643(com.badlogic.gdx.utils.ArrayMap obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::shuffle()();return null;}-*/;
  private native Object m3644(com.badlogic.gdx.utils.ArrayMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ArrayMap::truncate(I)(p0);return null;}-*/;
  private native java.lang.String m3645(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::toString()();}-*/;
  private native com.badlogic.gdx.utils.ArrayMap.Entries m3646(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::entries()();}-*/;
  private native com.badlogic.gdx.utils.ArrayMap.Values m3647(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::values()();}-*/;
  private native com.badlogic.gdx.utils.ArrayMap.Keys m3648(com.badlogic.gdx.utils.ArrayMap obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap::keys()();}-*/;
  private static com.badlogic.gdx.utils.ArrayMap m3649() {return new com.badlogic.gdx.utils.ArrayMap();}
  private static com.badlogic.gdx.utils.ArrayMap m3650(int p0) {return new com.badlogic.gdx.utils.ArrayMap(p0);}
  private static com.badlogic.gdx.utils.ArrayMap m3651(boolean p0,int p1) {return new com.badlogic.gdx.utils.ArrayMap(p0, p1);}
  private static com.badlogic.gdx.utils.ArrayMap m3652(boolean p0,int p1,java.lang.Class p2,java.lang.Class p3) {return new com.badlogic.gdx.utils.ArrayMap(p0, p1, p2, p3);}
  private static com.badlogic.gdx.utils.ArrayMap m3653(java.lang.Class p0,java.lang.Class p1) {return new com.badlogic.gdx.utils.ArrayMap(p0, p1);}
  private static com.badlogic.gdx.utils.ArrayMap m3654(com.badlogic.gdx.utils.ArrayMap p0) {return new com.badlogic.gdx.utils.ArrayMap(p0);}
  private native boolean m3664(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::hasNext()();}-*/;
  private native java.util.Iterator m3665(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::iterator()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Entry m3666(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Entries::next()();}-*/;
  private native Object m3667(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Entries::remove()();return null;}-*/;
  private native Object m3668(com.badlogic.gdx.utils.ArrayMap.Entries obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Entries::reset()();return null;}-*/;
  private static com.badlogic.gdx.utils.ArrayMap.Entries m3669(com.badlogic.gdx.utils.ArrayMap p0) {return new com.badlogic.gdx.utils.ArrayMap.Entries(p0);}
  private native boolean m3677(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::hasNext()();}-*/;
  private native java.util.Iterator m3678(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::iterator()();}-*/;
  private native java.lang.Object m3679(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::next()();}-*/;
  private native Object m3680(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Keys::remove()();return null;}-*/;
  private native Object m3681(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Keys::reset()();return null;}-*/;
  private native com.badlogic.gdx.utils.Array m3682(com.badlogic.gdx.utils.ArrayMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Keys::toArray()();}-*/;
  private static com.badlogic.gdx.utils.ArrayMap.Keys m3683(com.badlogic.gdx.utils.ArrayMap p0) {return new com.badlogic.gdx.utils.ArrayMap.Keys(p0);}
  private native boolean m3691(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::hasNext()();}-*/;
  private native java.util.Iterator m3692(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::iterator()();}-*/;
  private native java.lang.Object m3693(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::next()();}-*/;
  private native Object m3694(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Values::remove()();return null;}-*/;
  private native Object m3695(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{obj.@com.badlogic.gdx.utils.ArrayMap.Values::reset()();return null;}-*/;
  private native com.badlogic.gdx.utils.Array m3696(com.badlogic.gdx.utils.ArrayMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ArrayMap.Values::toArray()();}-*/;
  private static com.badlogic.gdx.utils.ArrayMap.Values m3697(com.badlogic.gdx.utils.ArrayMap p0) {return new com.badlogic.gdx.utils.ArrayMap.Values(p0);}
  private native java.lang.Object m3740(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::put(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);}-*/;
  private native java.lang.Object m3741(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::put_internal(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);}-*/;
  private native Object m3742(com.badlogic.gdx.utils.ObjectMap obj, com.badlogic.gdx.utils.ObjectMap p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::putAll(Lcom/badlogic/gdx/utils/ObjectMap;)(p0);return null;}-*/;
  private native Object m3743(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::putResize(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);return null;}-*/;
  private native Object m3744(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1,int p2,java.lang.Object p3,int p4,java.lang.Object p5,int p6,java.lang.Object p7) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::push(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;ILjava/lang/Object;)(p0, p1, p2, p3, p4, p5, p6, p7);return null;}-*/;
  private native Object m3745(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::putStash(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);return null;}-*/;
  private native java.lang.Object m3746(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::get(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.Object m3747(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::get(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);}-*/;
  private native java.lang.Object m3748(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::getStash(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.Object m3749(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,java.lang.Object p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::getStash(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);}-*/;
  private native java.lang.Object m3750(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::remove(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.Object m3751(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::removeStash(Ljava/lang/Object;)(p0);}-*/;
  private native Object m3752(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::removeStashIndex(I)(p0);return null;}-*/;
  private native Object m3753(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::shrink(I)(p0);return null;}-*/;
  private native Object m3754(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::clear(I)(p0);return null;}-*/;
  private native Object m3755(com.badlogic.gdx.utils.ObjectMap obj) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::clear()();return null;}-*/;
  private native boolean m3756(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::containsValue(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native boolean m3757(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::containsKey(Ljava/lang/Object;)(p0);}-*/;
  private native boolean m3758(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::containsKeyStash(Ljava/lang/Object;)(p0);}-*/;
  private native java.lang.Object m3759(com.badlogic.gdx.utils.ObjectMap obj, java.lang.Object p0,boolean p1) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::findKey(Ljava/lang/Object;Z)(p0, p1);}-*/;
  private native Object m3760(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::ensureCapacity(I)(p0);return null;}-*/;
  private native Object m3761(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap::resize(I)(p0);return null;}-*/;
  private native int m3762(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::hash2(I)(p0);}-*/;
  private native int m3763(com.badlogic.gdx.utils.ObjectMap obj, int p0) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::hash3(I)(p0);}-*/;
  private native java.lang.String m3764(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::toString()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Entries m3765(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::entries()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Values m3766(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::values()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Keys m3767(com.badlogic.gdx.utils.ObjectMap obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap::keys()();}-*/;
  private static com.badlogic.gdx.utils.ObjectMap m3768() {return new com.badlogic.gdx.utils.ObjectMap();}
  private static com.badlogic.gdx.utils.ObjectMap m3769(int p0) {return new com.badlogic.gdx.utils.ObjectMap(p0);}
  private static com.badlogic.gdx.utils.ObjectMap m3770(int p0,float p1) {return new com.badlogic.gdx.utils.ObjectMap(p0, p1);}
  private static com.badlogic.gdx.utils.ObjectMap m3771(com.badlogic.gdx.utils.ObjectMap p0) {return new com.badlogic.gdx.utils.ObjectMap(p0);}
  private native com.badlogic.gdx.utils.ObjectMap.Entry m3775(com.badlogic.gdx.utils.ObjectMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entries::next()();}-*/;
  private native boolean m3776(com.badlogic.gdx.utils.ObjectMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entries::hasNext()();}-*/;
  private native java.util.Iterator m3777(com.badlogic.gdx.utils.ObjectMap.Entries obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entries::iterator()();}-*/;
  private static com.badlogic.gdx.utils.ObjectMap.Entries m3778(com.badlogic.gdx.utils.ObjectMap p0) {return new com.badlogic.gdx.utils.ObjectMap.Entries(p0);}
  private native java.lang.String m3784(com.badlogic.gdx.utils.ObjectMap.Entry obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Entry::toString()();}-*/;
  private static com.badlogic.gdx.utils.ObjectMap.Entry m3785() {return new com.badlogic.gdx.utils.ObjectMap.Entry();}
  private native boolean m3787(com.badlogic.gdx.utils.ObjectMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Keys::hasNext()();}-*/;
  private native java.lang.Object m3788(com.badlogic.gdx.utils.ObjectMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Keys::next()();}-*/;
  private native java.util.Iterator m3789(com.badlogic.gdx.utils.ObjectMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Keys::iterator()();}-*/;
  private native com.badlogic.gdx.utils.Array m3790(com.badlogic.gdx.utils.ObjectMap.Keys obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Keys::toArray()();}-*/;
  private static com.badlogic.gdx.utils.ObjectMap.Keys m3791(com.badlogic.gdx.utils.ObjectMap p0) {return new com.badlogic.gdx.utils.ObjectMap.Keys(p0);}
  private native boolean m3793(com.badlogic.gdx.utils.ObjectMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Values::hasNext()();}-*/;
  private native java.lang.Object m3794(com.badlogic.gdx.utils.ObjectMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Values::next()();}-*/;
  private native java.util.Iterator m3795(com.badlogic.gdx.utils.ObjectMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Values::iterator()();}-*/;
  private native com.badlogic.gdx.utils.Array m3796(com.badlogic.gdx.utils.ObjectMap.Values obj) /*-{return obj.@com.badlogic.gdx.utils.ObjectMap.Values::toArray()();}-*/;
  private native Object m3797(com.badlogic.gdx.utils.ObjectMap.Values obj, com.badlogic.gdx.utils.Array p0) /*-{obj.@com.badlogic.gdx.utils.ObjectMap.Values::toArray(Lcom/badlogic/gdx/utils/Array;)(p0);return null;}-*/;
  private static com.badlogic.gdx.utils.ObjectMap.Values m3798(com.badlogic.gdx.utils.ObjectMap p0) {return new com.badlogic.gdx.utils.ObjectMap.Values(p0);}
  private native java.lang.Object m3802(com.badlogic.gdx.utils.OrderedMap obj, java.lang.Object p0,java.lang.Object p1) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::put(Ljava/lang/Object;Ljava/lang/Object;)(p0, p1);}-*/;
  private native java.lang.Object m3803(com.badlogic.gdx.utils.OrderedMap obj, java.lang.Object p0) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::remove(Ljava/lang/Object;)(p0);}-*/;
  private native Object m3804(com.badlogic.gdx.utils.OrderedMap obj, int p0) /*-{obj.@com.badlogic.gdx.utils.OrderedMap::clear(I)(p0);return null;}-*/;
  private native Object m3805(com.badlogic.gdx.utils.OrderedMap obj) /*-{obj.@com.badlogic.gdx.utils.OrderedMap::clear()();return null;}-*/;
  private native com.badlogic.gdx.utils.Array m3806(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::orderedKeys()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Entries m3807(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::entries()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Keys m3808(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::keys()();}-*/;
  private native com.badlogic.gdx.utils.ObjectMap.Values m3809(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::values()();}-*/;
  private native java.lang.String m3810(com.badlogic.gdx.utils.OrderedMap obj) /*-{return obj.@com.badlogic.gdx.utils.OrderedMap::toString()();}-*/;
  private static com.badlogic.gdx.utils.OrderedMap m3811() {return new com.badlogic.gdx.utils.OrderedMap();}
  private static com.badlogic.gdx.utils.OrderedMap m3812(int p0) {return new com.badlogic.gdx.utils.OrderedMap(p0);}
  private static com.badlogic.gdx.utils.OrderedMap m3813(int p0,float p1) {return new com.badlogic.gdx.utils.OrderedMap(p0, p1);}
  private static com.badlogic.gdx.utils.OrderedMap m3814(com.badlogic.gdx.utils.ObjectMap p0) {return new com.badlogic.gdx.utils.OrderedMap(p0);}
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  public Collection<Type> getKnownTypes() {
  	return types.values();
  }
  public Type forName(String name) {
  	return types.get(name);
  }
  public Object newArray (Type t, int size) {
      if (t != null) {
      switch(t.id) {
      case 0: return new boolean[size];
      case 1: return new boolean[size][];
      case 2: return new byte[size];
      case 3: return new byte[size][];
      case 4: return new byte[size][][];
      case 5: return new char[size];
      case 6: return new char[size][];
      case 7: return new com.badlogic.gdx.graphics.Color[size];
      case 89: return new com.badlogic.gdx.graphics.Texture[size];
      case 120: return new com.badlogic.gdx.graphics.Texture.TextureFilter[size];
      case 141: return new com.badlogic.gdx.graphics.Texture.TextureFilter[size][];
      case 142: return new com.badlogic.gdx.graphics.Texture.TextureWrap[size];
      case 154: return new com.badlogic.gdx.graphics.Texture.TextureWrap[size][];
      case 155: return new com.badlogic.gdx.graphics.TextureData[size];
      case 156: return new com.badlogic.gdx.graphics.TextureData.TextureDataType[size];
      case 165: return new com.badlogic.gdx.graphics.TextureData.TextureDataType[size][];
      case 166: return new com.badlogic.gdx.graphics.VertexAttribute[size];
      case 192: return new com.badlogic.gdx.graphics.VertexAttribute[size][];
      case 193: return new com.badlogic.gdx.graphics.VertexAttributes[size];
      case 213: return new com.badlogic.gdx.graphics.VertexAttributes.Usage[size];
      case 233: return new com.badlogic.gdx.graphics.g2d.BitmapFont[size];
      case 313: return new com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData[size];
      case 351: return new com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[size];
      case 383: return new com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[size][][];
      case 384: return new com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[size];
      case 393: return new com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[size][];
      case 394: return new com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds[size];
      case 402: return new com.badlogic.gdx.graphics.g2d.BitmapFontCache[size];
      case 467: return new com.badlogic.gdx.graphics.g2d.NinePatch[size];
      case 573: return new com.badlogic.gdx.graphics.g2d.TextureRegion[size];
      case 624: return new com.badlogic.gdx.graphics.g2d.TextureRegion[size][];
      case 625: return new com.badlogic.gdx.graphics.g2d.TextureRegion[size][][];
      case 626: return new com.badlogic.gdx.graphics.g3d.model.Animation[size];
      case 634: return new com.badlogic.gdx.graphics.g3d.model.MeshPart[size];
      case 650: return new com.badlogic.gdx.graphics.g3d.model.Node[size];
      case 682: return new com.badlogic.gdx.graphics.g3d.model.NodeAnimation[size];
      case 688: return new com.badlogic.gdx.graphics.g3d.model.NodeKeyframe[size];
      case 698: return new com.badlogic.gdx.graphics.g3d.model.NodePart[size];
      case 710: return new com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation[size];
      case 716: return new com.badlogic.gdx.graphics.g3d.model.data.ModelData[size];
      case 731: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial[size];
      case 753: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[size];
      case 760: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[size][];
      case 761: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMesh[size];
      case 771: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[size];
      case 779: return new com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[size][];
      case 780: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNode[size];
      case 798: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation[size];
      case 804: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe[size];
      case 814: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[size];
      case 824: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[size][];
      case 825: return new com.badlogic.gdx.graphics.g3d.model.data.ModelNode[size][];
      case 826: return new com.badlogic.gdx.graphics.g3d.model.data.ModelTexture[size];
      case 860: return new com.badlogic.gdx.math.BSpline[size];
      case 896: return new com.badlogic.gdx.math.Bezier[size];
      case 918: return new com.badlogic.gdx.math.Bresenham2[size];
      case 927: return new com.badlogic.gdx.math.CatmullRomSpline[size];
      case 955: return new com.badlogic.gdx.math.Circle[size];
      case 979: return new com.badlogic.gdx.math.ConvexHull[size];
      case 1002: return new com.badlogic.gdx.math.DelaunayTriangulator[size];
      case 1035: return new com.badlogic.gdx.math.EarClippingTriangulator[size];
      case 1067: return new com.badlogic.gdx.math.Ellipse[size];
      case 1089: return new com.badlogic.gdx.math.FloatCounter[size];
      case 1109: return new com.badlogic.gdx.math.Frustum[size];
      case 1131: return new com.badlogic.gdx.math.GeometryUtils[size];
      case 1149: return new com.badlogic.gdx.math.GridPoint2[size];
      case 1159: return new com.badlogic.gdx.math.GridPoint3[size];
      case 1171: return new com.badlogic.gdx.math.Interpolation[size];
      case 1244: return new com.badlogic.gdx.math.Interpolation.Bounce[size];
      case 1249: return new com.badlogic.gdx.math.Interpolation.BounceIn[size];
      case 1253: return new com.badlogic.gdx.math.Interpolation.BounceOut[size];
      case 1261: return new com.badlogic.gdx.math.Interpolation.Elastic[size];
      case 1268: return new com.badlogic.gdx.math.Interpolation.ElasticIn[size];
      case 1271: return new com.badlogic.gdx.math.Interpolation.ElasticOut[size];
      case 1274: return new com.badlogic.gdx.math.Interpolation.Exp[size];
      case 1285: return new com.badlogic.gdx.math.Interpolation.ExpIn[size];
      case 1288: return new com.badlogic.gdx.math.Interpolation.ExpOut[size];
      case 1291: return new com.badlogic.gdx.math.Interpolation.Pow[size];
      case 1296: return new com.badlogic.gdx.math.Interpolation.PowIn[size];
      case 1299: return new com.badlogic.gdx.math.Interpolation.PowOut[size];
      case 1302: return new com.badlogic.gdx.math.Interpolation.Swing[size];
      case 1307: return new com.badlogic.gdx.math.Interpolation.SwingIn[size];
      case 1312: return new com.badlogic.gdx.math.Interpolation.SwingOut[size];
      case 1317: return new com.badlogic.gdx.math.Intersector[size];
      case 1391: return new com.badlogic.gdx.math.Intersector.MinimumTranslationVector[size];
      case 1397: return new com.badlogic.gdx.math.Intersector.SplitTriangle[size];
      case 1422: return new com.badlogic.gdx.math.MathUtils[size];
      case 1501: return new com.badlogic.gdx.math.Matrix3[size];
      case 1561: return new com.badlogic.gdx.math.Matrix4[size];
      case 1698: return new com.badlogic.gdx.math.Matrix4[size][];
      case 1699: return new com.badlogic.gdx.math.Path[size];
      case 1700: return new com.badlogic.gdx.math.Plane[size];
      case 1722: return new com.badlogic.gdx.math.Plane.PlaneSide[size];
      case 1731: return new com.badlogic.gdx.math.Plane.PlaneSide[size][];
      case 1732: return new com.badlogic.gdx.math.Plane[size][];
      case 1733: return new com.badlogic.gdx.math.Polygon[size];
      case 1779: return new com.badlogic.gdx.math.Polyline[size];
      case 1831: return new com.badlogic.gdx.math.Quaternion[size];
      case 1886: return new com.badlogic.gdx.math.Rectangle[size];
      case 1932: return new com.badlogic.gdx.math.Vector[size];
      case 1933: return new com.badlogic.gdx.math.Vector2[size];
      case 1995: return new com.badlogic.gdx.math.Vector3[size];
      case 2087: return new com.badlogic.gdx.math.Vector3[size][];
      case 2088: return new com.badlogic.gdx.math.Vector[size][];
      case 2089: return new com.badlogic.gdx.math.WindowedMean[size];
      case 2108: return new com.badlogic.gdx.math.collision.BoundingBox[size];
      case 2150: return new com.badlogic.gdx.math.collision.Ray[size];
      case 2168: return new com.badlogic.gdx.math.collision.Segment[size];
      case 2177: return new com.badlogic.gdx.math.collision.Sphere[size];
      case 2186: return new com.badlogic.gdx.scenes.scene2d.Action[size];
      case 2199: return new com.badlogic.gdx.scenes.scene2d.Action[size][];
      case 2200: return new com.badlogic.gdx.scenes.scene2d.Actor[size];
      case 2324: return new com.badlogic.gdx.scenes.scene2d.Actor[size][];
      case 2325: return new com.badlogic.gdx.scenes.scene2d.Event[size];
      case 2360: return new com.badlogic.gdx.scenes.scene2d.EventListener[size];
      case 2361: return new com.badlogic.gdx.scenes.scene2d.Group[size];
      case 2406: return new com.badlogic.gdx.scenes.scene2d.InputEvent[size];
      case 2448: return new com.badlogic.gdx.scenes.scene2d.InputEvent.Type[size];
      case 2471: return new com.badlogic.gdx.scenes.scene2d.InputEvent.Type[size][];
      case 2472: return new com.badlogic.gdx.scenes.scene2d.InputListener[size];
      case 2487: return new com.badlogic.gdx.scenes.scene2d.Stage[size];
      case 2589: return new com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus[size];
      case 2602: return new com.badlogic.gdx.scenes.scene2d.Touchable[size];
      case 2611: return new com.badlogic.gdx.scenes.scene2d.Touchable[size][];
      case 2612: return new com.badlogic.gdx.scenes.scene2d.actions.Actions[size];
      case 2685: return new com.badlogic.gdx.scenes.scene2d.actions.AddAction[size];
      case 2698: return new com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction[size];
      case 2714: return new com.badlogic.gdx.scenes.scene2d.actions.AfterAction[size];
      case 2721: return new com.badlogic.gdx.scenes.scene2d.actions.AlphaAction[size];
      case 2736: return new com.badlogic.gdx.scenes.scene2d.actions.ColorAction[size];
      case 2757: return new com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction[size];
      case 2764: return new com.badlogic.gdx.scenes.scene2d.actions.DelayAction[size];
      case 2778: return new com.badlogic.gdx.scenes.scene2d.actions.DelegateAction[size];
      case 2789: return new com.badlogic.gdx.scenes.scene2d.actions.EventAction[size];
      case 2800: return new com.badlogic.gdx.scenes.scene2d.actions.FloatAction[size];
      case 2817: return new com.badlogic.gdx.scenes.scene2d.actions.IntAction[size];
      case 2834: return new com.badlogic.gdx.scenes.scene2d.actions.LayoutAction[size];
      case 2842: return new com.badlogic.gdx.scenes.scene2d.actions.MoveByAction[size];
      case 2854: return new com.badlogic.gdx.scenes.scene2d.actions.MoveToAction[size];
      case 2871: return new com.badlogic.gdx.scenes.scene2d.actions.ParallelAction[size];
      case 2889: return new com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction[size];
      case 2895: return new com.badlogic.gdx.scenes.scene2d.actions.RemoveAction[size];
      case 2907: return new com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction[size];
      case 2918: return new com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction[size];
      case 2934: return new com.badlogic.gdx.scenes.scene2d.actions.RepeatAction[size];
      case 2949: return new com.badlogic.gdx.scenes.scene2d.actions.RotateByAction[size];
      case 2956: return new com.badlogic.gdx.scenes.scene2d.actions.RotateToAction[size];
      case 2966: return new com.badlogic.gdx.scenes.scene2d.actions.RunnableAction[size];
      case 2978: return new com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction[size];
      case 2991: return new com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction[size];
      case 3009: return new com.badlogic.gdx.scenes.scene2d.actions.SequenceAction[size];
      case 3020: return new com.badlogic.gdx.scenes.scene2d.actions.SizeByAction[size];
      case 3032: return new com.badlogic.gdx.scenes.scene2d.actions.SizeToAction[size];
      case 3049: return new com.badlogic.gdx.scenes.scene2d.actions.TemporalAction[size];
      case 3077: return new com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction[size];
      case 3084: return new com.badlogic.gdx.scenes.scene2d.actions.TouchableAction[size];
      case 3091: return new com.badlogic.gdx.scenes.scene2d.actions.VisibleAction[size];
      case 3098: return new com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup[size];
      case 3123: return new com.badlogic.gdx.scenes.scene2d.ui.Stack[size];
      case 3149: return new com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup[size];
      case 3174: return new com.badlogic.gdx.scenes.scene2d.ui.Widget[size];
      case 3198: return new com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup[size];
      case 3224: return new com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener[size];
      case 3248: return new com.badlogic.gdx.scenes.scene2d.utils.Align[size];
      case 3260: return new com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable[size];
      case 3288: return new com.badlogic.gdx.scenes.scene2d.utils.ChangeListener[size];
      case 3291: return new com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent[size];
      case 3293: return new com.badlogic.gdx.scenes.scene2d.utils.ClickListener[size];
      case 3343: return new com.badlogic.gdx.scenes.scene2d.utils.Cullable[size];
      case 3344: return new com.badlogic.gdx.scenes.scene2d.utils.Disableable[size];
      case 3345: return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop[size];
      case 3391: return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload[size];
      case 3409: return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source[size];
      case 3415: return new com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target[size];
      case 3422: return new com.badlogic.gdx.scenes.scene2d.utils.DragListener[size];
      case 3456: return new com.badlogic.gdx.scenes.scene2d.utils.Drawable[size];
      case 3457: return new com.badlogic.gdx.scenes.scene2d.utils.FocusListener[size];
      case 3461: return new com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent[size];
      case 3476: return new com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[size];
      case 3483: return new com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[size][];
      case 3484: return new com.badlogic.gdx.scenes.scene2d.utils.Layout[size];
      case 3485: return new com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable[size];
      case 3494: return new com.badlogic.gdx.scenes.scene2d.utils.ScissorStack[size];
      case 3508: return new com.badlogic.gdx.utils.Array[size];
      case 3566: return new com.badlogic.gdx.utils.Array.ArrayIterable[size];
      case 3578: return new com.badlogic.gdx.utils.Array.ArrayIterator[size];
      case 3594: return new com.badlogic.gdx.utils.ArrayMap[size];
      case 3655: return new com.badlogic.gdx.utils.ArrayMap.Entries[size];
      case 3670: return new com.badlogic.gdx.utils.ArrayMap.Keys[size];
      case 3684: return new com.badlogic.gdx.utils.ArrayMap.Values[size];
      case 3698: return new com.badlogic.gdx.utils.Disposable[size];
      case 3699: return new com.badlogic.gdx.utils.ObjectMap[size];
      case 3772: return new com.badlogic.gdx.utils.ObjectMap.Entries[size];
      case 3779: return new com.badlogic.gdx.utils.ObjectMap.Entry[size];
      case 3786: return new com.badlogic.gdx.utils.ObjectMap.Keys[size];
      case 3792: return new com.badlogic.gdx.utils.ObjectMap.Values[size];
      case 3799: return new com.badlogic.gdx.utils.OrderedMap[size];
      case 3815: return new com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer[size];
      case 3824: return new com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer[size];
      case 3833: return new com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer[size];
      case 3842: return new com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer[size];
      case 3851: return new com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer[size];
      case 3860: return new com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer[size];
      case 3869: return new com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer[size];
      case 3875: return new com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer[size];
      case 3884: return new com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer[size];
      case 3893: return new com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer[size];
      case 3899: return new com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer[size];
      case 3905: return new com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase[size];
      case 3909: return new double[size];
      case 3910: return new double[size][];
      case 3911: return new float[size];
      case 3912: return new float[size][];
      case 3913: return new float[size][][];
      case 3914: return new int[size];
      case 3915: return new int[size][];
      case 3916: return new int[size][][];
      case 3917: return new java.lang.Boolean[size];
      case 3937: return new java.lang.Byte[size];
      case 3968: return new java.lang.CharSequence[size];
      case 3969: return new java.lang.Character[size];
      case 4044: return new java.lang.Double[size];
      case 4147: return new java.lang.Enum[size];
      case 4166: return new java.lang.Enum[size][];
      case 4167: return new java.lang.Float[size];
      case 4219: return new java.lang.Integer[size];
      case 4265: return new java.lang.Object[size];
      case 4280: return new java.lang.Object[size][];
      case 4281: return new java.lang.Short[size];
      case 4313: return new java.lang.String[size];
      case 4417: return new java.lang.StringBuffer[size];
      case 4470: return new java.lang.StringBuilder[size];
      case 4523: return new java.lang.StringIndexOutOfBoundsException[size];
      case 4527: return new java.lang.String[size][];
      case 4528: return new java.util.ArrayList[size];
      case 4566: return new java.util.HashMap[size];
      case 4578: return new java.util.List[size];
      case 4579: return new java.util.ListIterator[size];
      case 4580: return new java.util.Map[size];
      case 4581: return new long[size];
      case 4582: return new short[size];
      case 4583: return new short[size][];
  }
      }
      throw new RuntimeException("Couldn't create array");
  }
  public int getArrayLength(Type type, Object obj) {
      switch(type.id) {
      case 6: return ((char[])obj).length;
      case 3915: return ((int[])obj).length;
      case 3: return ((byte[])obj).length;
      case 4583: return ((short[])obj).length;
      case 3912: return ((float[])obj).length;
      case 3910: return ((double[])obj).length;
      case 1: return ((boolean[])obj).length;
  }
  	return ((Object[])obj).length;
  }
  public Object getArrayElement(Type type, Object obj, int i) {
      switch(type.id) {
      case 6: return ((char[])obj)[i];
      case 3915: return ((int[])obj)[i];
      case 3: return ((byte[])obj)[i];
      case 4583: return ((short[])obj)[i];
      case 3912: return ((float[])obj)[i];
      case 3910: return ((double[])obj)[i];
      case 1: return ((boolean[])obj)[i];
  }
  	return ((Object[])obj)[i];
  }
  public void setArrayElement(Type type, Object obj, int i, Object value) {
      switch(type.id) {
      case 6: ((char[])obj)[i] = ((Character)value).charValue(); return;
      case 3915: ((int[])obj)[i] = ((Number)value).intValue(); return;
      case 3: ((byte[])obj)[i] = ((Number)value).byteValue(); return;
      case 4583: ((short[])obj)[i] = ((Number)value).shortValue(); return;
      case 3912: ((float[])obj)[i] = ((Number)value).floatValue(); return;
      case 3910: ((double[])obj)[i] = ((Number)value).doubleValue(); return;
      case 1: ((boolean[])obj)[i] = ((Boolean)value).booleanValue(); return;
  }
  	((Object[])obj)[i] = value;
  }
  public Object get(Field field, Object obj) throws IllegalAccessException {
      switch(field.getter) {
      case 9: return g9(((com.badlogic.gdx.graphics.Color)obj));
      case 11: return g11(((com.badlogic.gdx.graphics.Color)obj));
      case 13: return g13(((com.badlogic.gdx.graphics.Color)obj));
      case 15: return g15(((com.badlogic.gdx.graphics.Color)obj));
      case 17: return g17(((com.badlogic.gdx.graphics.Color)obj));
      case 19: return g19(((com.badlogic.gdx.graphics.Color)obj));
      case 21: return g21(((com.badlogic.gdx.graphics.Color)obj));
      case 23: return g23(((com.badlogic.gdx.graphics.Color)obj));
      case 25: return g25(((com.badlogic.gdx.graphics.Color)obj));
      case 27: return g27(((com.badlogic.gdx.graphics.Color)obj));
      case 29: return g29(((com.badlogic.gdx.graphics.Color)obj));
      case 31: return g31(((com.badlogic.gdx.graphics.Color)obj));
      case 33: return g33(((com.badlogic.gdx.graphics.Color)obj));
      case 35: return g35(((com.badlogic.gdx.graphics.Color)obj));
      case 37: return g37(((com.badlogic.gdx.graphics.Color)obj));
      case 39: return g39(((com.badlogic.gdx.graphics.Color)obj));
      case 41: return g41(((com.badlogic.gdx.graphics.Color)obj));
      case 43: return g43(((com.badlogic.gdx.graphics.Color)obj));
      case 45: return g45(((com.badlogic.gdx.graphics.Color)obj));
      case 91: return g91(((com.badlogic.gdx.graphics.Texture)obj));
      case 93: return g93(((com.badlogic.gdx.graphics.Texture)obj));
      case 95: return g95(((com.badlogic.gdx.graphics.Texture)obj));
      case 122: return g122(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 124: return g124(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 126: return g126(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 128: return g128(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 130: return g130(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 132: return g132(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 134: return g134(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 136: return g136(((com.badlogic.gdx.graphics.Texture.TextureFilter)obj));
      case 144: return g144(((com.badlogic.gdx.graphics.Texture.TextureWrap)obj));
      case 146: return g146(((com.badlogic.gdx.graphics.Texture.TextureWrap)obj));
      case 148: return g148(((com.badlogic.gdx.graphics.Texture.TextureWrap)obj));
      case 150: return g150(((com.badlogic.gdx.graphics.Texture.TextureWrap)obj));
      case 158: return g158(((com.badlogic.gdx.graphics.TextureData.TextureDataType)obj));
      case 160: return g160(((com.badlogic.gdx.graphics.TextureData.TextureDataType)obj));
      case 162: return g162(((com.badlogic.gdx.graphics.TextureData.TextureDataType)obj));
      case 168: return g168(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 170: return g170(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 172: return g172(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 174: return g174(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 176: return g176(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 178: return g178(((com.badlogic.gdx.graphics.VertexAttribute)obj));
      case 195: return g195(((com.badlogic.gdx.graphics.VertexAttributes)obj));
      case 197: return g197(((com.badlogic.gdx.graphics.VertexAttributes)obj));
      case 215: return g215(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 217: return g217(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 219: return g219(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 221: return g221(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 223: return g223(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 225: return g225(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 227: return g227(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 229: return g229(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 231: return g231(((com.badlogic.gdx.graphics.VertexAttributes.Usage)obj));
      case 235: return g235(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 237: return g237(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 239: return g239(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 241: return g241(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 243: return g243(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 245: return g245(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 247: return g247(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 249: return g249(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 251: return g251(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 253: return g253(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 255: return g255(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj));
      case 315: return g315(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 317: return g317(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 319: return g319(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 321: return g321(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 323: return g323(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 325: return g325(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 327: return g327(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 329: return g329(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 331: return g331(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 333: return g333(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 335: return g335(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 337: return g337(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 339: return g339(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 341: return g341(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj));
      case 353: return g353(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 355: return g355(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 357: return g357(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 359: return g359(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 361: return g361(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 363: return g363(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 365: return g365(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 367: return g367(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 369: return g369(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 371: return g371(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 373: return g373(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 375: return g375(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 377: return g377(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 379: return g379(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj));
      case 386: return g386(((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)obj));
      case 388: return g388(((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)obj));
      case 390: return g390(((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)obj));
      case 396: return g396(((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)obj));
      case 398: return g398(((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)obj));
      case 404: return g404(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 406: return g406(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 408: return g408(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 410: return g410(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 412: return g412(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 414: return g414(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 416: return g416(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 418: return g418(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 420: return g420(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 422: return g422(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 424: return g424(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 426: return g426(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj));
      case 469: return g469(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 471: return g471(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 473: return g473(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 475: return g475(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 477: return g477(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 479: return g479(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 481: return g481(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 483: return g483(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 485: return g485(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 487: return g487(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 489: return g489(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 491: return g491(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 493: return g493(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 495: return g495(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 497: return g497(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 499: return g499(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 501: return g501(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 503: return g503(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 505: return g505(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 507: return g507(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 509: return g509(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 511: return g511(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 513: return g513(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 515: return g515(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 517: return g517(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 519: return g519(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 521: return g521(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 523: return g523(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 525: return g525(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 527: return g527(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 529: return g529(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 531: return g531(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 533: return g533(((com.badlogic.gdx.graphics.g2d.NinePatch)obj));
      case 575: return g575(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 577: return g577(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 579: return g579(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 581: return g581(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 583: return g583(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 585: return g585(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 587: return g587(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj));
      case 628: return g628(((com.badlogic.gdx.graphics.g3d.model.Animation)obj));
      case 630: return g630(((com.badlogic.gdx.graphics.g3d.model.Animation)obj));
      case 632: return g632(((com.badlogic.gdx.graphics.g3d.model.Animation)obj));
      case 636: return g636(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj));
      case 638: return g638(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj));
      case 640: return g640(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj));
      case 642: return g642(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj));
      case 644: return g644(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj));
      case 652: return g652(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 654: return g654(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 656: return g656(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 658: return g658(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 660: return g660(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 662: return g662(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 664: return g664(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 666: return g666(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 668: return g668(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 670: return g670(((com.badlogic.gdx.graphics.g3d.model.Node)obj));
      case 684: return g684(((com.badlogic.gdx.graphics.g3d.model.NodeAnimation)obj));
      case 686: return g686(((com.badlogic.gdx.graphics.g3d.model.NodeAnimation)obj));
      case 690: return g690(((com.badlogic.gdx.graphics.g3d.model.NodeKeyframe)obj));
      case 692: return g692(((com.badlogic.gdx.graphics.g3d.model.NodeKeyframe)obj));
      case 694: return g694(((com.badlogic.gdx.graphics.g3d.model.NodeKeyframe)obj));
      case 696: return g696(((com.badlogic.gdx.graphics.g3d.model.NodeKeyframe)obj));
      case 700: return g700(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj));
      case 702: return g702(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj));
      case 704: return g704(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj));
      case 706: return g706(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj));
      case 712: return g712(((com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation)obj));
      case 714: return g714(((com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation)obj));
      case 718: return g718(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 720: return g720(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 722: return g722(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 724: return g724(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 726: return g726(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 728: return g728(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj));
      case 733: return g733(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 735: return g735(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 737: return g737(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 739: return g739(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 741: return g741(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 743: return g743(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 745: return g745(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 747: return g747(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 749: return g749(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 751: return g751(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj));
      case 755: return g755(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType)obj));
      case 757: return g757(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType)obj));
      case 763: return g763(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj));
      case 765: return g765(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj));
      case 767: return g767(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj));
      case 769: return g769(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj));
      case 773: return g773(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj));
      case 775: return g775(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj));
      case 777: return g777(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj));
      case 782: return g782(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 784: return g784(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 786: return g786(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 788: return g788(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 790: return g790(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 792: return g792(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 794: return g794(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 796: return g796(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj));
      case 800: return g800(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation)obj));
      case 802: return g802(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation)obj));
      case 806: return g806(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj));
      case 808: return g808(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj));
      case 810: return g810(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj));
      case 812: return g812(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj));
      case 816: return g816(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj));
      case 818: return g818(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj));
      case 820: return g820(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj));
      case 822: return g822(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj));
      case 828: return g828(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 830: return g830(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 832: return g832(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 834: return g834(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 836: return g836(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 838: return g838(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 840: return g840(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 842: return g842(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 844: return g844(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 846: return g846(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 848: return g848(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 850: return g850(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 852: return g852(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 854: return g854(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 856: return g856(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 858: return g858(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj));
      case 862: return g862(((com.badlogic.gdx.math.BSpline)obj));
      case 864: return g864(((com.badlogic.gdx.math.BSpline)obj));
      case 866: return g866(((com.badlogic.gdx.math.BSpline)obj));
      case 868: return g868(((com.badlogic.gdx.math.BSpline)obj));
      case 870: return g870(((com.badlogic.gdx.math.BSpline)obj));
      case 872: return g872(((com.badlogic.gdx.math.BSpline)obj));
      case 874: return g874(((com.badlogic.gdx.math.BSpline)obj));
      case 898: return g898(((com.badlogic.gdx.math.Bezier)obj));
      case 900: return g900(((com.badlogic.gdx.math.Bezier)obj));
      case 920: return g920(((com.badlogic.gdx.math.Bresenham2)obj));
      case 922: return g922(((com.badlogic.gdx.math.Bresenham2)obj));
      case 929: return g929(((com.badlogic.gdx.math.CatmullRomSpline)obj));
      case 931: return g931(((com.badlogic.gdx.math.CatmullRomSpline)obj));
      case 933: return g933(((com.badlogic.gdx.math.CatmullRomSpline)obj));
      case 935: return g935(((com.badlogic.gdx.math.CatmullRomSpline)obj));
      case 937: return g937(((com.badlogic.gdx.math.CatmullRomSpline)obj));
      case 957: return g957(((com.badlogic.gdx.math.Circle)obj));
      case 959: return g959(((com.badlogic.gdx.math.Circle)obj));
      case 961: return g961(((com.badlogic.gdx.math.Circle)obj));
      case 981: return g981(((com.badlogic.gdx.math.ConvexHull)obj));
      case 983: return g983(((com.badlogic.gdx.math.ConvexHull)obj));
      case 985: return g985(((com.badlogic.gdx.math.ConvexHull)obj));
      case 987: return g987(((com.badlogic.gdx.math.ConvexHull)obj));
      case 989: return g989(((com.badlogic.gdx.math.ConvexHull)obj));
      case 1004: return g1004(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1006: return g1006(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1008: return g1008(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1010: return g1010(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1012: return g1012(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1014: return g1014(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1016: return g1016(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1018: return g1018(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1020: return g1020(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1022: return g1022(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1024: return g1024(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1026: return g1026(((com.badlogic.gdx.math.DelaunayTriangulator)obj));
      case 1037: return g1037(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1039: return g1039(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1041: return g1041(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1043: return g1043(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1045: return g1045(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1047: return g1047(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1049: return g1049(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1051: return g1051(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1053: return g1053(((com.badlogic.gdx.math.EarClippingTriangulator)obj));
      case 1069: return g1069(((com.badlogic.gdx.math.Ellipse)obj));
      case 1071: return g1071(((com.badlogic.gdx.math.Ellipse)obj));
      case 1073: return g1073(((com.badlogic.gdx.math.Ellipse)obj));
      case 1075: return g1075(((com.badlogic.gdx.math.Ellipse)obj));
      case 1091: return g1091(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1093: return g1093(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1095: return g1095(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1097: return g1097(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1099: return g1099(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1101: return g1101(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1103: return g1103(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1105: return g1105(((com.badlogic.gdx.math.FloatCounter)obj));
      case 1111: return g1111(((com.badlogic.gdx.math.Frustum)obj));
      case 1113: return g1113(((com.badlogic.gdx.math.Frustum)obj));
      case 1115: return g1115(((com.badlogic.gdx.math.Frustum)obj));
      case 1117: return g1117(((com.badlogic.gdx.math.Frustum)obj));
      case 1119: return g1119(((com.badlogic.gdx.math.Frustum)obj));
      case 1133: return g1133(((com.badlogic.gdx.math.GeometryUtils)obj));
      case 1135: return g1135(((com.badlogic.gdx.math.GeometryUtils)obj));
      case 1137: return g1137(((com.badlogic.gdx.math.GeometryUtils)obj));
      case 1151: return g1151(((com.badlogic.gdx.math.GridPoint2)obj));
      case 1153: return g1153(((com.badlogic.gdx.math.GridPoint2)obj));
      case 1161: return g1161(((com.badlogic.gdx.math.GridPoint3)obj));
      case 1163: return g1163(((com.badlogic.gdx.math.GridPoint3)obj));
      case 1165: return g1165(((com.badlogic.gdx.math.GridPoint3)obj));
      case 1173: return g1173(((com.badlogic.gdx.math.Interpolation)obj));
      case 1175: return g1175(((com.badlogic.gdx.math.Interpolation)obj));
      case 1177: return g1177(((com.badlogic.gdx.math.Interpolation)obj));
      case 1179: return g1179(((com.badlogic.gdx.math.Interpolation)obj));
      case 1181: return g1181(((com.badlogic.gdx.math.Interpolation)obj));
      case 1183: return g1183(((com.badlogic.gdx.math.Interpolation)obj));
      case 1185: return g1185(((com.badlogic.gdx.math.Interpolation)obj));
      case 1187: return g1187(((com.badlogic.gdx.math.Interpolation)obj));
      case 1189: return g1189(((com.badlogic.gdx.math.Interpolation)obj));
      case 1191: return g1191(((com.badlogic.gdx.math.Interpolation)obj));
      case 1193: return g1193(((com.badlogic.gdx.math.Interpolation)obj));
      case 1195: return g1195(((com.badlogic.gdx.math.Interpolation)obj));
      case 1197: return g1197(((com.badlogic.gdx.math.Interpolation)obj));
      case 1199: return g1199(((com.badlogic.gdx.math.Interpolation)obj));
      case 1201: return g1201(((com.badlogic.gdx.math.Interpolation)obj));
      case 1203: return g1203(((com.badlogic.gdx.math.Interpolation)obj));
      case 1205: return g1205(((com.badlogic.gdx.math.Interpolation)obj));
      case 1207: return g1207(((com.badlogic.gdx.math.Interpolation)obj));
      case 1209: return g1209(((com.badlogic.gdx.math.Interpolation)obj));
      case 1211: return g1211(((com.badlogic.gdx.math.Interpolation)obj));
      case 1213: return g1213(((com.badlogic.gdx.math.Interpolation)obj));
      case 1215: return g1215(((com.badlogic.gdx.math.Interpolation)obj));
      case 1217: return g1217(((com.badlogic.gdx.math.Interpolation)obj));
      case 1219: return g1219(((com.badlogic.gdx.math.Interpolation)obj));
      case 1221: return g1221(((com.badlogic.gdx.math.Interpolation)obj));
      case 1223: return g1223(((com.badlogic.gdx.math.Interpolation)obj));
      case 1225: return g1225(((com.badlogic.gdx.math.Interpolation)obj));
      case 1227: return g1227(((com.badlogic.gdx.math.Interpolation)obj));
      case 1229: return g1229(((com.badlogic.gdx.math.Interpolation)obj));
      case 1231: return g1231(((com.badlogic.gdx.math.Interpolation)obj));
      case 1233: return g1233(((com.badlogic.gdx.math.Interpolation)obj));
      case 1235: return g1235(((com.badlogic.gdx.math.Interpolation)obj));
      case 1237: return g1237(((com.badlogic.gdx.math.Interpolation)obj));
      case 1239: return g1239(((com.badlogic.gdx.math.Interpolation)obj));
      case 1241: return g1241(((com.badlogic.gdx.math.Interpolation)obj));
      case 1255: return g1255(((com.badlogic.gdx.math.Interpolation.BounceOut)obj));
      case 1257: return g1257(((com.badlogic.gdx.math.Interpolation.BounceOut)obj));
      case 1263: return g1263(((com.badlogic.gdx.math.Interpolation.Elastic)obj));
      case 1265: return g1265(((com.badlogic.gdx.math.Interpolation.Elastic)obj));
      case 1276: return g1276(((com.badlogic.gdx.math.Interpolation.Exp)obj));
      case 1278: return g1278(((com.badlogic.gdx.math.Interpolation.Exp)obj));
      case 1280: return g1280(((com.badlogic.gdx.math.Interpolation.Exp)obj));
      case 1282: return g1282(((com.badlogic.gdx.math.Interpolation.Exp)obj));
      case 1293: return g1293(((com.badlogic.gdx.math.Interpolation.Pow)obj));
      case 1304: return g1304(((com.badlogic.gdx.math.Interpolation.Swing)obj));
      case 1309: return g1309(((com.badlogic.gdx.math.Interpolation.SwingIn)obj));
      case 1314: return g1314(((com.badlogic.gdx.math.Interpolation.SwingOut)obj));
      case 1319: return g1319(((com.badlogic.gdx.math.Intersector)obj));
      case 1321: return g1321(((com.badlogic.gdx.math.Intersector)obj));
      case 1323: return g1323(((com.badlogic.gdx.math.Intersector)obj));
      case 1325: return g1325(((com.badlogic.gdx.math.Intersector)obj));
      case 1327: return g1327(((com.badlogic.gdx.math.Intersector)obj));
      case 1329: return g1329(((com.badlogic.gdx.math.Intersector)obj));
      case 1331: return g1331(((com.badlogic.gdx.math.Intersector)obj));
      case 1333: return g1333(((com.badlogic.gdx.math.Intersector)obj));
      case 1335: return g1335(((com.badlogic.gdx.math.Intersector)obj));
      case 1337: return g1337(((com.badlogic.gdx.math.Intersector)obj));
      case 1339: return g1339(((com.badlogic.gdx.math.Intersector)obj));
      case 1341: return g1341(((com.badlogic.gdx.math.Intersector)obj));
      case 1343: return g1343(((com.badlogic.gdx.math.Intersector)obj));
      case 1345: return g1345(((com.badlogic.gdx.math.Intersector)obj));
      case 1393: return g1393(((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)obj));
      case 1395: return g1395(((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)obj));
      case 1399: return g1399(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1401: return g1401(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1403: return g1403(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1405: return g1405(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1407: return g1407(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1409: return g1409(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1411: return g1411(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1413: return g1413(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1415: return g1415(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj));
      case 1424: return g1424(((com.badlogic.gdx.math.MathUtils)obj));
      case 1426: return g1426(((com.badlogic.gdx.math.MathUtils)obj));
      case 1428: return g1428(((com.badlogic.gdx.math.MathUtils)obj));
      case 1430: return g1430(((com.badlogic.gdx.math.MathUtils)obj));
      case 1432: return g1432(((com.badlogic.gdx.math.MathUtils)obj));
      case 1434: return g1434(((com.badlogic.gdx.math.MathUtils)obj));
      case 1436: return g1436(((com.badlogic.gdx.math.MathUtils)obj));
      case 1438: return g1438(((com.badlogic.gdx.math.MathUtils)obj));
      case 1440: return g1440(((com.badlogic.gdx.math.MathUtils)obj));
      case 1442: return g1442(((com.badlogic.gdx.math.MathUtils)obj));
      case 1444: return g1444(((com.badlogic.gdx.math.MathUtils)obj));
      case 1446: return g1446(((com.badlogic.gdx.math.MathUtils)obj));
      case 1448: return g1448(((com.badlogic.gdx.math.MathUtils)obj));
      case 1450: return g1450(((com.badlogic.gdx.math.MathUtils)obj));
      case 1452: return g1452(((com.badlogic.gdx.math.MathUtils)obj));
      case 1454: return g1454(((com.badlogic.gdx.math.MathUtils)obj));
      case 1456: return g1456(((com.badlogic.gdx.math.MathUtils)obj));
      case 1458: return g1458(((com.badlogic.gdx.math.MathUtils)obj));
      case 1460: return g1460(((com.badlogic.gdx.math.MathUtils)obj));
      case 1462: return g1462(((com.badlogic.gdx.math.MathUtils)obj));
      case 1464: return g1464(((com.badlogic.gdx.math.MathUtils)obj));
      case 1466: return g1466(((com.badlogic.gdx.math.MathUtils)obj));
      case 1468: return g1468(((com.badlogic.gdx.math.MathUtils)obj));
      case 1470: return g1470(((com.badlogic.gdx.math.MathUtils)obj));
      case 1472: return g1472(((com.badlogic.gdx.math.MathUtils)obj));
      case 1474: return g1474(((com.badlogic.gdx.math.MathUtils)obj));
      case 1476: return g1476(((com.badlogic.gdx.math.MathUtils)obj));
      case 1505: return g1505(((com.badlogic.gdx.math.Matrix3)obj));
      case 1507: return g1507(((com.badlogic.gdx.math.Matrix3)obj));
      case 1509: return g1509(((com.badlogic.gdx.math.Matrix3)obj));
      case 1511: return g1511(((com.badlogic.gdx.math.Matrix3)obj));
      case 1513: return g1513(((com.badlogic.gdx.math.Matrix3)obj));
      case 1515: return g1515(((com.badlogic.gdx.math.Matrix3)obj));
      case 1517: return g1517(((com.badlogic.gdx.math.Matrix3)obj));
      case 1519: return g1519(((com.badlogic.gdx.math.Matrix3)obj));
      case 1521: return g1521(((com.badlogic.gdx.math.Matrix3)obj));
      case 1523: return g1523(((com.badlogic.gdx.math.Matrix3)obj));
      case 1525: return g1525(((com.badlogic.gdx.math.Matrix3)obj));
      case 1565: return g1565(((com.badlogic.gdx.math.Matrix4)obj));
      case 1567: return g1567(((com.badlogic.gdx.math.Matrix4)obj));
      case 1569: return g1569(((com.badlogic.gdx.math.Matrix4)obj));
      case 1571: return g1571(((com.badlogic.gdx.math.Matrix4)obj));
      case 1573: return g1573(((com.badlogic.gdx.math.Matrix4)obj));
      case 1575: return g1575(((com.badlogic.gdx.math.Matrix4)obj));
      case 1577: return g1577(((com.badlogic.gdx.math.Matrix4)obj));
      case 1579: return g1579(((com.badlogic.gdx.math.Matrix4)obj));
      case 1581: return g1581(((com.badlogic.gdx.math.Matrix4)obj));
      case 1583: return g1583(((com.badlogic.gdx.math.Matrix4)obj));
      case 1585: return g1585(((com.badlogic.gdx.math.Matrix4)obj));
      case 1587: return g1587(((com.badlogic.gdx.math.Matrix4)obj));
      case 1589: return g1589(((com.badlogic.gdx.math.Matrix4)obj));
      case 1591: return g1591(((com.badlogic.gdx.math.Matrix4)obj));
      case 1593: return g1593(((com.badlogic.gdx.math.Matrix4)obj));
      case 1595: return g1595(((com.badlogic.gdx.math.Matrix4)obj));
      case 1597: return g1597(((com.badlogic.gdx.math.Matrix4)obj));
      case 1599: return g1599(((com.badlogic.gdx.math.Matrix4)obj));
      case 1601: return g1601(((com.badlogic.gdx.math.Matrix4)obj));
      case 1603: return g1603(((com.badlogic.gdx.math.Matrix4)obj));
      case 1605: return g1605(((com.badlogic.gdx.math.Matrix4)obj));
      case 1607: return g1607(((com.badlogic.gdx.math.Matrix4)obj));
      case 1609: return g1609(((com.badlogic.gdx.math.Matrix4)obj));
      case 1611: return g1611(((com.badlogic.gdx.math.Matrix4)obj));
      case 1613: return g1613(((com.badlogic.gdx.math.Matrix4)obj));
      case 1615: return g1615(((com.badlogic.gdx.math.Matrix4)obj));
      case 1617: return g1617(((com.badlogic.gdx.math.Matrix4)obj));
      case 1704: return g1704(((com.badlogic.gdx.math.Plane)obj));
      case 1706: return g1706(((com.badlogic.gdx.math.Plane)obj));
      case 1724: return g1724(((com.badlogic.gdx.math.Plane.PlaneSide)obj));
      case 1726: return g1726(((com.badlogic.gdx.math.Plane.PlaneSide)obj));
      case 1728: return g1728(((com.badlogic.gdx.math.Plane.PlaneSide)obj));
      case 1735: return g1735(((com.badlogic.gdx.math.Polygon)obj));
      case 1737: return g1737(((com.badlogic.gdx.math.Polygon)obj));
      case 1739: return g1739(((com.badlogic.gdx.math.Polygon)obj));
      case 1741: return g1741(((com.badlogic.gdx.math.Polygon)obj));
      case 1743: return g1743(((com.badlogic.gdx.math.Polygon)obj));
      case 1745: return g1745(((com.badlogic.gdx.math.Polygon)obj));
      case 1747: return g1747(((com.badlogic.gdx.math.Polygon)obj));
      case 1749: return g1749(((com.badlogic.gdx.math.Polygon)obj));
      case 1751: return g1751(((com.badlogic.gdx.math.Polygon)obj));
      case 1753: return g1753(((com.badlogic.gdx.math.Polygon)obj));
      case 1755: return g1755(((com.badlogic.gdx.math.Polygon)obj));
      case 1781: return g1781(((com.badlogic.gdx.math.Polyline)obj));
      case 1783: return g1783(((com.badlogic.gdx.math.Polyline)obj));
      case 1785: return g1785(((com.badlogic.gdx.math.Polyline)obj));
      case 1787: return g1787(((com.badlogic.gdx.math.Polyline)obj));
      case 1789: return g1789(((com.badlogic.gdx.math.Polyline)obj));
      case 1791: return g1791(((com.badlogic.gdx.math.Polyline)obj));
      case 1793: return g1793(((com.badlogic.gdx.math.Polyline)obj));
      case 1795: return g1795(((com.badlogic.gdx.math.Polyline)obj));
      case 1797: return g1797(((com.badlogic.gdx.math.Polyline)obj));
      case 1799: return g1799(((com.badlogic.gdx.math.Polyline)obj));
      case 1801: return g1801(((com.badlogic.gdx.math.Polyline)obj));
      case 1803: return g1803(((com.badlogic.gdx.math.Polyline)obj));
      case 1805: return g1805(((com.badlogic.gdx.math.Polyline)obj));
      case 1807: return g1807(((com.badlogic.gdx.math.Polyline)obj));
      case 1835: return g1835(((com.badlogic.gdx.math.Quaternion)obj));
      case 1837: return g1837(((com.badlogic.gdx.math.Quaternion)obj));
      case 1839: return g1839(((com.badlogic.gdx.math.Quaternion)obj));
      case 1841: return g1841(((com.badlogic.gdx.math.Quaternion)obj));
      case 1843: return g1843(((com.badlogic.gdx.math.Quaternion)obj));
      case 1845: return g1845(((com.badlogic.gdx.math.Quaternion)obj));
      case 1847: return g1847(((com.badlogic.gdx.math.Quaternion)obj));
      case 1888: return g1888(((com.badlogic.gdx.math.Rectangle)obj));
      case 1890: return g1890(((com.badlogic.gdx.math.Rectangle)obj));
      case 1894: return g1894(((com.badlogic.gdx.math.Rectangle)obj));
      case 1896: return g1896(((com.badlogic.gdx.math.Rectangle)obj));
      case 1898: return g1898(((com.badlogic.gdx.math.Rectangle)obj));
      case 1900: return g1900(((com.badlogic.gdx.math.Rectangle)obj));
      case 1937: return g1937(((com.badlogic.gdx.math.Vector2)obj));
      case 1939: return g1939(((com.badlogic.gdx.math.Vector2)obj));
      case 1941: return g1941(((com.badlogic.gdx.math.Vector2)obj));
      case 1943: return g1943(((com.badlogic.gdx.math.Vector2)obj));
      case 1945: return g1945(((com.badlogic.gdx.math.Vector2)obj));
      case 1999: return g1999(((com.badlogic.gdx.math.Vector3)obj));
      case 2001: return g2001(((com.badlogic.gdx.math.Vector3)obj));
      case 2003: return g2003(((com.badlogic.gdx.math.Vector3)obj));
      case 2005: return g2005(((com.badlogic.gdx.math.Vector3)obj));
      case 2007: return g2007(((com.badlogic.gdx.math.Vector3)obj));
      case 2009: return g2009(((com.badlogic.gdx.math.Vector3)obj));
      case 2011: return g2011(((com.badlogic.gdx.math.Vector3)obj));
      case 2013: return g2013(((com.badlogic.gdx.math.Vector3)obj));
      case 2015: return g2015(((com.badlogic.gdx.math.Vector3)obj));
      case 2017: return g2017(((com.badlogic.gdx.math.Vector3)obj));
      case 2019: return g2019(((com.badlogic.gdx.math.Vector3)obj));
      case 2091: return g2091(((com.badlogic.gdx.math.WindowedMean)obj));
      case 2093: return g2093(((com.badlogic.gdx.math.WindowedMean)obj));
      case 2095: return g2095(((com.badlogic.gdx.math.WindowedMean)obj));
      case 2097: return g2097(((com.badlogic.gdx.math.WindowedMean)obj));
      case 2099: return g2099(((com.badlogic.gdx.math.WindowedMean)obj));
      case 2112: return g2112(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2114: return g2114(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2116: return g2116(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2118: return g2118(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2120: return g2120(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2122: return g2122(((com.badlogic.gdx.math.collision.BoundingBox)obj));
      case 2154: return g2154(((com.badlogic.gdx.math.collision.Ray)obj));
      case 2156: return g2156(((com.badlogic.gdx.math.collision.Ray)obj));
      case 2158: return g2158(((com.badlogic.gdx.math.collision.Ray)obj));
      case 2172: return g2172(((com.badlogic.gdx.math.collision.Segment)obj));
      case 2174: return g2174(((com.badlogic.gdx.math.collision.Segment)obj));
      case 2181: return g2181(((com.badlogic.gdx.math.collision.Sphere)obj));
      case 2183: return g2183(((com.badlogic.gdx.math.collision.Sphere)obj));
      case 2188: return g2188(((com.badlogic.gdx.scenes.scene2d.Action)obj));
      case 2190: return g2190(((com.badlogic.gdx.scenes.scene2d.Action)obj));
      case 2202: return g2202(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2204: return g2204(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2206: return g2206(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2208: return g2208(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2210: return g2210(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2212: return g2212(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2214: return g2214(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2216: return g2216(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2218: return g2218(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2220: return g2220(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2222: return g2222(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2224: return g2224(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2226: return g2226(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2228: return g2228(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2230: return g2230(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2232: return g2232(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2234: return g2234(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2236: return g2236(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2238: return g2238(((com.badlogic.gdx.scenes.scene2d.Actor)obj));
      case 2327: return g2327(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2329: return g2329(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2331: return g2331(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2333: return g2333(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2335: return g2335(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2337: return g2337(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2339: return g2339(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2341: return g2341(((com.badlogic.gdx.scenes.scene2d.Event)obj));
      case 2363: return g2363(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2365: return g2365(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2367: return g2367(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2369: return g2369(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2371: return g2371(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2373: return g2373(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2375: return g2375(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2377: return g2377(((com.badlogic.gdx.scenes.scene2d.Group)obj));
      case 2408: return g2408(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2410: return g2410(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2412: return g2412(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2414: return g2414(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2416: return g2416(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2418: return g2418(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2420: return g2420(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2422: return g2422(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2424: return g2424(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj));
      case 2450: return g2450(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2452: return g2452(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2454: return g2454(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2456: return g2456(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2458: return g2458(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2460: return g2460(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2462: return g2462(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2464: return g2464(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2466: return g2466(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2468: return g2468(((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)obj));
      case 2474: return g2474(((com.badlogic.gdx.scenes.scene2d.InputListener)obj));
      case 2489: return g2489(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2491: return g2491(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2493: return g2493(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2495: return g2495(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2497: return g2497(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2499: return g2499(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2501: return g2501(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2503: return g2503(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2505: return g2505(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2507: return g2507(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2509: return g2509(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2511: return g2511(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2513: return g2513(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2515: return g2515(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2517: return g2517(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2519: return g2519(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2521: return g2521(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2523: return g2523(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2525: return g2525(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2527: return g2527(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2529: return g2529(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2531: return g2531(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2533: return g2533(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2535: return g2535(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2537: return g2537(((com.badlogic.gdx.scenes.scene2d.Stage)obj));
      case 2591: return g2591(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj));
      case 2593: return g2593(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj));
      case 2595: return g2595(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj));
      case 2597: return g2597(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj));
      case 2599: return g2599(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj));
      case 2604: return g2604(((com.badlogic.gdx.scenes.scene2d.Touchable)obj));
      case 2606: return g2606(((com.badlogic.gdx.scenes.scene2d.Touchable)obj));
      case 2608: return g2608(((com.badlogic.gdx.scenes.scene2d.Touchable)obj));
      case 2687: return g2687(((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj));
      case 2689: return g2689(((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj));
      case 2700: return g2700(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj));
      case 2702: return g2702(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj));
      case 2704: return g2704(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj));
      case 2716: return g2716(((com.badlogic.gdx.scenes.scene2d.actions.AfterAction)obj));
      case 2723: return g2723(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj));
      case 2725: return g2725(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj));
      case 2727: return g2727(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj));
      case 2738: return g2738(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2740: return g2740(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2742: return g2742(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2744: return g2744(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2746: return g2746(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2748: return g2748(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj));
      case 2759: return g2759(((com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction)obj));
      case 2761: return g2761(((com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction)obj));
      case 2766: return g2766(((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj));
      case 2768: return g2768(((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj));
      case 2780: return g2780(((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj));
      case 2791: return g2791(((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj));
      case 2793: return g2793(((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj));
      case 2795: return g2795(((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj));
      case 2802: return g2802(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj));
      case 2804: return g2804(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj));
      case 2806: return g2806(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj));
      case 2819: return g2819(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj));
      case 2821: return g2821(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj));
      case 2823: return g2823(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj));
      case 2836: return g2836(((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj));
      case 2844: return g2844(((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj));
      case 2846: return g2846(((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj));
      case 2856: return g2856(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj));
      case 2858: return g2858(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj));
      case 2860: return g2860(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj));
      case 2862: return g2862(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj));
      case 2873: return g2873(((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj));
      case 2875: return g2875(((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj));
      case 2891: return g2891(((com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction)obj));
      case 2897: return g2897(((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj));
      case 2899: return g2899(((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj));
      case 2909: return g2909(((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj));
      case 2911: return g2911(((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj));
      case 2920: return g2920(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj));
      case 2922: return g2922(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj));
      case 2924: return g2924(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj));
      case 2936: return g2936(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj));
      case 2938: return g2938(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj));
      case 2940: return g2940(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj));
      case 2942: return g2942(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj));
      case 2951: return g2951(((com.badlogic.gdx.scenes.scene2d.actions.RotateByAction)obj));
      case 2958: return g2958(((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj));
      case 2960: return g2960(((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj));
      case 2968: return g2968(((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj));
      case 2970: return g2970(((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj));
      case 2980: return g2980(((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj));
      case 2982: return g2982(((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj));
      case 2993: return g2993(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj));
      case 2995: return g2995(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj));
      case 2997: return g2997(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj));
      case 2999: return g2999(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj));
      case 3011: return g3011(((com.badlogic.gdx.scenes.scene2d.actions.SequenceAction)obj));
      case 3022: return g3022(((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj));
      case 3024: return g3024(((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj));
      case 3034: return g3034(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj));
      case 3036: return g3036(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj));
      case 3038: return g3038(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj));
      case 3040: return g3040(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj));
      case 3051: return g3051(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3053: return g3053(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3055: return g3055(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3057: return g3057(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3059: return g3059(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3061: return g3061(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj));
      case 3079: return g3079(((com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction)obj));
      case 3086: return g3086(((com.badlogic.gdx.scenes.scene2d.actions.TouchableAction)obj));
      case 3093: return g3093(((com.badlogic.gdx.scenes.scene2d.actions.VisibleAction)obj));
      case 3100: return g3100(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3102: return g3102(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3104: return g3104(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3106: return g3106(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3108: return g3108(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3110: return g3110(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3112: return g3112(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj));
      case 3125: return g3125(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3127: return g3127(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3129: return g3129(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3131: return g3131(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3133: return g3133(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3135: return g3135(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3137: return g3137(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj));
      case 3151: return g3151(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3153: return g3153(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3155: return g3155(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3157: return g3157(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3159: return g3159(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3161: return g3161(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3163: return g3163(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj));
      case 3176: return g3176(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj));
      case 3178: return g3178(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj));
      case 3180: return g3180(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj));
      case 3200: return g3200(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj));
      case 3202: return g3202(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj));
      case 3204: return g3204(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj));
      case 3226: return g3226(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj));
      case 3228: return g3228(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj));
      case 3230: return g3230(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj));
      case 3232: return g3232(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj));
      case 3234: return g3234(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj));
      case 3250: return g3250(((com.badlogic.gdx.scenes.scene2d.utils.Align)obj));
      case 3252: return g3252(((com.badlogic.gdx.scenes.scene2d.utils.Align)obj));
      case 3254: return g3254(((com.badlogic.gdx.scenes.scene2d.utils.Align)obj));
      case 3256: return g3256(((com.badlogic.gdx.scenes.scene2d.utils.Align)obj));
      case 3258: return g3258(((com.badlogic.gdx.scenes.scene2d.utils.Align)obj));
      case 3262: return g3262(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3264: return g3264(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3266: return g3266(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3268: return g3268(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3270: return g3270(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3272: return g3272(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj));
      case 3295: return g3295(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3297: return g3297(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3299: return g3299(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3301: return g3301(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3303: return g3303(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3305: return g3305(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3307: return g3307(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3309: return g3309(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3311: return g3311(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3315: return g3315(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj));
      case 3347: return g3347(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3349: return g3349(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3351: return g3351(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3353: return g3353(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3355: return g3355(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3357: return g3357(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3359: return g3359(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3361: return g3361(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3363: return g3363(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3365: return g3365(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3367: return g3367(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3369: return g3369(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3371: return g3371(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3375: return g3375(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3377: return g3377(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj));
      case 3393: return g3393(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj));
      case 3395: return g3395(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj));
      case 3397: return g3397(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj));
      case 3399: return g3399(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj));
      case 3411: return g3411(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)obj));
      case 3417: return g3417(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)obj));
      case 3424: return g3424(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3426: return g3426(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3428: return g3428(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3430: return g3430(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3432: return g3432(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3434: return g3434(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3436: return g3436(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3438: return g3438(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj));
      case 3463: return g3463(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj));
      case 3465: return g3465(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj));
      case 3467: return g3467(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj));
      case 3478: return g3478(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type)obj));
      case 3480: return g3480(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type)obj));
      case 3487: return g3487(((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)obj));
      case 3496: return g3496(((com.badlogic.gdx.scenes.scene2d.utils.ScissorStack)obj));
      case 3498: return g3498(((com.badlogic.gdx.scenes.scene2d.utils.ScissorStack)obj));
      case 3500: return g3500(((com.badlogic.gdx.scenes.scene2d.utils.ScissorStack)obj));
      case 3510: return g3510(((com.badlogic.gdx.utils.Array)obj));
      case 3512: return g3512(((com.badlogic.gdx.utils.Array)obj));
      case 3514: return g3514(((com.badlogic.gdx.utils.Array)obj));
      case 3516: return g3516(((com.badlogic.gdx.utils.Array)obj));
      case 3518: return g3518(((com.badlogic.gdx.utils.Array)obj));
      case 3568: return g3568(((com.badlogic.gdx.utils.Array.ArrayIterable)obj));
      case 3570: return g3570(((com.badlogic.gdx.utils.Array.ArrayIterable)obj));
      case 3572: return g3572(((com.badlogic.gdx.utils.Array.ArrayIterable)obj));
      case 3574: return g3574(((com.badlogic.gdx.utils.Array.ArrayIterable)obj));
      case 3580: return g3580(((com.badlogic.gdx.utils.Array.ArrayIterator)obj));
      case 3582: return g3582(((com.badlogic.gdx.utils.Array.ArrayIterator)obj));
      case 3584: return g3584(((com.badlogic.gdx.utils.Array.ArrayIterator)obj));
      case 3586: return g3586(((com.badlogic.gdx.utils.Array.ArrayIterator)obj));
      case 3596: return g3596(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3598: return g3598(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3600: return g3600(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3602: return g3602(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3604: return g3604(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3606: return g3606(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3608: return g3608(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3610: return g3610(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3612: return g3612(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3614: return g3614(((com.badlogic.gdx.utils.ArrayMap)obj));
      case 3657: return g3657(((com.badlogic.gdx.utils.ArrayMap.Entries)obj));
      case 3659: return g3659(((com.badlogic.gdx.utils.ArrayMap.Entries)obj));
      case 3661: return g3661(((com.badlogic.gdx.utils.ArrayMap.Entries)obj));
      case 3663: return g3663(((com.badlogic.gdx.utils.ArrayMap.Entries)obj));
      case 3672: return g3672(((com.badlogic.gdx.utils.ArrayMap.Keys)obj));
      case 3674: return g3674(((com.badlogic.gdx.utils.ArrayMap.Keys)obj));
      case 3676: return g3676(((com.badlogic.gdx.utils.ArrayMap.Keys)obj));
      case 3686: return g3686(((com.badlogic.gdx.utils.ArrayMap.Values)obj));
      case 3688: return g3688(((com.badlogic.gdx.utils.ArrayMap.Values)obj));
      case 3690: return g3690(((com.badlogic.gdx.utils.ArrayMap.Values)obj));
      case 3701: return g3701(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3703: return g3703(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3705: return g3705(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3707: return g3707(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3709: return g3709(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3711: return g3711(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3713: return g3713(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3715: return g3715(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3717: return g3717(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3719: return g3719(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3721: return g3721(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3723: return g3723(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3725: return g3725(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3727: return g3727(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3729: return g3729(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3731: return g3731(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3733: return g3733(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3735: return g3735(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3737: return g3737(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3739: return g3739(((com.badlogic.gdx.utils.ObjectMap)obj));
      case 3774: return g3774(((com.badlogic.gdx.utils.ObjectMap.Entries)obj));
      case 3781: return g3781(((com.badlogic.gdx.utils.ObjectMap.Entry)obj));
      case 3783: return g3783(((com.badlogic.gdx.utils.ObjectMap.Entry)obj));
      case 3801: return g3801(((com.badlogic.gdx.utils.OrderedMap)obj));
  }
     throw new IllegalArgumentException("Missing getter-stub " + field.getter + " for field " + field.name);
  }
  public void set(Field field, Object obj, Object value) throws IllegalAccessException {
      switch(field.setter) {
      case 36: s36(((com.badlogic.gdx.graphics.Color)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 38: s38(((com.badlogic.gdx.graphics.Color)obj), ((Number)value).floatValue()); return;
      case 40: s40(((com.badlogic.gdx.graphics.Color)obj), ((Number)value).floatValue()); return;
      case 42: s42(((com.badlogic.gdx.graphics.Color)obj), ((Number)value).floatValue()); return;
      case 44: s44(((com.badlogic.gdx.graphics.Color)obj), ((Number)value).floatValue()); return;
      case 90: s90(((com.badlogic.gdx.graphics.Texture)obj), ((com.badlogic.gdx.assets.AssetManager)value)); return;
      case 94: s94(((com.badlogic.gdx.graphics.Texture)obj), ((com.badlogic.gdx.graphics.TextureData)value)); return;
      case 171: s171(((com.badlogic.gdx.graphics.VertexAttribute)obj), ((Number)value).intValue()); return;
      case 173: s173(((com.badlogic.gdx.graphics.VertexAttribute)obj), ((java.lang.String)value)); return;
      case 175: s175(((com.badlogic.gdx.graphics.VertexAttribute)obj), ((Number)value).intValue()); return;
      case 246: s246(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj), ((com.badlogic.gdx.graphics.g2d.TextureRegion[])value)); return;
      case 250: s250(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj), ((Boolean)value).booleanValue()); return;
      case 252: s252(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj), ((Boolean)value).booleanValue()); return;
      case 254: s254(((com.badlogic.gdx.graphics.g2d.BitmapFont)obj), ((Boolean)value).booleanValue()); return;
      case 314: s314(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((java.lang.String)value)); return;
      case 316: s316(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((java.lang.String[])value)); return;
      case 318: s318(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((com.badlogic.gdx.files.FileHandle)value)); return;
      case 320: s320(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Boolean)value).booleanValue()); return;
      case 322: s322(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 324: s324(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 326: s326(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 328: s328(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 330: s330(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 332: s332(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 334: s334(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 338: s338(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 340: s340(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj), ((Number)value).floatValue()); return;
      case 352: s352(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 354: s354(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 356: s356(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 358: s358(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 360: s360(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 362: s362(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).floatValue()); return;
      case 364: s364(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).floatValue()); return;
      case 366: s366(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).floatValue()); return;
      case 368: s368(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).floatValue()); return;
      case 370: s370(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 372: s372(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 374: s374(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 376: s376(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((byte[][])value)); return;
      case 378: s378(((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj), ((Number)value).intValue()); return;
      case 395: s395(((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)obj), ((Number)value).floatValue()); return;
      case 397: s397(((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)obj), ((Number)value).floatValue()); return;
      case 405: s405(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((float[][])value)); return;
      case 407: s407(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((int[])value)); return;
      case 409: s409(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((int[])value)); return;
      case 411: s411(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((Number)value).floatValue()); return;
      case 413: s413(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((Number)value).floatValue()); return;
      case 415: s415(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((Number)value).floatValue()); return;
      case 421: s421(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((Boolean)value).booleanValue()); return;
      case 423: s423(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((Number)value).intValue()); return;
      case 425: s425(((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj), ((com.badlogic.gdx.utils.IntArray[])value)); return;
      case 488: s488(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((com.badlogic.gdx.graphics.Texture)value)); return;
      case 490: s490(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 492: s492(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 494: s494(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 496: s496(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 498: s498(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 500: s500(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 502: s502(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 504: s504(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 506: s506(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 508: s508(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 510: s510(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 512: s512(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 514: s514(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 516: s516(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 518: s518(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).floatValue()); return;
      case 520: s520(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((float[])value)); return;
      case 522: s522(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 526: s526(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 528: s528(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 530: s530(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 532: s532(((com.badlogic.gdx.graphics.g2d.NinePatch)obj), ((Number)value).intValue()); return;
      case 574: s574(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((com.badlogic.gdx.graphics.Texture)value)); return;
      case 576: s576(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).floatValue()); return;
      case 578: s578(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).floatValue()); return;
      case 580: s580(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).floatValue()); return;
      case 582: s582(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).floatValue()); return;
      case 584: s584(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).intValue()); return;
      case 586: s586(((com.badlogic.gdx.graphics.g2d.TextureRegion)obj), ((Number)value).intValue()); return;
      case 627: s627(((com.badlogic.gdx.graphics.g3d.model.Animation)obj), ((java.lang.String)value)); return;
      case 629: s629(((com.badlogic.gdx.graphics.g3d.model.Animation)obj), ((Number)value).floatValue()); return;
      case 631: s631(((com.badlogic.gdx.graphics.g3d.model.Animation)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 635: s635(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj), ((java.lang.String)value)); return;
      case 637: s637(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj), ((Number)value).intValue()); return;
      case 639: s639(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj), ((Number)value).intValue()); return;
      case 641: s641(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj), ((Number)value).intValue()); return;
      case 643: s643(((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj), ((com.badlogic.gdx.graphics.Mesh)value)); return;
      case 651: s651(((com.badlogic.gdx.graphics.g3d.model.Node)obj), ((java.lang.String)value)); return;
      case 653: s653(((com.badlogic.gdx.graphics.g3d.model.Node)obj), ((com.badlogic.gdx.graphics.g3d.model.Node)value)); return;
      case 657: s657(((com.badlogic.gdx.graphics.g3d.model.Node)obj), ((Boolean)value).booleanValue()); return;
      case 669: s669(((com.badlogic.gdx.graphics.g3d.model.Node)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 683: s683(((com.badlogic.gdx.graphics.g3d.model.NodeAnimation)obj), ((com.badlogic.gdx.graphics.g3d.model.Node)value)); return;
      case 685: s685(((com.badlogic.gdx.graphics.g3d.model.NodeAnimation)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 689: s689(((com.badlogic.gdx.graphics.g3d.model.NodeKeyframe)obj), ((Number)value).floatValue()); return;
      case 699: s699(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj), ((com.badlogic.gdx.graphics.g3d.model.MeshPart)value)); return;
      case 701: s701(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj), ((com.badlogic.gdx.graphics.g3d.Material)value)); return;
      case 703: s703(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj), ((com.badlogic.gdx.utils.ArrayMap)value)); return;
      case 705: s705(((com.badlogic.gdx.graphics.g3d.model.NodePart)obj), ((com.badlogic.gdx.math.Matrix4[])value)); return;
      case 711: s711(((com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation)obj), ((java.lang.String)value)); return;
      case 713: s713(((com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 717: s717(((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj), ((java.lang.String)value)); return;
      case 732: s732(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((java.lang.String)value)); return;
      case 734: s734(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType)value)); return;
      case 736: s736(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 738: s738(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 740: s740(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 742: s742(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 744: s744(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 746: s746(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((Number)value).floatValue()); return;
      case 748: s748(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((Number)value).floatValue()); return;
      case 750: s750(((com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 762: s762(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj), ((java.lang.String)value)); return;
      case 764: s764(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj), ((com.badlogic.gdx.graphics.VertexAttribute[])value)); return;
      case 766: s766(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj), ((float[])value)); return;
      case 768: s768(((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)obj), ((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[])value)); return;
      case 772: s772(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj), ((java.lang.String)value)); return;
      case 774: s774(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj), ((short[])value)); return;
      case 776: s776(((com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart)obj), ((Number)value).intValue()); return;
      case 781: s781(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((java.lang.String)value)); return;
      case 783: s783(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((Number)value).intValue()); return;
      case 785: s785(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 787: s787(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((com.badlogic.gdx.math.Quaternion)value)); return;
      case 789: s789(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 791: s791(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((java.lang.String)value)); return;
      case 793: s793(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[])value)); return;
      case 795: s795(((com.badlogic.gdx.graphics.g3d.model.data.ModelNode)obj), ((com.badlogic.gdx.graphics.g3d.model.data.ModelNode[])value)); return;
      case 799: s799(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation)obj), ((java.lang.String)value)); return;
      case 805: s805(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj), ((Number)value).floatValue()); return;
      case 807: s807(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 809: s809(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 811: s811(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe)obj), ((com.badlogic.gdx.math.Quaternion)value)); return;
      case 815: s815(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj), ((java.lang.String)value)); return;
      case 817: s817(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj), ((java.lang.String)value)); return;
      case 819: s819(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj), ((com.badlogic.gdx.utils.ArrayMap)value)); return;
      case 821: s821(((com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart)obj), ((int[][])value)); return;
      case 849: s849(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj), ((java.lang.String)value)); return;
      case 851: s851(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj), ((java.lang.String)value)); return;
      case 853: s853(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj), ((com.badlogic.gdx.math.Vector2)value)); return;
      case 855: s855(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj), ((com.badlogic.gdx.math.Vector2)value)); return;
      case 857: s857(((com.badlogic.gdx.graphics.g3d.model.data.ModelTexture)obj), ((Number)value).intValue()); return;
      case 863: s863(((com.badlogic.gdx.math.BSpline)obj), ((com.badlogic.gdx.math.Vector[])value)); return;
      case 865: s865(((com.badlogic.gdx.math.BSpline)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 867: s867(((com.badlogic.gdx.math.BSpline)obj), ((Number)value).intValue()); return;
      case 869: s869(((com.badlogic.gdx.math.BSpline)obj), ((Boolean)value).booleanValue()); return;
      case 871: s871(((com.badlogic.gdx.math.BSpline)obj), ((Number)value).intValue()); return;
      case 873: s873(((com.badlogic.gdx.math.BSpline)obj), ((com.badlogic.gdx.math.Vector)value)); return;
      case 897: s897(((com.badlogic.gdx.math.Bezier)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 899: s899(((com.badlogic.gdx.math.Bezier)obj), ((com.badlogic.gdx.math.Vector)value)); return;
      case 928: s928(((com.badlogic.gdx.math.CatmullRomSpline)obj), ((com.badlogic.gdx.math.Vector[])value)); return;
      case 930: s930(((com.badlogic.gdx.math.CatmullRomSpline)obj), ((Boolean)value).booleanValue()); return;
      case 932: s932(((com.badlogic.gdx.math.CatmullRomSpline)obj), ((Number)value).intValue()); return;
      case 934: s934(((com.badlogic.gdx.math.CatmullRomSpline)obj), ((com.badlogic.gdx.math.Vector)value)); return;
      case 936: s936(((com.badlogic.gdx.math.CatmullRomSpline)obj), ((com.badlogic.gdx.math.Vector)value)); return;
      case 956: s956(((com.badlogic.gdx.math.Circle)obj), ((Number)value).floatValue()); return;
      case 958: s958(((com.badlogic.gdx.math.Circle)obj), ((Number)value).floatValue()); return;
      case 960: s960(((com.badlogic.gdx.math.Circle)obj), ((Number)value).floatValue()); return;
      case 982: s982(((com.badlogic.gdx.math.ConvexHull)obj), ((float[])value)); return;
      case 1013: s1013(((com.badlogic.gdx.math.DelaunayTriangulator)obj), ((float[])value)); return;
      case 1044: s1044(((com.badlogic.gdx.math.EarClippingTriangulator)obj), ((short[])value)); return;
      case 1046: s1046(((com.badlogic.gdx.math.EarClippingTriangulator)obj), ((float[])value)); return;
      case 1048: s1048(((com.badlogic.gdx.math.EarClippingTriangulator)obj), ((Number)value).intValue()); return;
      case 1068: s1068(((com.badlogic.gdx.math.Ellipse)obj), ((Number)value).floatValue()); return;
      case 1070: s1070(((com.badlogic.gdx.math.Ellipse)obj), ((Number)value).floatValue()); return;
      case 1072: s1072(((com.badlogic.gdx.math.Ellipse)obj), ((Number)value).floatValue()); return;
      case 1074: s1074(((com.badlogic.gdx.math.Ellipse)obj), ((Number)value).floatValue()); return;
      case 1090: s1090(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).intValue()); return;
      case 1092: s1092(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1094: s1094(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1096: s1096(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1098: s1098(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1100: s1100(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1102: s1102(((com.badlogic.gdx.math.FloatCounter)obj), ((Number)value).floatValue()); return;
      case 1150: s1150(((com.badlogic.gdx.math.GridPoint2)obj), ((Number)value).intValue()); return;
      case 1152: s1152(((com.badlogic.gdx.math.GridPoint2)obj), ((Number)value).intValue()); return;
      case 1160: s1160(((com.badlogic.gdx.math.GridPoint3)obj), ((Number)value).intValue()); return;
      case 1162: s1162(((com.badlogic.gdx.math.GridPoint3)obj), ((Number)value).intValue()); return;
      case 1164: s1164(((com.badlogic.gdx.math.GridPoint3)obj), ((Number)value).intValue()); return;
      case 1332: s1332(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1334: s1334(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1336: s1336(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1338: s1338(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1340: s1340(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1342: s1342(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector2)value)); return;
      case 1344: s1344(((com.badlogic.gdx.math.Intersector)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 1392: s1392(((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)obj), ((com.badlogic.gdx.math.Vector2)value)); return;
      case 1394: s1394(((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)obj), ((Number)value).floatValue()); return;
      case 1398: s1398(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((float[])value)); return;
      case 1400: s1400(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((float[])value)); return;
      case 1402: s1402(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((float[])value)); return;
      case 1404: s1404(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Number)value).intValue()); return;
      case 1406: s1406(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Number)value).intValue()); return;
      case 1408: s1408(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Number)value).intValue()); return;
      case 1410: s1410(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Boolean)value).booleanValue()); return;
      case 1412: s1412(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Number)value).intValue()); return;
      case 1414: s1414(((com.badlogic.gdx.math.Intersector.SplitTriangle)obj), ((Number)value).intValue()); return;
      case 1465: s1465(((com.badlogic.gdx.math.MathUtils)obj), ((java.util.Random)value)); return;
      case 1522: s1522(((com.badlogic.gdx.math.Matrix3)obj), ((float[])value)); return;
      case 1524: s1524(((com.badlogic.gdx.math.Matrix3)obj), ((float[])value)); return;
      case 1600: s1600(((com.badlogic.gdx.math.Matrix4)obj), ((com.badlogic.gdx.math.Quaternion)value)); return;
      case 1705: s1705(((com.badlogic.gdx.math.Plane)obj), ((Number)value).floatValue()); return;
      case 1734: s1734(((com.badlogic.gdx.math.Polygon)obj), ((float[])value)); return;
      case 1736: s1736(((com.badlogic.gdx.math.Polygon)obj), ((float[])value)); return;
      case 1738: s1738(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1740: s1740(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1742: s1742(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1744: s1744(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1746: s1746(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1748: s1748(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1750: s1750(((com.badlogic.gdx.math.Polygon)obj), ((Number)value).floatValue()); return;
      case 1752: s1752(((com.badlogic.gdx.math.Polygon)obj), ((Boolean)value).booleanValue()); return;
      case 1754: s1754(((com.badlogic.gdx.math.Polygon)obj), ((com.badlogic.gdx.math.Rectangle)value)); return;
      case 1782: s1782(((com.badlogic.gdx.math.Polyline)obj), ((float[])value)); return;
      case 1784: s1784(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1786: s1786(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1788: s1788(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1790: s1790(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1792: s1792(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1794: s1794(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1796: s1796(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1798: s1798(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1800: s1800(((com.badlogic.gdx.math.Polyline)obj), ((Number)value).floatValue()); return;
      case 1802: s1802(((com.badlogic.gdx.math.Polyline)obj), ((Boolean)value).booleanValue()); return;
      case 1804: s1804(((com.badlogic.gdx.math.Polyline)obj), ((Boolean)value).booleanValue()); return;
      case 1806: s1806(((com.badlogic.gdx.math.Polyline)obj), ((Boolean)value).booleanValue()); return;
      case 1836: s1836(((com.badlogic.gdx.math.Quaternion)obj), ((com.badlogic.gdx.math.Quaternion)value)); return;
      case 1838: s1838(((com.badlogic.gdx.math.Quaternion)obj), ((com.badlogic.gdx.math.Quaternion)value)); return;
      case 1840: s1840(((com.badlogic.gdx.math.Quaternion)obj), ((Number)value).floatValue()); return;
      case 1842: s1842(((com.badlogic.gdx.math.Quaternion)obj), ((Number)value).floatValue()); return;
      case 1844: s1844(((com.badlogic.gdx.math.Quaternion)obj), ((Number)value).floatValue()); return;
      case 1846: s1846(((com.badlogic.gdx.math.Quaternion)obj), ((Number)value).floatValue()); return;
      case 1893: s1893(((com.badlogic.gdx.math.Rectangle)obj), ((Number)value).floatValue()); return;
      case 1895: s1895(((com.badlogic.gdx.math.Rectangle)obj), ((Number)value).floatValue()); return;
      case 1897: s1897(((com.badlogic.gdx.math.Rectangle)obj), ((Number)value).floatValue()); return;
      case 1899: s1899(((com.badlogic.gdx.math.Rectangle)obj), ((Number)value).floatValue()); return;
      case 1942: s1942(((com.badlogic.gdx.math.Vector2)obj), ((Number)value).floatValue()); return;
      case 1944: s1944(((com.badlogic.gdx.math.Vector2)obj), ((Number)value).floatValue()); return;
      case 1998: s1998(((com.badlogic.gdx.math.Vector3)obj), ((Number)value).floatValue()); return;
      case 2000: s2000(((com.badlogic.gdx.math.Vector3)obj), ((Number)value).floatValue()); return;
      case 2002: s2002(((com.badlogic.gdx.math.Vector3)obj), ((Number)value).floatValue()); return;
      case 2090: s2090(((com.badlogic.gdx.math.WindowedMean)obj), ((float[])value)); return;
      case 2092: s2092(((com.badlogic.gdx.math.WindowedMean)obj), ((Number)value).intValue()); return;
      case 2094: s2094(((com.badlogic.gdx.math.WindowedMean)obj), ((Number)value).intValue()); return;
      case 2096: s2096(((com.badlogic.gdx.math.WindowedMean)obj), ((Number)value).floatValue()); return;
      case 2098: s2098(((com.badlogic.gdx.math.WindowedMean)obj), ((Boolean)value).booleanValue()); return;
      case 2121: s2121(((com.badlogic.gdx.math.collision.BoundingBox)obj), ((Boolean)value).booleanValue()); return;
      case 2157: s2157(((com.badlogic.gdx.math.collision.Ray)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 2180: s2180(((com.badlogic.gdx.math.collision.Sphere)obj), ((Number)value).floatValue()); return;
      case 2187: s2187(((com.badlogic.gdx.scenes.scene2d.Action)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2189: s2189(((com.badlogic.gdx.scenes.scene2d.Action)obj), ((com.badlogic.gdx.utils.Pool)value)); return;
      case 2201: s2201(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((com.badlogic.gdx.scenes.scene2d.Stage)value)); return;
      case 2203: s2203(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((com.badlogic.gdx.scenes.scene2d.Group)value)); return;
      case 2211: s2211(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((java.lang.String)value)); return;
      case 2213: s2213(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((com.badlogic.gdx.scenes.scene2d.Touchable)value)); return;
      case 2215: s2215(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Boolean)value).booleanValue()); return;
      case 2217: s2217(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2219: s2219(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2221: s2221(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2223: s2223(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2225: s2225(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2227: s2227(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2229: s2229(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2231: s2231(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2233: s2233(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((Number)value).floatValue()); return;
      case 2237: s2237(((com.badlogic.gdx.scenes.scene2d.Actor)obj), ((java.lang.Object)value)); return;
      case 2326: s2326(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((com.badlogic.gdx.scenes.scene2d.Stage)value)); return;
      case 2328: s2328(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2330: s2330(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2332: s2332(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((Boolean)value).booleanValue()); return;
      case 2334: s2334(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((Boolean)value).booleanValue()); return;
      case 2336: s2336(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((Boolean)value).booleanValue()); return;
      case 2338: s2338(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((Boolean)value).booleanValue()); return;
      case 2340: s2340(((com.badlogic.gdx.scenes.scene2d.Event)obj), ((Boolean)value).booleanValue()); return;
      case 2372: s2372(((com.badlogic.gdx.scenes.scene2d.Group)obj), ((Boolean)value).booleanValue()); return;
      case 2374: s2374(((com.badlogic.gdx.scenes.scene2d.Group)obj), ((com.badlogic.gdx.math.Rectangle)value)); return;
      case 2407: s2407(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)value)); return;
      case 2409: s2409(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).floatValue()); return;
      case 2411: s2411(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).floatValue()); return;
      case 2413: s2413(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).intValue()); return;
      case 2415: s2415(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).intValue()); return;
      case 2417: s2417(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).intValue()); return;
      case 2419: s2419(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Number)value).intValue()); return;
      case 2421: s2421(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((Character)value).charValue()); return;
      case 2423: s2423(((com.badlogic.gdx.scenes.scene2d.InputEvent)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2492: s2492(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2494: s2494(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2496: s2496(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2498: s2498(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2500: s2500(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2502: s2502(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2504: s2504(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2506: s2506(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).floatValue()); return;
      case 2508: s2508(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((com.badlogic.gdx.graphics.Camera)value)); return;
      case 2526: s2526(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).intValue()); return;
      case 2528: s2528(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((Number)value).intValue()); return;
      case 2530: s2530(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2532: s2532(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2534: s2534(((com.badlogic.gdx.scenes.scene2d.Stage)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2590: s2590(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj), ((com.badlogic.gdx.scenes.scene2d.EventListener)value)); return;
      case 2592: s2592(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2594: s2594(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2596: s2596(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj), ((Number)value).intValue()); return;
      case 2598: s2598(((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj), ((Number)value).intValue()); return;
      case 2686: s2686(((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2688: s2688(((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj), ((com.badlogic.gdx.scenes.scene2d.Action)value)); return;
      case 2699: s2699(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2701: s2701(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj), ((com.badlogic.gdx.scenes.scene2d.EventListener)value)); return;
      case 2703: s2703(((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj), ((Boolean)value).booleanValue()); return;
      case 2715: s2715(((com.badlogic.gdx.scenes.scene2d.actions.AfterAction)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 2722: s2722(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj), ((Number)value).floatValue()); return;
      case 2724: s2724(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj), ((Number)value).floatValue()); return;
      case 2726: s2726(((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 2737: s2737(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj), ((Number)value).floatValue()); return;
      case 2739: s2739(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj), ((Number)value).floatValue()); return;
      case 2741: s2741(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj), ((Number)value).floatValue()); return;
      case 2743: s2743(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj), ((Number)value).floatValue()); return;
      case 2745: s2745(((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj), ((com.badlogic.gdx.graphics.Color)value)); return;
      case 2758: s2758(((com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction)obj), ((Number)value).intValue()); return;
      case 2760: s2760(((com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction)obj), ((Number)value).intValue()); return;
      case 2765: s2765(((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj), ((Number)value).floatValue()); return;
      case 2767: s2767(((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj), ((Number)value).floatValue()); return;
      case 2779: s2779(((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj), ((com.badlogic.gdx.scenes.scene2d.Action)value)); return;
      case 2792: s2792(((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj), ((Boolean)value).booleanValue()); return;
      case 2801: s2801(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj), ((Number)value).floatValue()); return;
      case 2803: s2803(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj), ((Number)value).floatValue()); return;
      case 2805: s2805(((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj), ((Number)value).floatValue()); return;
      case 2818: s2818(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj), ((Number)value).intValue()); return;
      case 2820: s2820(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj), ((Number)value).intValue()); return;
      case 2822: s2822(((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj), ((Number)value).intValue()); return;
      case 2835: s2835(((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj), ((Boolean)value).booleanValue()); return;
      case 2843: s2843(((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj), ((Number)value).floatValue()); return;
      case 2845: s2845(((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj), ((Number)value).floatValue()); return;
      case 2855: s2855(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj), ((Number)value).floatValue()); return;
      case 2857: s2857(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj), ((Number)value).floatValue()); return;
      case 2859: s2859(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj), ((Number)value).floatValue()); return;
      case 2861: s2861(((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj), ((Number)value).floatValue()); return;
      case 2872: s2872(((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 2874: s2874(((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj), ((Boolean)value).booleanValue()); return;
      case 2890: s2890(((com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction)obj), ((Number)value).floatValue()); return;
      case 2896: s2896(((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2898: s2898(((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj), ((com.badlogic.gdx.scenes.scene2d.Action)value)); return;
      case 2908: s2908(((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2910: s2910(((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj), ((Boolean)value).booleanValue()); return;
      case 2919: s2919(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 2921: s2921(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj), ((com.badlogic.gdx.scenes.scene2d.EventListener)value)); return;
      case 2923: s2923(((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj), ((Boolean)value).booleanValue()); return;
      case 2937: s2937(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj), ((Number)value).intValue()); return;
      case 2939: s2939(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj), ((Number)value).intValue()); return;
      case 2941: s2941(((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj), ((Boolean)value).booleanValue()); return;
      case 2950: s2950(((com.badlogic.gdx.scenes.scene2d.actions.RotateByAction)obj), ((Number)value).floatValue()); return;
      case 2957: s2957(((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj), ((Number)value).floatValue()); return;
      case 2959: s2959(((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj), ((Number)value).floatValue()); return;
      case 2967: s2967(((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj), ((java.lang.Runnable)value)); return;
      case 2969: s2969(((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj), ((Boolean)value).booleanValue()); return;
      case 2979: s2979(((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj), ((Number)value).floatValue()); return;
      case 2981: s2981(((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj), ((Number)value).floatValue()); return;
      case 2992: s2992(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj), ((Number)value).floatValue()); return;
      case 2994: s2994(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj), ((Number)value).floatValue()); return;
      case 2996: s2996(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj), ((Number)value).floatValue()); return;
      case 2998: s2998(((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj), ((Number)value).floatValue()); return;
      case 3010: s3010(((com.badlogic.gdx.scenes.scene2d.actions.SequenceAction)obj), ((Number)value).intValue()); return;
      case 3021: s3021(((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj), ((Number)value).floatValue()); return;
      case 3023: s3023(((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj), ((Number)value).floatValue()); return;
      case 3033: s3033(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj), ((Number)value).floatValue()); return;
      case 3035: s3035(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj), ((Number)value).floatValue()); return;
      case 3037: s3037(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj), ((Number)value).floatValue()); return;
      case 3039: s3039(((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj), ((Number)value).floatValue()); return;
      case 3050: s3050(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((Number)value).floatValue()); return;
      case 3052: s3052(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((Number)value).floatValue()); return;
      case 3054: s3054(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((com.badlogic.gdx.math.Interpolation)value)); return;
      case 3056: s3056(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((Boolean)value).booleanValue()); return;
      case 3058: s3058(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((Boolean)value).booleanValue()); return;
      case 3060: s3060(((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj), ((Boolean)value).booleanValue()); return;
      case 3078: s3078(((com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction)obj), ((Number)value).floatValue()); return;
      case 3085: s3085(((com.badlogic.gdx.scenes.scene2d.actions.TouchableAction)obj), ((com.badlogic.gdx.scenes.scene2d.Touchable)value)); return;
      case 3092: s3092(((com.badlogic.gdx.scenes.scene2d.actions.VisibleAction)obj), ((Boolean)value).booleanValue()); return;
      case 3099: s3099(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Number)value).floatValue()); return;
      case 3101: s3101(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Number)value).floatValue()); return;
      case 3103: s3103(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3105: s3105(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Number)value).intValue()); return;
      case 3107: s3107(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3109: s3109(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3111: s3111(((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj), ((Number)value).floatValue()); return;
      case 3124: s3124(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3126: s3126(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3128: s3128(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3130: s3130(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3132: s3132(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3134: s3134(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Number)value).floatValue()); return;
      case 3136: s3136(((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj), ((Boolean)value).booleanValue()); return;
      case 3150: s3150(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Number)value).floatValue()); return;
      case 3152: s3152(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Number)value).floatValue()); return;
      case 3154: s3154(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3156: s3156(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Number)value).intValue()); return;
      case 3158: s3158(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3160: s3160(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3162: s3162(((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj), ((Number)value).floatValue()); return;
      case 3175: s3175(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj), ((Boolean)value).booleanValue()); return;
      case 3177: s3177(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj), ((Boolean)value).booleanValue()); return;
      case 3179: s3179(((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj), ((Boolean)value).booleanValue()); return;
      case 3199: s3199(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3201: s3201(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3203: s3203(((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj), ((Boolean)value).booleanValue()); return;
      case 3229: s3229(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj), ((com.badlogic.gdx.scenes.scene2d.InputEvent)value)); return;
      case 3231: s3231(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3233: s3233(((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3261: s3261(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3263: s3263(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3265: s3265(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3267: s3267(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3269: s3269(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3271: s3271(((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj), ((Number)value).floatValue()); return;
      case 3294: s3294(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).floatValue()); return;
      case 3296: s3296(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).floatValue()); return;
      case 3298: s3298(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).floatValue()); return;
      case 3300: s3300(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).intValue()); return;
      case 3302: s3302(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).intValue()); return;
      case 3304: s3304(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).intValue()); return;
      case 3306: s3306(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Boolean)value).booleanValue()); return;
      case 3308: s3308(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Boolean)value).booleanValue()); return;
      case 3310: s3310(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Boolean)value).booleanValue()); return;
      case 3314: s3314(((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj), ((Number)value).intValue()); return;
      case 3348: s3348(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)value)); return;
      case 3350: s3350(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3352: s3352(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)value)); return;
      case 3354: s3354(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Boolean)value).booleanValue()); return;
      case 3356: s3356(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 3358: s3358(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((com.badlogic.gdx.utils.ObjectMap)value)); return;
      case 3360: s3360(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).floatValue()); return;
      case 3362: s3362(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).intValue()); return;
      case 3364: s3364(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).floatValue()); return;
      case 3366: s3366(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).floatValue()); return;
      case 3368: s3368(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).floatValue()); return;
      case 3370: s3370(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).floatValue()); return;
      case 3374: s3374(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).intValue()); return;
      case 3376: s3376(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj), ((Number)value).intValue()); return;
      case 3392: s3392(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3394: s3394(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3396: s3396(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3398: s3398(((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj), ((java.lang.Object)value)); return;
      case 3423: s3423(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).floatValue()); return;
      case 3425: s3425(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).floatValue()); return;
      case 3427: s3427(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).floatValue()); return;
      case 3429: s3429(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).intValue()); return;
      case 3431: s3431(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).intValue()); return;
      case 3433: s3433(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Boolean)value).booleanValue()); return;
      case 3435: s3435(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).floatValue()); return;
      case 3437: s3437(((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj), ((Number)value).floatValue()); return;
      case 3462: s3462(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj), ((Boolean)value).booleanValue()); return;
      case 3464: s3464(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj), ((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type)value)); return;
      case 3466: s3466(((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj), ((com.badlogic.gdx.scenes.scene2d.Actor)value)); return;
      case 3486: s3486(((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)obj), ((com.badlogic.gdx.graphics.g2d.NinePatch)value)); return;
      case 3495: s3495(((com.badlogic.gdx.scenes.scene2d.utils.ScissorStack)obj), ((com.badlogic.gdx.utils.Array)value)); return;
      case 3497: s3497(((com.badlogic.gdx.scenes.scene2d.utils.ScissorStack)obj), ((com.badlogic.gdx.math.Vector3)value)); return;
      case 3509: s3509(((com.badlogic.gdx.utils.Array)obj), ((java.lang.Object[])value)); return;
      case 3511: s3511(((com.badlogic.gdx.utils.Array)obj), ((Number)value).intValue()); return;
      case 3513: s3513(((com.badlogic.gdx.utils.Array)obj), ((Boolean)value).booleanValue()); return;
      case 3515: s3515(((com.badlogic.gdx.utils.Array)obj), ((com.badlogic.gdx.utils.Array.ArrayIterable)value)); return;
      case 3517: s3517(((com.badlogic.gdx.utils.Array)obj), ((com.badlogic.gdx.utils.Predicate.PredicateIterable)value)); return;
      case 3571: s3571(((com.badlogic.gdx.utils.Array.ArrayIterable)obj), ((com.badlogic.gdx.utils.Array.ArrayIterator)value)); return;
      case 3573: s3573(((com.badlogic.gdx.utils.Array.ArrayIterable)obj), ((com.badlogic.gdx.utils.Array.ArrayIterator)value)); return;
      case 3583: s3583(((com.badlogic.gdx.utils.Array.ArrayIterator)obj), ((Number)value).intValue()); return;
      case 3585: s3585(((com.badlogic.gdx.utils.Array.ArrayIterator)obj), ((Boolean)value).booleanValue()); return;
      case 3595: s3595(((com.badlogic.gdx.utils.ArrayMap)obj), ((java.lang.Object[])value)); return;
      case 3597: s3597(((com.badlogic.gdx.utils.ArrayMap)obj), ((java.lang.Object[])value)); return;
      case 3599: s3599(((com.badlogic.gdx.utils.ArrayMap)obj), ((Number)value).intValue()); return;
      case 3601: s3601(((com.badlogic.gdx.utils.ArrayMap)obj), ((Boolean)value).booleanValue()); return;
      case 3603: s3603(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Entries)value)); return;
      case 3605: s3605(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Entries)value)); return;
      case 3607: s3607(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Values)value)); return;
      case 3609: s3609(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Values)value)); return;
      case 3611: s3611(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Keys)value)); return;
      case 3613: s3613(((com.badlogic.gdx.utils.ArrayMap)obj), ((com.badlogic.gdx.utils.ArrayMap.Keys)value)); return;
      case 3658: s3658(((com.badlogic.gdx.utils.ArrayMap.Entries)obj), ((com.badlogic.gdx.utils.ObjectMap.Entry)value)); return;
      case 3660: s3660(((com.badlogic.gdx.utils.ArrayMap.Entries)obj), ((Number)value).intValue()); return;
      case 3662: s3662(((com.badlogic.gdx.utils.ArrayMap.Entries)obj), ((Boolean)value).booleanValue()); return;
      case 3673: s3673(((com.badlogic.gdx.utils.ArrayMap.Keys)obj), ((Number)value).intValue()); return;
      case 3675: s3675(((com.badlogic.gdx.utils.ArrayMap.Keys)obj), ((Boolean)value).booleanValue()); return;
      case 3687: s3687(((com.badlogic.gdx.utils.ArrayMap.Values)obj), ((Number)value).intValue()); return;
      case 3689: s3689(((com.badlogic.gdx.utils.ArrayMap.Values)obj), ((Boolean)value).booleanValue()); return;
      case 3706: s3706(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3708: s3708(((com.badlogic.gdx.utils.ObjectMap)obj), ((java.lang.Object[])value)); return;
      case 3710: s3710(((com.badlogic.gdx.utils.ObjectMap)obj), ((java.lang.Object[])value)); return;
      case 3712: s3712(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3714: s3714(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3716: s3716(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).floatValue()); return;
      case 3718: s3718(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3720: s3720(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3722: s3722(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3724: s3724(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3726: s3726(((com.badlogic.gdx.utils.ObjectMap)obj), ((Number)value).intValue()); return;
      case 3728: s3728(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Entries)value)); return;
      case 3730: s3730(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Entries)value)); return;
      case 3732: s3732(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Values)value)); return;
      case 3734: s3734(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Values)value)); return;
      case 3736: s3736(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Keys)value)); return;
      case 3738: s3738(((com.badlogic.gdx.utils.ObjectMap)obj), ((com.badlogic.gdx.utils.ObjectMap.Keys)value)); return;
      case 3773: s3773(((com.badlogic.gdx.utils.ObjectMap.Entries)obj), ((com.badlogic.gdx.utils.ObjectMap.Entry)value)); return;
      case 3780: s3780(((com.badlogic.gdx.utils.ObjectMap.Entry)obj), ((java.lang.Object)value)); return;
      case 3782: s3782(((com.badlogic.gdx.utils.ObjectMap.Entry)obj), ((java.lang.Object)value)); return;
  }
     throw new IllegalArgumentException("Missing setter-stub " + field.setter + " for field " + field.name);
  }
  public Object invoke(Method m, Object obj, Object[] params) {
      switch(m.methodId) {
      case 46: return m46((com.badlogic.gdx.graphics.Color)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 47: return m47((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 48: return m48((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).intValue());
      case 49: return m49((com.badlogic.gdx.graphics.Color)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 50: return m50((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue());
      case 51: return m51((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 52: return m52((com.badlogic.gdx.graphics.Color)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 53: return m53((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 54: return m54((com.badlogic.gdx.graphics.Color)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 55: return m55((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 56: return m56((com.badlogic.gdx.graphics.Color)obj);
      case 57: return m57((com.badlogic.gdx.graphics.Color)obj,((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).floatValue());
      case 58: return m58((com.badlogic.gdx.graphics.Color)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 59: return m59((com.badlogic.gdx.graphics.Color)obj);
      case 60: return m60((com.badlogic.gdx.graphics.Color)obj,((java.lang.Object)params[0]));
      case 61: return m61((com.badlogic.gdx.graphics.Color)obj);
      case 62: return m62((com.badlogic.gdx.graphics.Color)obj);
      case 63: return m63(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 64: return m64(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 65: return m65((com.badlogic.gdx.graphics.Color)obj);
      case 66: return m66(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 67: return m67((com.badlogic.gdx.graphics.Color)obj);
      case 68: return m68(((java.lang.String)params[0]));
      case 69: return m69(((Number)params[0]).floatValue());
      case 70: return m70(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 71: return m71(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 72: return m72(((com.badlogic.gdx.graphics.Color)params[0]));
      case 73: return m73(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 74: return m74(((com.badlogic.gdx.graphics.Color)params[0]));
      case 75: return m75(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 76: return m76(((com.badlogic.gdx.graphics.Color)params[0]));
      case 77: return m77(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 78: return m78(((com.badlogic.gdx.graphics.Color)params[0]));
      case 79: return m79(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).intValue());
      case 80: return m80(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).intValue());
      case 81: return m81(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).intValue());
      case 82: return m82(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).intValue());
      case 83: return m83((com.badlogic.gdx.graphics.Color)obj);
      case 84: return m84((com.badlogic.gdx.graphics.Color)obj);
      case 85: return m85();
      case 86: return m86(((Number)params[0]).intValue());
      case 87: return m87(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 88: return m88(((com.badlogic.gdx.graphics.Color)params[0]));
      case 96: return m96((com.badlogic.gdx.graphics.Texture)obj,((com.badlogic.gdx.graphics.TextureData)params[0]));
      case 97: return m97((com.badlogic.gdx.graphics.Texture)obj);
      case 98: return m98((com.badlogic.gdx.graphics.Texture)obj,((com.badlogic.gdx.graphics.Pixmap)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 99: return m99((com.badlogic.gdx.graphics.Texture)obj);
      case 100: return m100((com.badlogic.gdx.graphics.Texture)obj);
      case 101: return m101((com.badlogic.gdx.graphics.Texture)obj);
      case 102: return m102((com.badlogic.gdx.graphics.Texture)obj);
      case 103: return m103((com.badlogic.gdx.graphics.Texture)obj);
      case 104: return m104((com.badlogic.gdx.graphics.Texture)obj);
      case 105: return m105(((com.badlogic.gdx.Application)params[0]), ((com.badlogic.gdx.graphics.Texture)params[1]));
      case 106: return m106(((com.badlogic.gdx.Application)params[0]));
      case 107: return m107(((com.badlogic.gdx.Application)params[0]));
      case 108: return m108(((com.badlogic.gdx.assets.AssetManager)params[0]));
      case 109: return m109();
      case 110: return m110();
      case 111: return m111(((java.lang.String)params[0]));
      case 112: return m112(((com.badlogic.gdx.files.FileHandle)params[0]));
      case 113: return m113(((com.badlogic.gdx.files.FileHandle)params[0]), ((Boolean)params[1]).booleanValue());
      case 114: return m114(((com.badlogic.gdx.files.FileHandle)params[0]), ((com.badlogic.gdx.graphics.Pixmap.Format)params[1]), ((Boolean)params[2]).booleanValue());
      case 115: return m115(((com.badlogic.gdx.graphics.Pixmap)params[0]));
      case 116: return m116(((com.badlogic.gdx.graphics.Pixmap)params[0]), ((Boolean)params[1]).booleanValue());
      case 117: return m117(((com.badlogic.gdx.graphics.Pixmap)params[0]), ((com.badlogic.gdx.graphics.Pixmap.Format)params[1]), ((Boolean)params[2]).booleanValue());
      case 118: return m118(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((com.badlogic.gdx.graphics.Pixmap.Format)params[2]));
      case 119: return m119(((com.badlogic.gdx.graphics.TextureData)params[0]));
      case 137: return m137((com.badlogic.gdx.graphics.Texture.TextureFilter)obj);
      case 138: return m138((com.badlogic.gdx.graphics.Texture.TextureFilter)obj);
      case 139: return m139();
      case 140: return m140(((java.lang.String)params[0]));
      case 151: return m151((com.badlogic.gdx.graphics.Texture.TextureWrap)obj);
      case 152: return m152();
      case 153: return m153(((java.lang.String)params[0]));
      case 163: return m163();
      case 164: return m164(((java.lang.String)params[0]));
      case 179: return m179();
      case 180: return m180(((Number)params[0]).intValue());
      case 181: return m181();
      case 182: return m182();
      case 183: return m183();
      case 184: return m184();
      case 185: return m185();
      case 186: return m186(((Number)params[0]).intValue());
      case 187: return m187((com.badlogic.gdx.graphics.VertexAttribute)obj,((java.lang.Object)params[0]));
      case 188: return m188((com.badlogic.gdx.graphics.VertexAttribute)obj,((com.badlogic.gdx.graphics.VertexAttribute)params[0]));
      case 189: return m189((com.badlogic.gdx.graphics.VertexAttribute)obj);
      case 190: return m190(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((java.lang.String)params[2]));
      case 191: return m191(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((java.lang.String)params[2]), ((Number)params[3]).intValue());
      case 202: return m202((com.badlogic.gdx.graphics.VertexAttributes)obj,((Number)params[0]).intValue());
      case 203: return m203((com.badlogic.gdx.graphics.VertexAttributes)obj,((Number)params[0]).intValue());
      case 204: return m204((com.badlogic.gdx.graphics.VertexAttributes)obj);
      case 205: return m205((com.badlogic.gdx.graphics.VertexAttributes)obj);
      case 206: return m206((com.badlogic.gdx.graphics.VertexAttributes)obj);
      case 207: return m207((com.badlogic.gdx.graphics.VertexAttributes)obj,((Number)params[0]).intValue());
      case 208: return m208((com.badlogic.gdx.graphics.VertexAttributes)obj);
      case 209: return m209((com.badlogic.gdx.graphics.VertexAttributes)obj,((java.lang.Object)params[0]));
      case 211: return m211((com.badlogic.gdx.graphics.VertexAttributes)obj);
      case 212: return m212(((com.badlogic.gdx.graphics.VertexAttribute[])params[0]));
      case 232: return m232();
      case 256: return m256((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)params[0]));
      case 257: return m257((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 258: return m258((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).intValue(), ((Number)params[5]).intValue());
      case 259: return m259((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 260: return m260((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[5]));
      case 261: return m261((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 262: return m262((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((java.lang.CharSequence)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[5]));
      case 263: return m263((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]));
      case 264: return m264((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[1]));
      case 265: return m265((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 266: return m266((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[3]));
      case 267: return m267((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]));
      case 268: return m268((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[1]));
      case 269: return m269((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue());
      case 270: return m270((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[2]));
      case 271: return m271((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((com.badlogic.gdx.utils.FloatArray)params[1]), ((com.badlogic.gdx.utils.FloatArray)params[2]));
      case 272: return m272((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).floatValue());
      case 273: return m273((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).floatValue());
      case 274: return m274((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 275: return m275((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 276: return m276((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 277: return m277((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 278: return m278((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).floatValue());
      case 279: return m279((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).floatValue());
      case 280: return m280((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 281: return m281((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 282: return m282((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 283: return m283((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Number)params[0]).intValue());
      case 284: return m284((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 285: return m285((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 286: return m286((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 287: return m287((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 288: return m288((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 289: return m289((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 290: return m290((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 291: return m291((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 292: return m292((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 293: return m293((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((java.lang.CharSequence)params[0]));
      case 294: return m294((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Character)params[0]).charValue());
      case 295: return m295((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Boolean)params[0]).booleanValue());
      case 296: return m296((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 297: return m297((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 298: return m298((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 299: return m299((com.badlogic.gdx.graphics.g2d.BitmapFont)obj);
      case 300: return m300((com.badlogic.gdx.graphics.g2d.BitmapFont)obj,((Boolean)params[0]).booleanValue());
      case 301: return m301(((java.lang.CharSequence)params[0]), ((Character)params[1]).charValue(), ((Number)params[2]).intValue());
      case 302: return m302(((Character)params[0]).charValue());
      case 303: return m303();
      case 304: return m304(((Boolean)params[0]).booleanValue());
      case 305: return m305(((com.badlogic.gdx.files.FileHandle)params[0]), ((com.badlogic.gdx.graphics.g2d.TextureRegion)params[1]));
      case 306: return m306(((com.badlogic.gdx.files.FileHandle)params[0]), ((com.badlogic.gdx.graphics.g2d.TextureRegion)params[1]), ((Boolean)params[2]).booleanValue());
      case 307: return m307(((com.badlogic.gdx.files.FileHandle)params[0]));
      case 308: return m308(((com.badlogic.gdx.files.FileHandle)params[0]), ((Boolean)params[1]).booleanValue());
      case 309: return m309(((com.badlogic.gdx.files.FileHandle)params[0]), ((com.badlogic.gdx.files.FileHandle)params[1]), ((Boolean)params[2]).booleanValue());
      case 310: return m310(((com.badlogic.gdx.files.FileHandle)params[0]), ((com.badlogic.gdx.files.FileHandle)params[1]), ((Boolean)params[2]).booleanValue(), ((Boolean)params[3]).booleanValue());
      case 311: return m311(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)params[0]), ((com.badlogic.gdx.graphics.g2d.TextureRegion)params[1]), ((Boolean)params[2]).booleanValue());
      case 312: return m312(((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)params[0]), ((com.badlogic.gdx.graphics.g2d.TextureRegion[])params[1]), ((Boolean)params[2]).booleanValue());
      case 342: return m342((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj,((Number)params[0]).intValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)params[1]));
      case 343: return m343((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj);
      case 344: return m344((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj,((Character)params[0]).charValue());
      case 345: return m345((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj);
      case 346: return m346((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj,((Number)params[0]).intValue());
      case 347: return m347((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj);
      case 348: return m348((com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData)obj);
      case 349: return m349();
      case 350: return m350(((com.badlogic.gdx.files.FileHandle)params[0]), ((Boolean)params[1]).booleanValue());
      case 380: return m380((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj,((Character)params[0]).charValue());
      case 381: return m381((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 382: return m382();
      case 391: return m391();
      case 392: return m392(((java.lang.String)params[0]));
      case 399: return m399((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)obj,((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[0]));
      case 400: return m400();
      case 401: return m401(((com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds)params[0]));
      case 427: return m427((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 428: return m428((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 429: return m429((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue());
      case 430: return m430((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 431: return m431((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 432: return m432((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 433: return m433((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 434: return m434((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 435: return m435((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).floatValue());
      case 436: return m436((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 437: return m437((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]));
      case 438: return m438((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 439: return m439((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 440: return m440((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 441: return m441((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 442: return m442((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 443: return m443((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 444: return m444((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 445: return m445((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 446: return m446((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 447: return m447((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 448: return m448((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 449: return m449((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 450: return m450((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[4]));
      case 451: return m451((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 452: return m452((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[4]));
      case 453: return m453((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 454: return m454((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[4]));
      case 455: return m455((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 456: return m456((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((java.lang.CharSequence)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment)params[4]));
      case 457: return m457((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 458: return m458((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 459: return m459((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 460: return m460((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 461: return m461((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Boolean)params[0]).booleanValue());
      case 462: return m462((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 463: return m463((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj);
      case 464: return m464((com.badlogic.gdx.graphics.g2d.BitmapFontCache)obj,((Number)params[0]).intValue());
      case 465: return m465(((com.badlogic.gdx.graphics.g2d.BitmapFont)params[0]));
      case 466: return m466(((com.badlogic.gdx.graphics.g2d.BitmapFont)params[0]), ((Boolean)params[1]).booleanValue());
      case 534: return m534((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((com.badlogic.gdx.graphics.g2d.TextureRegion[])params[0]));
      case 535: return m535((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue(), ((Boolean)params[3]).booleanValue());
      case 536: return m536((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 537: return m537((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 538: return m538((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 539: return m539((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 540: return m540((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 541: return m541((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 542: return m542((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 543: return m543((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 544: return m544((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 545: return m545((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 546: return m546((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 547: return m547((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 548: return m548((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 549: return m549((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 550: return m550((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 551: return m551((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).floatValue());
      case 552: return m552((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 553: return m553((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 554: return m554((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 555: return m555((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 556: return m556((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue());
      case 557: return m557((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 558: return m558((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue());
      case 559: return m559((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 560: return m560((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue());
      case 561: return m561((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 562: return m562((com.badlogic.gdx.graphics.g2d.NinePatch)obj,((Number)params[0]).intValue());
      case 563: return m563((com.badlogic.gdx.graphics.g2d.NinePatch)obj);
      case 564: return m564(((com.badlogic.gdx.graphics.Texture)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 565: return m565(((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 566: return m566(((com.badlogic.gdx.graphics.Texture)params[0]), ((com.badlogic.gdx.graphics.Color)params[1]));
      case 567: return m567(((com.badlogic.gdx.graphics.Texture)params[0]));
      case 568: return m568(((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]), ((com.badlogic.gdx.graphics.Color)params[1]));
      case 569: return m569(((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]));
      case 570: return m570(((com.badlogic.gdx.graphics.g2d.TextureRegion[])params[0]));
      case 571: return m571(((com.badlogic.gdx.graphics.g2d.NinePatch)params[0]));
      case 572: return m572(((com.badlogic.gdx.graphics.g2d.NinePatch)params[0]), ((com.badlogic.gdx.graphics.Color)params[1]));
      case 588: return m588((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((com.badlogic.gdx.graphics.Texture)params[0]));
      case 589: return m589((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 590: return m590((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 591: return m591((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]));
      case 592: return m592((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 593: return m593((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 594: return m594((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((com.badlogic.gdx.graphics.Texture)params[0]));
      case 595: return m595((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 596: return m596((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue());
      case 597: return m597((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 598: return m598((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue());
      case 599: return m599((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 600: return m600((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue());
      case 601: return m601((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 602: return m602((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue());
      case 603: return m603((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 604: return m604((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue());
      case 605: return m605((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 606: return m606((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue());
      case 607: return m607((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 608: return m608((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue());
      case 609: return m609((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 610: return m610((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue());
      case 611: return m611((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Boolean)params[0]).booleanValue(), ((Boolean)params[1]).booleanValue());
      case 612: return m612((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 613: return m613((com.badlogic.gdx.graphics.g2d.TextureRegion)obj);
      case 614: return m614((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 615: return m615((com.badlogic.gdx.graphics.g2d.TextureRegion)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 616: return m616(((com.badlogic.gdx.graphics.Texture)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 617: return m617();
      case 618: return m618(((com.badlogic.gdx.graphics.Texture)params[0]));
      case 619: return m619(((com.badlogic.gdx.graphics.Texture)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 620: return m620(((com.badlogic.gdx.graphics.Texture)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 621: return m621(((com.badlogic.gdx.graphics.Texture)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 622: return m622(((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]));
      case 623: return m623(((com.badlogic.gdx.graphics.g2d.TextureRegion)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 633: return m633();
      case 645: return m645((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj,((com.badlogic.gdx.graphics.g3d.model.MeshPart)params[0]));
      case 646: return m646((com.badlogic.gdx.graphics.g3d.model.MeshPart)obj,((java.lang.Object)params[0]));
      case 647: return m647();
      case 648: return m648(((java.lang.String)params[0]), ((com.badlogic.gdx.graphics.Mesh)params[1]), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 649: return m649(((com.badlogic.gdx.graphics.g3d.model.MeshPart)params[0]));
      case 671: return m671((com.badlogic.gdx.graphics.g3d.model.Node)obj);
      case 672: return m672((com.badlogic.gdx.graphics.g3d.model.Node)obj);
      case 673: return m673((com.badlogic.gdx.graphics.g3d.model.Node)obj,((Boolean)params[0]).booleanValue());
      case 674: return m674((com.badlogic.gdx.graphics.g3d.model.Node)obj,((Boolean)params[0]).booleanValue());
      case 675: return m675((com.badlogic.gdx.graphics.g3d.model.Node)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 676: return m676((com.badlogic.gdx.graphics.g3d.model.Node)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]), ((Boolean)params[1]).booleanValue());
      case 677: return m677((com.badlogic.gdx.graphics.g3d.model.Node)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 678: return m678((com.badlogic.gdx.graphics.g3d.model.Node)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]), ((Boolean)params[1]).booleanValue());
      case 679: return m679((com.badlogic.gdx.graphics.g3d.model.Node)obj,((java.lang.String)params[0]), ((Boolean)params[1]).booleanValue(), ((Boolean)params[2]).booleanValue());
      case 680: return m680(((com.badlogic.gdx.utils.Array)params[0]), ((java.lang.String)params[1]), ((Boolean)params[2]).booleanValue(), ((Boolean)params[3]).booleanValue());
      case 681: return m681();
      case 687: return m687();
      case 697: return m697();
      case 707: return m707((com.badlogic.gdx.graphics.g3d.model.NodePart)obj,((com.badlogic.gdx.graphics.g3d.Renderable)params[0]));
      case 708: return m708();
      case 709: return m709(((com.badlogic.gdx.graphics.g3d.model.MeshPart)params[0]), ((com.badlogic.gdx.graphics.g3d.Material)params[1]));
      case 715: return m715();
      case 729: return m729((com.badlogic.gdx.graphics.g3d.model.data.ModelData)obj,((com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)params[0]));
      case 730: return m730();
      case 752: return m752();
      case 758: return m758();
      case 759: return m759(((java.lang.String)params[0]));
      case 770: return m770();
      case 778: return m778();
      case 797: return m797();
      case 803: return m803();
      case 813: return m813();
      case 823: return m823();
      case 859: return m859();
      case 875: return m875(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Boolean)params[3]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[4]));
      case 876: return m876(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 877: return m877(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Boolean)params[3]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[4]));
      case 878: return m878(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 879: return m879(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Number)params[3]).intValue(), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 880: return m880(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Number)params[4]).intValue(), ((Boolean)params[5]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[6]));
      case 881: return m881(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Number)params[3]).intValue(), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 882: return m882(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Number)params[4]).intValue(), ((Boolean)params[5]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[6]));
      case 883: return m883((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector[])params[0]), ((Number)params[1]).intValue(), ((Boolean)params[2]).booleanValue());
      case 884: return m884((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 885: return m885((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue());
      case 886: return m886((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 887: return m887((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue());
      case 888: return m888((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 889: return m889((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 890: return m890((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 891: return m891((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 892: return m892((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue());
      case 893: return m893((com.badlogic.gdx.math.BSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 894: return m894();
      case 895: return m895(((com.badlogic.gdx.math.Vector[])params[0]), ((Number)params[1]).intValue(), ((Boolean)params[2]).booleanValue());
      case 901: return m901(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]));
      case 902: return m902(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]));
      case 903: return m903(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]), ((com.badlogic.gdx.math.Vector)params[5]));
      case 904: return m904(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]), ((com.badlogic.gdx.math.Vector)params[5]));
      case 905: return m905(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]), ((com.badlogic.gdx.math.Vector)params[5]), ((com.badlogic.gdx.math.Vector)params[6]));
      case 906: return m906(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector)params[2]), ((com.badlogic.gdx.math.Vector)params[3]), ((com.badlogic.gdx.math.Vector)params[4]), ((com.badlogic.gdx.math.Vector)params[5]), ((com.badlogic.gdx.math.Vector)params[6]));
      case 907: return m907((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector[])params[0]));
      case 908: return m908((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 909: return m909((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.utils.Array)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 910: return m910((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 911: return m911((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 912: return m912((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 913: return m913((com.badlogic.gdx.math.Bezier)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 914: return m914();
      case 915: return m915(((com.badlogic.gdx.math.Vector[])params[0]));
      case 916: return m916(((com.badlogic.gdx.math.Vector[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 917: return m917(((com.badlogic.gdx.utils.Array)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 923: return m923((com.badlogic.gdx.math.Bresenham2)obj,((com.badlogic.gdx.math.GridPoint2)params[0]), ((com.badlogic.gdx.math.GridPoint2)params[1]));
      case 924: return m924((com.badlogic.gdx.math.Bresenham2)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 925: return m925((com.badlogic.gdx.math.Bresenham2)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.utils.Pool)params[4]), ((com.badlogic.gdx.utils.Array)params[5]));
      case 926: return m926();
      case 938: return m938(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Boolean)params[3]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[4]));
      case 939: return m939(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 940: return m940(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[2]), ((Boolean)params[3]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[4]));
      case 941: return m941(((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector[])params[3]), ((Boolean)params[4]).booleanValue(), ((com.badlogic.gdx.math.Vector)params[5]));
      case 942: return m942((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector[])params[0]), ((Boolean)params[1]).booleanValue());
      case 943: return m943((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 944: return m944((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue());
      case 945: return m945((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).floatValue());
      case 946: return m946((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).floatValue());
      case 947: return m947((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 948: return m948((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 949: return m949((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 950: return m950((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 951: return m951((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]), ((Number)params[1]).intValue());
      case 952: return m952((com.badlogic.gdx.math.CatmullRomSpline)obj,((com.badlogic.gdx.math.Vector)params[0]));
      case 953: return m953();
      case 954: return m954(((com.badlogic.gdx.math.Vector[])params[0]), ((Boolean)params[1]).booleanValue());
      case 962: return m962((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 963: return m963((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 964: return m964((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Circle)params[0]));
      case 965: return m965((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 966: return m966((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 967: return m967((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue());
      case 968: return m968((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue());
      case 969: return m969((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue());
      case 970: return m970((com.badlogic.gdx.math.Circle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 971: return m971((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 972: return m972((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Circle)params[0]));
      case 973: return m973((com.badlogic.gdx.math.Circle)obj,((com.badlogic.gdx.math.Circle)params[0]));
      case 974: return m974((com.badlogic.gdx.math.Circle)obj);
      case 975: return m975();
      case 976: return m976(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 977: return m977(((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 978: return m978(((com.badlogic.gdx.math.Circle)params[0]));
      case 990: return m990((com.badlogic.gdx.math.ConvexHull)obj,((com.badlogic.gdx.utils.FloatArray)params[0]), ((Boolean)params[1]).booleanValue(), ((Boolean)params[2]).booleanValue());
      case 991: return m991((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Boolean)params[1]).booleanValue(), ((Boolean)params[2]).booleanValue());
      case 992: return m992((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Boolean)params[3]).booleanValue(), ((Boolean)params[4]).booleanValue());
      case 993: return m993((com.badlogic.gdx.math.ConvexHull)obj,((com.badlogic.gdx.utils.FloatArray)params[0]), ((Boolean)params[1]).booleanValue(), ((Boolean)params[2]).booleanValue());
      case 994: return m994((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Boolean)params[1]).booleanValue(), ((Boolean)params[2]).booleanValue());
      case 995: return m995((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Boolean)params[3]).booleanValue(), ((Boolean)params[4]).booleanValue());
      case 996: return m996((com.badlogic.gdx.math.ConvexHull)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 997: return m997((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Boolean)params[2]).booleanValue());
      case 998: return m998((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Boolean)params[3]).booleanValue());
      case 999: return m999((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Boolean)params[2]).booleanValue());
      case 1000: return m1000((com.badlogic.gdx.math.ConvexHull)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Boolean)params[3]).booleanValue(), ((short[])params[4]));
      case 1001: return m1001();
      case 1027: return m1027((com.badlogic.gdx.math.DelaunayTriangulator)obj,((com.badlogic.gdx.utils.FloatArray)params[0]), ((Boolean)params[1]).booleanValue());
      case 1028: return m1028((com.badlogic.gdx.math.DelaunayTriangulator)obj,((float[])params[0]), ((Boolean)params[1]).booleanValue());
      case 1029: return m1029((com.badlogic.gdx.math.DelaunayTriangulator)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Boolean)params[3]).booleanValue());
      case 1030: return m1030((com.badlogic.gdx.math.DelaunayTriangulator)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue());
      case 1031: return m1031((com.badlogic.gdx.math.DelaunayTriangulator)obj,((float[])params[0]), ((Number)params[1]).intValue());
      case 1032: return m1032((com.badlogic.gdx.math.DelaunayTriangulator)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((short[])params[3]));
      case 1033: return m1033((com.badlogic.gdx.math.DelaunayTriangulator)obj,((com.badlogic.gdx.utils.ShortArray)params[0]), ((float[])params[1]), ((float[])params[2]), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 1034: return m1034();
      case 1054: return m1054((com.badlogic.gdx.math.EarClippingTriangulator)obj,((com.badlogic.gdx.utils.FloatArray)params[0]));
      case 1055: return m1055((com.badlogic.gdx.math.EarClippingTriangulator)obj,((float[])params[0]));
      case 1056: return m1056((com.badlogic.gdx.math.EarClippingTriangulator)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1057: return m1057((com.badlogic.gdx.math.EarClippingTriangulator)obj);
      case 1058: return m1058((com.badlogic.gdx.math.EarClippingTriangulator)obj,((Number)params[0]).intValue());
      case 1059: return m1059((com.badlogic.gdx.math.EarClippingTriangulator)obj);
      case 1060: return m1060((com.badlogic.gdx.math.EarClippingTriangulator)obj,((Number)params[0]).intValue());
      case 1061: return m1061((com.badlogic.gdx.math.EarClippingTriangulator)obj,((Number)params[0]).intValue());
      case 1062: return m1062((com.badlogic.gdx.math.EarClippingTriangulator)obj,((Number)params[0]).intValue());
      case 1063: return m1063((com.badlogic.gdx.math.EarClippingTriangulator)obj,((Number)params[0]).intValue());
      case 1064: return m1064(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1065: return m1065(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1066: return m1066();
      case 1078: return m1078((com.badlogic.gdx.math.Ellipse)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1079: return m1079((com.badlogic.gdx.math.Ellipse)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1080: return m1080((com.badlogic.gdx.math.Ellipse)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1081: return m1081((com.badlogic.gdx.math.Ellipse)obj,((com.badlogic.gdx.math.Ellipse)params[0]));
      case 1082: return m1082((com.badlogic.gdx.math.Ellipse)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1083: return m1083((com.badlogic.gdx.math.Ellipse)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1084: return m1084((com.badlogic.gdx.math.Ellipse)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1085: return m1085();
      case 1086: return m1086(((com.badlogic.gdx.math.Ellipse)params[0]));
      case 1087: return m1087(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1088: return m1088(((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1106: return m1106((com.badlogic.gdx.math.FloatCounter)obj,((Number)params[0]).floatValue());
      case 1107: return m1107((com.badlogic.gdx.math.FloatCounter)obj);
      case 1108: return m1108(((Number)params[0]).intValue());
      case 1120: return m1120((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1121: return m1121((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1122: return m1122((com.badlogic.gdx.math.Frustum)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1123: return m1123((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1124: return m1124((com.badlogic.gdx.math.Frustum)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1125: return m1125((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1126: return m1126((com.badlogic.gdx.math.Frustum)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1127: return m1127((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 1128: return m1128((com.badlogic.gdx.math.Frustum)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1129: return m1129((com.badlogic.gdx.math.Frustum)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1130: return m1130();
      case 1138: return m1138(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1139: return m1139(((com.badlogic.gdx.math.Vector2)params[0]));
      case 1140: return m1140(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1141: return m1141(((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1142: return m1142(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1143: return m1143(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[6]));
      case 1144: return m1144(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1145: return m1145(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[8]));
      case 1146: return m1146(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((com.badlogic.gdx.math.Vector2)params[3]));
      case 1147: return m1147(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1148: return m1148();
      case 1154: return m1154((com.badlogic.gdx.math.GridPoint2)obj,((com.badlogic.gdx.math.GridPoint2)params[0]));
      case 1155: return m1155((com.badlogic.gdx.math.GridPoint2)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 1156: return m1156();
      case 1157: return m1157(((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 1158: return m1158(((com.badlogic.gdx.math.GridPoint2)params[0]));
      case 1166: return m1166((com.badlogic.gdx.math.GridPoint3)obj,((com.badlogic.gdx.math.GridPoint3)params[0]));
      case 1167: return m1167((com.badlogic.gdx.math.GridPoint3)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1168: return m1168();
      case 1169: return m1169(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1170: return m1170(((com.badlogic.gdx.math.GridPoint3)params[0]));
      case 1242: return m1242((com.badlogic.gdx.math.Interpolation)obj,((Number)params[0]).floatValue());
      case 1243: return m1243((com.badlogic.gdx.math.Interpolation)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1245: return m1245((com.badlogic.gdx.math.Interpolation.Bounce)obj,((Number)params[0]).floatValue());
      case 1246: return m1246((com.badlogic.gdx.math.Interpolation.Bounce)obj,((Number)params[0]).floatValue());
      case 1247: return m1247(((float[])params[0]), ((float[])params[1]));
      case 1248: return m1248(((Number)params[0]).intValue());
      case 1250: return m1250((com.badlogic.gdx.math.Interpolation.BounceIn)obj,((Number)params[0]).floatValue());
      case 1251: return m1251(((float[])params[0]), ((float[])params[1]));
      case 1252: return m1252(((Number)params[0]).intValue());
      case 1258: return m1258((com.badlogic.gdx.math.Interpolation.BounceOut)obj,((Number)params[0]).floatValue());
      case 1259: return m1259(((float[])params[0]), ((float[])params[1]));
      case 1260: return m1260(((Number)params[0]).intValue());
      case 1266: return m1266((com.badlogic.gdx.math.Interpolation.Elastic)obj,((Number)params[0]).floatValue());
      case 1267: return m1267(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1269: return m1269((com.badlogic.gdx.math.Interpolation.ElasticIn)obj,((Number)params[0]).floatValue());
      case 1270: return m1270(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1272: return m1272((com.badlogic.gdx.math.Interpolation.ElasticOut)obj,((Number)params[0]).floatValue());
      case 1273: return m1273(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1283: return m1283((com.badlogic.gdx.math.Interpolation.Exp)obj,((Number)params[0]).floatValue());
      case 1284: return m1284(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1286: return m1286((com.badlogic.gdx.math.Interpolation.ExpIn)obj,((Number)params[0]).floatValue());
      case 1287: return m1287(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1289: return m1289((com.badlogic.gdx.math.Interpolation.ExpOut)obj,((Number)params[0]).floatValue());
      case 1290: return m1290(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1294: return m1294((com.badlogic.gdx.math.Interpolation.Pow)obj,((Number)params[0]).floatValue());
      case 1295: return m1295(((Number)params[0]).intValue());
      case 1297: return m1297((com.badlogic.gdx.math.Interpolation.PowIn)obj,((Number)params[0]).floatValue());
      case 1298: return m1298(((Number)params[0]).intValue());
      case 1300: return m1300((com.badlogic.gdx.math.Interpolation.PowOut)obj,((Number)params[0]).floatValue());
      case 1301: return m1301(((Number)params[0]).intValue());
      case 1305: return m1305((com.badlogic.gdx.math.Interpolation.Swing)obj,((Number)params[0]).floatValue());
      case 1306: return m1306(((Number)params[0]).floatValue());
      case 1310: return m1310((com.badlogic.gdx.math.Interpolation.SwingIn)obj,((Number)params[0]).floatValue());
      case 1311: return m1311(((Number)params[0]).floatValue());
      case 1315: return m1315((com.badlogic.gdx.math.Interpolation.SwingOut)obj,((Number)params[0]).floatValue());
      case 1316: return m1316(((Number)params[0]).floatValue());
      case 1346: return m1346(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]), ((com.badlogic.gdx.math.Vector3)params[3]));
      case 1347: return m1347(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]));
      case 1348: return m1348(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue());
      case 1349: return m1349(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Plane)params[2]), ((com.badlogic.gdx.math.Vector3)params[3]));
      case 1350: return m1350(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]));
      case 1351: return m1351(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1352: return m1352(((com.badlogic.gdx.utils.Array)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]));
      case 1353: return m1353(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 1354: return m1354(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]));
      case 1355: return m1355(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1356: return m1356(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1357: return m1357(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]));
      case 1358: return m1358(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]));
      case 1359: return m1359(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[6]));
      case 1360: return m1360(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((Number)params[3]).floatValue());
      case 1361: return m1361(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((Number)params[3]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1362: return m1362(((com.badlogic.gdx.math.collision.Ray)params[0]), ((com.badlogic.gdx.math.Plane)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1363: return m1363(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((com.badlogic.gdx.math.Plane)params[6]), ((com.badlogic.gdx.math.Vector3)params[7]));
      case 1364: return m1364(((com.badlogic.gdx.math.collision.Ray)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]), ((com.badlogic.gdx.math.Vector3)params[3]), ((com.badlogic.gdx.math.Vector3)params[4]));
      case 1365: return m1365(((com.badlogic.gdx.math.collision.Ray)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Vector3)params[3]));
      case 1366: return m1366(((com.badlogic.gdx.math.collision.Ray)params[0]), ((com.badlogic.gdx.math.collision.BoundingBox)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1367: return m1367(((com.badlogic.gdx.math.collision.Ray)params[0]), ((com.badlogic.gdx.math.collision.BoundingBox)params[1]));
      case 1368: return m1368(((com.badlogic.gdx.math.collision.Ray)params[0]), ((float[])params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1369: return m1369(((com.badlogic.gdx.math.collision.Ray)params[0]), ((float[])params[1]), ((short[])params[2]), ((Number)params[3]).intValue(), ((com.badlogic.gdx.math.Vector3)params[4]));
      case 1370: return m1370(((com.badlogic.gdx.math.collision.Ray)params[0]), ((java.util.List)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1371: return m1371(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1372: return m1372(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[8]));
      case 1373: return m1373(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Polygon)params[2]));
      case 1374: return m1374(((com.badlogic.gdx.math.Rectangle)params[0]), ((com.badlogic.gdx.math.Rectangle)params[1]), ((com.badlogic.gdx.math.Rectangle)params[2]));
      case 1375: return m1375(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Polygon)params[2]));
      case 1376: return m1376(((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 1377: return m1377(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((com.badlogic.gdx.math.Vector2)params[8]));
      case 1378: return m1378(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1379: return m1379(((Number)params[0]).doubleValue(), ((Number)params[1]).doubleValue(), ((Number)params[2]).doubleValue(), ((Number)params[3]).doubleValue());
      case 1380: return m1380(((com.badlogic.gdx.math.Circle)params[0]), ((com.badlogic.gdx.math.Circle)params[1]));
      case 1381: return m1381(((com.badlogic.gdx.math.Rectangle)params[0]), ((com.badlogic.gdx.math.Rectangle)params[1]));
      case 1382: return m1382(((com.badlogic.gdx.math.Circle)params[0]), ((com.badlogic.gdx.math.Rectangle)params[1]));
      case 1383: return m1383(((com.badlogic.gdx.math.Polygon)params[0]), ((com.badlogic.gdx.math.Polygon)params[1]));
      case 1384: return m1384(((com.badlogic.gdx.math.Polygon)params[0]), ((com.badlogic.gdx.math.Polygon)params[1]), ((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)params[2]));
      case 1385: return m1385(((float[])params[0]), ((float[])params[1]), ((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)params[2]));
      case 1386: return m1386(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((float[])params[3]), ((Number)params[4]).intValue(), ((Number)params[5]).intValue(), ((com.badlogic.gdx.math.Intersector.MinimumTranslationVector)params[6]));
      case 1387: return m1387(((float[])params[0]), ((com.badlogic.gdx.math.Plane)params[1]), ((com.badlogic.gdx.math.Intersector.SplitTriangle)params[2]));
      case 1388: return m1388(((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.math.Plane)params[4]), ((float[])params[5]), ((Number)params[6]).intValue());
      case 1389: return m1389(((java.lang.String[])params[0]));
      case 1390: return m1390();
      case 1396: return m1396();
      case 1416: return m1416((com.badlogic.gdx.math.Intersector.SplitTriangle)obj);
      case 1417: return m1417((com.badlogic.gdx.math.Intersector.SplitTriangle)obj,((Boolean)params[0]).booleanValue());
      case 1418: return m1418((com.badlogic.gdx.math.Intersector.SplitTriangle)obj);
      case 1419: return m1419((com.badlogic.gdx.math.Intersector.SplitTriangle)obj,((float[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1420: return m1420((com.badlogic.gdx.math.Intersector.SplitTriangle)obj);
      case 1421: return m1421(((Number)params[0]).intValue());
      case 1477: return m1477(((Number)params[0]).floatValue());
      case 1478: return m1478(((Number)params[0]).floatValue());
      case 1479: return m1479(((Number)params[0]).floatValue());
      case 1480: return m1480(((Number)params[0]).floatValue());
      case 1481: return m1481(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1482: return m1482(((Number)params[0]).intValue());
      case 1483: return m1483(((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 1484: return m1484();
      case 1485: return m1485(((Number)params[0]).floatValue());
      case 1486: return m1486(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1487: return m1487();
      case 1488: return m1488(((Number)params[0]).floatValue());
      case 1489: return m1489(((Number)params[0]).intValue());
      case 1490: return m1490(((Number)params[0]).intValue());
      case 1491: return m1491(((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 1492: return m1492(((Number)params[0]).shortValue(), ((Number)params[1]).shortValue(), ((Number)params[2]).shortValue());
      case 1493: return m1493(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1494: return m1494(((Number)params[0]).floatValue());
      case 1495: return m1495(((Number)params[0]).floatValue());
      case 1496: return m1496(((Number)params[0]).floatValue());
      case 1497: return m1497(((Number)params[0]).floatValue());
      case 1498: return m1498(((Number)params[0]).floatValue());
      case 1499: return m1499(((Number)params[0]).floatValue());
      case 1500: return m1500();
      case 1526: return m1526((com.badlogic.gdx.math.Matrix3)obj);
      case 1527: return m1527((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1528: return m1528(((float[])params[0]), ((float[])params[1]));
      case 1529: return m1529((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue());
      case 1530: return m1530((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue());
      case 1531: return m1531((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1532: return m1532((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1533: return m1533((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1534: return m1534((com.badlogic.gdx.math.Matrix3)obj);
      case 1535: return m1535((com.badlogic.gdx.math.Matrix3)obj);
      case 1536: return m1536((com.badlogic.gdx.math.Matrix3)obj);
      case 1537: return m1537((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1538: return m1538((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1539: return m1539((com.badlogic.gdx.math.Matrix3)obj,((float[])params[0]));
      case 1540: return m1540((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1541: return m1541((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1542: return m1542((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1543: return m1543((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1544: return m1544((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1545: return m1545((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue());
      case 1546: return m1546((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue());
      case 1547: return m1547((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1548: return m1548((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1549: return m1549((com.badlogic.gdx.math.Matrix3)obj);
      case 1550: return m1550((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1551: return m1551((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1552: return m1552((com.badlogic.gdx.math.Matrix3)obj);
      case 1553: return m1553((com.badlogic.gdx.math.Matrix3)obj);
      case 1554: return m1554((com.badlogic.gdx.math.Matrix3)obj,((Number)params[0]).floatValue());
      case 1555: return m1555((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1556: return m1556((com.badlogic.gdx.math.Matrix3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1557: return m1557((com.badlogic.gdx.math.Matrix3)obj);
      case 1558: return m1558();
      case 1559: return m1559(((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1560: return m1560(((float[])params[0]));
      case 1618: return m1618((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1619: return m1619((com.badlogic.gdx.math.Matrix4)obj,((float[])params[0]));
      case 1620: return m1620((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1621: return m1621((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1622: return m1622((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Quaternion)params[1]));
      case 1623: return m1623((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue());
      case 1624: return m1624((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]), ((com.badlogic.gdx.math.Vector3)params[3]));
      case 1625: return m1625((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Quaternion)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1626: return m1626((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1627: return m1627((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((Number)params[8]).floatValue(), ((Number)params[9]).floatValue());
      case 1628: return m1628((com.badlogic.gdx.math.Matrix4)obj);
      case 1629: return m1629((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1630: return m1630((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1631: return m1631((com.badlogic.gdx.math.Matrix4)obj);
      case 1632: return m1632((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1633: return m1633(((float[])params[0]), ((float[])params[1]));
      case 1634: return m1634((com.badlogic.gdx.math.Matrix4)obj);
      case 1635: return m1635((com.badlogic.gdx.math.Matrix4)obj);
      case 1636: return m1636((com.badlogic.gdx.math.Matrix4)obj);
      case 1637: return m1637(((float[])params[0]));
      case 1638: return m1638((com.badlogic.gdx.math.Matrix4)obj);
      case 1639: return m1639(((float[])params[0]));
      case 1640: return m1640((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1641: return m1641((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1642: return m1642((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1643: return m1643((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1644: return m1644((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1645: return m1645((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1646: return m1646((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1647: return m1647((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1648: return m1648((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1649: return m1649((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1650: return m1650((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1651: return m1651((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1652: return m1652((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1653: return m1653((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1654: return m1654((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1655: return m1655((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1656: return m1656((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1657: return m1657((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1658: return m1658((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1659: return m1659((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1660: return m1660((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1661: return m1661((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1662: return m1662((com.badlogic.gdx.math.Matrix4)obj);
      case 1663: return m1663((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Matrix4)params[0]), ((Number)params[1]).floatValue());
      case 1664: return m1664((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1665: return m1665((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1666: return m1666((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue());
      case 1667: return m1667((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1668: return m1668((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Quaternion)params[0]), ((Boolean)params[1]).booleanValue());
      case 1669: return m1669((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1670: return m1670((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1671: return m1671((com.badlogic.gdx.math.Matrix4)obj);
      case 1672: return m1672(((float[])params[0]), ((float[])params[1]));
      case 1673: return m1673(((float[])params[0]));
      case 1674: return m1674(((float[])params[0]));
      case 1675: return m1675(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue());
      case 1676: return m1676(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue());
      case 1677: return m1677(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue());
      case 1678: return m1678(((float[])params[0]), ((float[])params[1]));
      case 1679: return m1679(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 1680: return m1680(((float[])params[0]), ((float[])params[1]));
      case 1681: return m1681(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 1682: return m1682(((float[])params[0]), ((float[])params[1]));
      case 1683: return m1683(((float[])params[0]), ((float[])params[1]), ((Number)params[2]).intValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 1684: return m1684((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1685: return m1685((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1686: return m1686((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1687: return m1687((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1688: return m1688((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1689: return m1689((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1690: return m1690((com.badlogic.gdx.math.Matrix4)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1691: return m1691((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1692: return m1692((com.badlogic.gdx.math.Matrix4)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1693: return m1693();
      case 1694: return m1694(((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1695: return m1695(((float[])params[0]));
      case 1696: return m1696(((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1697: return m1697(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Quaternion)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1707: return m1707((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1708: return m1708((com.badlogic.gdx.math.Plane)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1709: return m1709((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1710: return m1710((com.badlogic.gdx.math.Plane)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1711: return m1711((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Plane)params[0]));
      case 1712: return m1712((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1713: return m1713((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1714: return m1714((com.badlogic.gdx.math.Plane)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1715: return m1715((com.badlogic.gdx.math.Plane)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1716: return m1716((com.badlogic.gdx.math.Plane)obj);
      case 1717: return m1717((com.badlogic.gdx.math.Plane)obj);
      case 1718: return m1718((com.badlogic.gdx.math.Plane)obj);
      case 1719: return m1719(((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1720: return m1720(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1721: return m1721(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]), ((com.badlogic.gdx.math.Vector3)params[2]));
      case 1729: return m1729();
      case 1730: return m1730(((java.lang.String)params[0]));
      case 1756: return m1756((com.badlogic.gdx.math.Polygon)obj);
      case 1757: return m1757((com.badlogic.gdx.math.Polygon)obj);
      case 1758: return m1758((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1759: return m1759((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1760: return m1760((com.badlogic.gdx.math.Polygon)obj,((float[])params[0]));
      case 1761: return m1761((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1762: return m1762((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue());
      case 1763: return m1763((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue());
      case 1764: return m1764((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1765: return m1765((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue());
      case 1766: return m1766((com.badlogic.gdx.math.Polygon)obj);
      case 1767: return m1767((com.badlogic.gdx.math.Polygon)obj);
      case 1768: return m1768((com.badlogic.gdx.math.Polygon)obj);
      case 1769: return m1769((com.badlogic.gdx.math.Polygon)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1770: return m1770((com.badlogic.gdx.math.Polygon)obj);
      case 1771: return m1771((com.badlogic.gdx.math.Polygon)obj);
      case 1772: return m1772((com.badlogic.gdx.math.Polygon)obj);
      case 1773: return m1773((com.badlogic.gdx.math.Polygon)obj);
      case 1774: return m1774((com.badlogic.gdx.math.Polygon)obj);
      case 1775: return m1775((com.badlogic.gdx.math.Polygon)obj);
      case 1776: return m1776((com.badlogic.gdx.math.Polygon)obj);
      case 1777: return m1777();
      case 1778: return m1778(((float[])params[0]));
      case 1808: return m1808((com.badlogic.gdx.math.Polyline)obj);
      case 1809: return m1809((com.badlogic.gdx.math.Polyline)obj);
      case 1810: return m1810((com.badlogic.gdx.math.Polyline)obj);
      case 1811: return m1811((com.badlogic.gdx.math.Polyline)obj);
      case 1812: return m1812((com.badlogic.gdx.math.Polyline)obj);
      case 1813: return m1813((com.badlogic.gdx.math.Polyline)obj);
      case 1814: return m1814((com.badlogic.gdx.math.Polyline)obj);
      case 1815: return m1815((com.badlogic.gdx.math.Polyline)obj);
      case 1816: return m1816((com.badlogic.gdx.math.Polyline)obj);
      case 1817: return m1817((com.badlogic.gdx.math.Polyline)obj);
      case 1818: return m1818((com.badlogic.gdx.math.Polyline)obj);
      case 1819: return m1819((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1820: return m1820((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1821: return m1821((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue());
      case 1822: return m1822((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue());
      case 1823: return m1823((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1824: return m1824((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue());
      case 1825: return m1825((com.badlogic.gdx.math.Polyline)obj);
      case 1826: return m1826((com.badlogic.gdx.math.Polyline)obj);
      case 1827: return m1827((com.badlogic.gdx.math.Polyline)obj);
      case 1828: return m1828((com.badlogic.gdx.math.Polyline)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1829: return m1829();
      case 1830: return m1830(((float[])params[0]));
      case 1848: return m1848((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1849: return m1849((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1850: return m1850((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1851: return m1851((com.badlogic.gdx.math.Quaternion)obj);
      case 1852: return m1852((com.badlogic.gdx.math.Quaternion)obj);
      case 1853: return m1853((com.badlogic.gdx.math.Quaternion)obj);
      case 1854: return m1854((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1855: return m1855((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1856: return m1856((com.badlogic.gdx.math.Quaternion)obj);
      case 1857: return m1857((com.badlogic.gdx.math.Quaternion)obj);
      case 1858: return m1858((com.badlogic.gdx.math.Quaternion)obj);
      case 1859: return m1859((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1860: return m1860((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1861: return m1861((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue());
      case 1862: return m1862((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1863: return m1863((com.badlogic.gdx.math.Quaternion)obj,((float[])params[0]));
      case 1864: return m1864((com.badlogic.gdx.math.Quaternion)obj);
      case 1865: return m1865((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1866: return m1866((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1867: return m1867((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1868: return m1868((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1869: return m1869((com.badlogic.gdx.math.Quaternion)obj,((Boolean)params[0]).booleanValue(), ((com.badlogic.gdx.math.Matrix4)params[1]));
      case 1870: return m1870((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 1871: return m1871((com.badlogic.gdx.math.Quaternion)obj,((Boolean)params[0]).booleanValue(), ((com.badlogic.gdx.math.Matrix3)params[1]));
      case 1872: return m1872((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1873: return m1873((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((Number)params[8]).floatValue());
      case 1874: return m1874((com.badlogic.gdx.math.Quaternion)obj,((Boolean)params[0]).booleanValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue(), ((Number)params[7]).floatValue(), ((Number)params[8]).floatValue(), ((Number)params[9]).floatValue());
      case 1875: return m1875((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 1876: return m1876((com.badlogic.gdx.math.Quaternion)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 1877: return m1877((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Quaternion)params[0]), ((Number)params[1]).floatValue());
      case 1878: return m1878((com.badlogic.gdx.math.Quaternion)obj,((java.lang.Object)params[0]));
      case 1879: return m1879((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1880: return m1880((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1881: return m1881((com.badlogic.gdx.math.Quaternion)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 1882: return m1882(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1883: return m1883();
      case 1884: return m1884(((com.badlogic.gdx.math.Quaternion)params[0]));
      case 1885: return m1885(((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 1901: return m1901((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1902: return m1902((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1903: return m1903((com.badlogic.gdx.math.Rectangle)obj);
      case 1904: return m1904((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue());
      case 1905: return m1905((com.badlogic.gdx.math.Rectangle)obj);
      case 1906: return m1906((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue());
      case 1907: return m1907((com.badlogic.gdx.math.Rectangle)obj);
      case 1908: return m1908((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue());
      case 1909: return m1909((com.badlogic.gdx.math.Rectangle)obj);
      case 1910: return m1910((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue());
      case 1911: return m1911((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1912: return m1912((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1913: return m1913((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1914: return m1914((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1915: return m1915((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue());
      case 1916: return m1916((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1917: return m1917((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1918: return m1918((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1919: return m1919((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1920: return m1920((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1921: return m1921((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1922: return m1922((com.badlogic.gdx.math.Rectangle)obj);
      case 1923: return m1923((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1924: return m1924((com.badlogic.gdx.math.Rectangle)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1925: return m1925((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1926: return m1926((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1927: return m1927((com.badlogic.gdx.math.Rectangle)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1928: return m1928((com.badlogic.gdx.math.Rectangle)obj);
      case 1929: return m1929();
      case 1930: return m1930(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 1931: return m1931(((com.badlogic.gdx.math.Rectangle)params[0]));
      case 1946: return m1946((com.badlogic.gdx.math.Vector2)obj);
      case 1947: return m1947((com.badlogic.gdx.math.Vector2)obj);
      case 1948: return m1948((com.badlogic.gdx.math.Vector2)obj);
      case 1949: return m1949((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1950: return m1950((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1951: return m1951((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1952: return m1952((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1953: return m1953((com.badlogic.gdx.math.Vector2)obj);
      case 1954: return m1954((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1955: return m1955((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1956: return m1956((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1957: return m1957((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1958: return m1958((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1959: return m1959((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1960: return m1960((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1961: return m1961((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1962: return m1962((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1963: return m1963((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Matrix3)params[0]));
      case 1964: return m1964((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1965: return m1965((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1966: return m1966((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1967: return m1967((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1968: return m1968((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1969: return m1969((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1970: return m1970((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1971: return m1971((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1972: return m1972((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1973: return m1973((com.badlogic.gdx.math.Vector2)obj);
      case 1974: return m1974((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 1975: return m1975((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1976: return m1976((com.badlogic.gdx.math.Vector2)obj);
      case 1977: return m1977((com.badlogic.gdx.math.Vector2)obj);
      case 1978: return m1978((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1979: return m1979((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1980: return m1980((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1981: return m1981((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1982: return m1982((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).intValue());
      case 1983: return m1983((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 1984: return m1984((com.badlogic.gdx.math.Vector2)obj);
      case 1985: return m1985((com.badlogic.gdx.math.Vector2)obj,((java.lang.Object)params[0]));
      case 1986: return m1986((com.badlogic.gdx.math.Vector2)obj,((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 1987: return m1987((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 1988: return m1988((com.badlogic.gdx.math.Vector2)obj);
      case 1989: return m1989((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1990: return m1990((com.badlogic.gdx.math.Vector2)obj);
      case 1991: return m1991((com.badlogic.gdx.math.Vector2)obj,((Number)params[0]).floatValue());
      case 1992: return m1992();
      case 1993: return m1993(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 1994: return m1994(((com.badlogic.gdx.math.Vector2)params[0]));
      case 2020: return m2020((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2021: return m2021((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2022: return m2022((com.badlogic.gdx.math.Vector3)obj,((float[])params[0]));
      case 2023: return m2023((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 2024: return m2024((com.badlogic.gdx.math.Vector3)obj);
      case 2025: return m2025((com.badlogic.gdx.math.Vector3)obj);
      case 2026: return m2026((com.badlogic.gdx.math.Vector3)obj);
      case 2027: return m2027((com.badlogic.gdx.math.Vector3)obj);
      case 2028: return m2028((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2029: return m2029((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2030: return m2030((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2031: return m2031((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2032: return m2032((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2033: return m2033((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2034: return m2034((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2035: return m2035((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2036: return m2036((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2037: return m2037((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2038: return m2038((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2039: return m2039((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2040: return m2040((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 2041: return m2041((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Quaternion)params[0]));
      case 2042: return m2042((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2043: return m2043((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2044: return m2044((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2045: return m2045((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2046: return m2046(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2047: return m2047((com.badlogic.gdx.math.Vector3)obj);
      case 2048: return m2048(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2049: return m2049((com.badlogic.gdx.math.Vector3)obj);
      case 2050: return m2050((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2051: return m2051(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 2052: return m2052((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2053: return m2053((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2054: return m2054(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 2055: return m2055((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2056: return m2056((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2057: return m2057((com.badlogic.gdx.math.Vector3)obj);
      case 2058: return m2058(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 2059: return m2059((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2060: return m2060((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2061: return m2061((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2062: return m2062((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2063: return m2063((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 2064: return m2064((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 2065: return m2065((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2066: return m2066((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2067: return m2067((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2068: return m2068((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2069: return m2069((com.badlogic.gdx.math.Vector3)obj);
      case 2070: return m2070((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2071: return m2071((com.badlogic.gdx.math.Vector3)obj);
      case 2072: return m2072((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2073: return m2073((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2074: return m2074((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2075: return m2075((com.badlogic.gdx.math.Vector3)obj);
      case 2076: return m2076((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue());
      case 2077: return m2077((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2078: return m2078((com.badlogic.gdx.math.Vector3)obj);
      case 2079: return m2079((com.badlogic.gdx.math.Vector3)obj,((java.lang.Object)params[0]));
      case 2080: return m2080((com.badlogic.gdx.math.Vector3)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2081: return m2081((com.badlogic.gdx.math.Vector3)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2082: return m2082();
      case 2083: return m2083(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2084: return m2084(((com.badlogic.gdx.math.Vector3)params[0]));
      case 2085: return m2085(((float[])params[0]));
      case 2086: return m2086(((com.badlogic.gdx.math.Vector2)params[0]), ((Number)params[1]).floatValue());
      case 2100: return m2100((com.badlogic.gdx.math.WindowedMean)obj);
      case 2101: return m2101((com.badlogic.gdx.math.WindowedMean)obj);
      case 2102: return m2102((com.badlogic.gdx.math.WindowedMean)obj,((Number)params[0]).floatValue());
      case 2103: return m2103((com.badlogic.gdx.math.WindowedMean)obj);
      case 2104: return m2104((com.badlogic.gdx.math.WindowedMean)obj);
      case 2105: return m2105((com.badlogic.gdx.math.WindowedMean)obj);
      case 2106: return m2106((com.badlogic.gdx.math.WindowedMean)obj);
      case 2107: return m2107(((Number)params[0]).intValue());
      case 2123: return m2123((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2124: return m2124((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2125: return m2125((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2126: return m2126((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2127: return m2127((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2128: return m2128((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2129: return m2129((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 2130: return m2130((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 2131: return m2131((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.Vector3[])params[0]));
      case 2132: return m2132((com.badlogic.gdx.math.collision.BoundingBox)obj,((java.util.List)params[0]));
      case 2133: return m2133((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2134: return m2134((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2135: return m2135((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 2136: return m2136((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]), ((com.badlogic.gdx.math.Matrix4)params[1]));
      case 2137: return m2137((com.badlogic.gdx.math.collision.BoundingBox)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2138: return m2138((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2139: return m2139((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2140: return m2140((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 2141: return m2141((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 2142: return m2142((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.Vector3)params[0]));
      case 2143: return m2143((com.badlogic.gdx.math.collision.BoundingBox)obj,((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 2144: return m2144((com.badlogic.gdx.math.collision.BoundingBox)obj);
      case 2145: return m2145(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2146: return m2146(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2147: return m2147();
      case 2148: return m2148(((com.badlogic.gdx.math.collision.BoundingBox)params[0]));
      case 2149: return m2149(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 2159: return m2159((com.badlogic.gdx.math.collision.Ray)obj);
      case 2160: return m2160((com.badlogic.gdx.math.collision.Ray)obj,((Number)params[0]).floatValue());
      case 2161: return m2161((com.badlogic.gdx.math.collision.Ray)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2162: return m2162((com.badlogic.gdx.math.collision.Ray)obj,((com.badlogic.gdx.math.Matrix4)params[0]));
      case 2163: return m2163((com.badlogic.gdx.math.collision.Ray)obj);
      case 2164: return m2164((com.badlogic.gdx.math.collision.Ray)obj,((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 2165: return m2165((com.badlogic.gdx.math.collision.Ray)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 2166: return m2166((com.badlogic.gdx.math.collision.Ray)obj,((com.badlogic.gdx.math.collision.Ray)params[0]));
      case 2167: return m2167(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 2175: return m2175(((com.badlogic.gdx.math.Vector3)params[0]), ((com.badlogic.gdx.math.Vector3)params[1]));
      case 2176: return m2176(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue());
      case 2184: return m2184((com.badlogic.gdx.math.collision.Sphere)obj,((com.badlogic.gdx.math.collision.Sphere)params[0]));
  }
     return invoke1(m, obj, params);
  }
  public Object invoke1(Method m, Object obj, Object[] params) {
      switch(m.methodId) {
      case 2185: return m2185(((com.badlogic.gdx.math.Vector3)params[0]), ((Number)params[1]).floatValue());
      case 2191: return m2191((com.badlogic.gdx.scenes.scene2d.Action)obj,((Number)params[0]).floatValue());
      case 2192: return m2192((com.badlogic.gdx.scenes.scene2d.Action)obj);
      case 2193: return m2193((com.badlogic.gdx.scenes.scene2d.Action)obj);
      case 2194: return m2194((com.badlogic.gdx.scenes.scene2d.Action)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2195: return m2195((com.badlogic.gdx.scenes.scene2d.Action)obj);
      case 2196: return m2196((com.badlogic.gdx.scenes.scene2d.Action)obj);
      case 2197: return m2197((com.badlogic.gdx.scenes.scene2d.Action)obj,((com.badlogic.gdx.utils.Pool)params[0]));
      case 2198: return m2198((com.badlogic.gdx.scenes.scene2d.Action)obj);
      case 2239: return m2239((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 2240: return m2240((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2241: return m2241((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 2242: return m2242((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]), ((Boolean)params[1]).booleanValue());
      case 2243: return m2243((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue());
      case 2244: return m2244((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2245: return m2245((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2246: return m2246((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2247: return m2247((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2248: return m2248((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2249: return m2249((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2250: return m2250((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2251: return m2251((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2252: return m2252((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2253: return m2253((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2254: return m2254((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2255: return m2255((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2256: return m2256((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2257: return m2257((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2258: return m2258((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Stage)params[0]));
      case 2259: return m2259((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2260: return m2260((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2261: return m2261((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2262: return m2262((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2263: return m2263((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Group)params[0]));
      case 2264: return m2264((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2265: return m2265((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2266: return m2266((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Touchable)params[0]));
      case 2267: return m2267((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2268: return m2268((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Boolean)params[0]).booleanValue());
      case 2269: return m2269((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2270: return m2270((com.badlogic.gdx.scenes.scene2d.Actor)obj,((java.lang.Object)params[0]));
      case 2271: return m2271((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2272: return m2272((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2273: return m2273((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2274: return m2274((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2275: return m2275((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2276: return m2276((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2277: return m2277((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2278: return m2278((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2279: return m2279((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2280: return m2280((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2281: return m2281((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2282: return m2282((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2283: return m2283((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2284: return m2284((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2285: return m2285((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2286: return m2286((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2287: return m2287((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2288: return m2288((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2289: return m2289((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2290: return m2290((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2291: return m2291((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2292: return m2292((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2293: return m2293((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2294: return m2294((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2295: return m2295((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2296: return m2296((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2297: return m2297((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2298: return m2298((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2299: return m2299((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2300: return m2300((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2301: return m2301((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2302: return m2302((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2303: return m2303((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue());
      case 2304: return m2304((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 2305: return m2305((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2306: return m2306((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2307: return m2307((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2308: return m2308((com.badlogic.gdx.scenes.scene2d.Actor)obj,((java.lang.String)params[0]));
      case 2309: return m2309((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2310: return m2310((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2311: return m2311((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).intValue());
      case 2312: return m2312((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2313: return m2313((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2314: return m2314((com.badlogic.gdx.scenes.scene2d.Actor)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 2315: return m2315((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2316: return m2316((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2317: return m2317((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2318: return m2318((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2319: return m2319((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2320: return m2320((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]));
      case 2321: return m2321((com.badlogic.gdx.scenes.scene2d.Actor)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2322: return m2322((com.badlogic.gdx.scenes.scene2d.Actor)obj);
      case 2323: return m2323();
      case 2342: return m2342((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2343: return m2343((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2344: return m2344((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2345: return m2345((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2346: return m2346((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2347: return m2347((com.badlogic.gdx.scenes.scene2d.Event)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2348: return m2348((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2349: return m2349((com.badlogic.gdx.scenes.scene2d.Event)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2350: return m2350((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2351: return m2351((com.badlogic.gdx.scenes.scene2d.Event)obj,((Boolean)params[0]).booleanValue());
      case 2352: return m2352((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2353: return m2353((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2354: return m2354((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2355: return m2355((com.badlogic.gdx.scenes.scene2d.Event)obj,((Boolean)params[0]).booleanValue());
      case 2356: return m2356((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2357: return m2357((com.badlogic.gdx.scenes.scene2d.Event)obj,((com.badlogic.gdx.scenes.scene2d.Stage)params[0]));
      case 2358: return m2358((com.badlogic.gdx.scenes.scene2d.Event)obj);
      case 2359: return m2359();
      case 2378: return m2378((com.badlogic.gdx.scenes.scene2d.Group)obj,((Number)params[0]).floatValue());
      case 2379: return m2379((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 2380: return m2380((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 2381: return m2381((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((com.badlogic.gdx.math.Matrix4)params[1]));
      case 2382: return m2382((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2383: return m2383((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]));
      case 2384: return m2384((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.math.Rectangle)params[0]));
      case 2385: return m2385((com.badlogic.gdx.scenes.scene2d.Group)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue());
      case 2386: return m2386((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2387: return m2387((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2388: return m2388((com.badlogic.gdx.scenes.scene2d.Group)obj,((Number)params[0]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2389: return m2389((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2390: return m2390((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2391: return m2391((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2392: return m2392((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2393: return m2393((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2394: return m2394((com.badlogic.gdx.scenes.scene2d.Group)obj,((java.lang.String)params[0]));
      case 2395: return m2395((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Stage)params[0]));
      case 2396: return m2396((com.badlogic.gdx.scenes.scene2d.Group)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 2397: return m2397((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2398: return m2398((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2399: return m2399((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2400: return m2400((com.badlogic.gdx.scenes.scene2d.Group)obj,((Boolean)params[0]).booleanValue());
      case 2401: return m2401((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2402: return m2402((com.badlogic.gdx.scenes.scene2d.Group)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]));
      case 2403: return m2403((com.badlogic.gdx.scenes.scene2d.Group)obj);
      case 2404: return m2404((com.badlogic.gdx.scenes.scene2d.Group)obj,((java.lang.String)params[0]));
      case 2405: return m2405();
      case 2425: return m2425((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2426: return m2426((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2427: return m2427((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).floatValue());
      case 2428: return m2428((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2429: return m2429((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).floatValue());
      case 2430: return m2430((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2431: return m2431((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent.Type)params[0]));
      case 2432: return m2432((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2433: return m2433((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).intValue());
      case 2434: return m2434((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2435: return m2435((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).intValue());
      case 2436: return m2436((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2437: return m2437((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).intValue());
      case 2438: return m2438((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2439: return m2439((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Character)params[0]).charValue());
      case 2440: return m2440((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2441: return m2441((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((Number)params[0]).intValue());
      case 2442: return m2442((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2443: return m2443((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2444: return m2444((com.badlogic.gdx.scenes.scene2d.InputEvent)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]));
      case 2445: return m2445((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2446: return m2446((com.badlogic.gdx.scenes.scene2d.InputEvent)obj);
      case 2447: return m2447();
      case 2469: return m2469();
      case 2470: return m2470(((java.lang.String)params[0]));
      case 2475: return m2475((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 2476: return m2476((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 2477: return m2477((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 2478: return m2478((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 2479: return m2479((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2480: return m2480((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[4]));
      case 2481: return m2481((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[4]));
      case 2482: return m2482((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 2483: return m2483((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).intValue());
      case 2484: return m2484((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).intValue());
      case 2485: return m2485((com.badlogic.gdx.scenes.scene2d.InputListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Character)params[1]).charValue());
      case 2486: return m2486();
      case 2538: return m2538((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2539: return m2539((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue());
      case 2540: return m2540((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((Number)params[5]).floatValue(), ((Number)params[6]).floatValue());
      case 2541: return m2541((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2542: return m2542((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2543: return m2543((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).floatValue());
      case 2544: return m2544((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 2545: return m2545((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 2546: return m2546((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 2547: return m2547((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue(), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 2548: return m2548((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 2549: return m2549((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue());
      case 2550: return m2550((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue());
      case 2551: return m2551((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).intValue());
      case 2552: return m2552((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Character)params[0]).charValue());
      case 2553: return m2553((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[2]), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 2554: return m2554((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[2]), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 2555: return m2555((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2556: return m2556((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2557: return m2557((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2558: return m2558((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2559: return m2559((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2560: return m2560((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2561: return m2561((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2562: return m2562((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2563: return m2563((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2564: return m2564((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2565: return m2565((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2566: return m2566((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2567: return m2567((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2568: return m2568((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2569: return m2569((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2570: return m2570((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2571: return m2571((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2572: return m2572((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2573: return m2573((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2574: return m2574((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2575: return m2575((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2576: return m2576((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2577: return m2577((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.graphics.Camera)params[0]));
      case 2578: return m2578((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2579: return m2579((com.badlogic.gdx.scenes.scene2d.Stage)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue());
      case 2580: return m2580((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2581: return m2581((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.math.Vector2)params[0]));
      case 2582: return m2582((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.math.Vector2)params[0]), ((com.badlogic.gdx.math.Matrix4)params[1]));
      case 2583: return m2583((com.badlogic.gdx.scenes.scene2d.Stage)obj,((com.badlogic.gdx.math.Rectangle)params[0]), ((com.badlogic.gdx.math.Rectangle)params[1]));
      case 2584: return m2584((com.badlogic.gdx.scenes.scene2d.Stage)obj);
      case 2585: return m2585();
      case 2586: return m2586(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2587: return m2587(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue());
      case 2588: return m2588(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Boolean)params[2]).booleanValue(), ((com.badlogic.gdx.graphics.g2d.Batch)params[3]));
      case 2600: return m2600((com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus)obj);
      case 2601: return m2601();
      case 2609: return m2609();
      case 2610: return m2610(((java.lang.String)params[0]));
      case 2613: return m2613(((java.lang.Class)params[0]));
      case 2614: return m2614(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2615: return m2615(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2616: return m2616(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2617: return m2617(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 2618: return m2618(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2619: return m2619(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2620: return m2620(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2621: return m2621(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2622: return m2622(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2623: return m2623(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2624: return m2624(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2625: return m2625(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2626: return m2626(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2627: return m2627(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2628: return m2628(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2629: return m2629(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2630: return m2630(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2631: return m2631(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2632: return m2632(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2633: return m2633(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2634: return m2634(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 2635: return m2635(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[3]));
      case 2636: return m2636(((Number)params[0]).floatValue());
      case 2637: return m2637(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2638: return m2638(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[2]));
      case 2639: return m2639(((Number)params[0]).floatValue());
      case 2640: return m2640(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2641: return m2641(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[2]));
      case 2642: return m2642(((com.badlogic.gdx.graphics.Color)params[0]));
      case 2643: return m2643(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).floatValue());
      case 2644: return m2644(((com.badlogic.gdx.graphics.Color)params[0]), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[2]));
      case 2645: return m2645(((Number)params[0]).floatValue());
      case 2646: return m2646(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2647: return m2647(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[2]));
      case 2648: return m2648(((Number)params[0]).floatValue());
      case 2649: return m2649(((Number)params[0]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[1]));
      case 2650: return m2650(((Number)params[0]).floatValue());
      case 2651: return m2651(((Number)params[0]).floatValue(), ((com.badlogic.gdx.math.Interpolation)params[1]));
      case 2652: return m2652();
      case 2653: return m2653();
      case 2654: return m2654(((Boolean)params[0]).booleanValue());
      case 2655: return m2655(((com.badlogic.gdx.scenes.scene2d.Touchable)params[0]));
      case 2656: return m2656();
      case 2657: return m2657(((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2658: return m2658(((Number)params[0]).floatValue());
      case 2659: return m2659(((Number)params[0]).floatValue(), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2660: return m2660(((Number)params[0]).floatValue(), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2661: return m2661(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2662: return m2662(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2663: return m2663(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]));
      case 2664: return m2664(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]));
      case 2665: return m2665(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]), ((com.badlogic.gdx.scenes.scene2d.Action)params[4]));
      case 2666: return m2666(((com.badlogic.gdx.scenes.scene2d.Action[])params[0]));
      case 2667: return m2667();
      case 2668: return m2668(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2669: return m2669(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2670: return m2670(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]));
      case 2671: return m2671(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]));
      case 2672: return m2672(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]), ((com.badlogic.gdx.scenes.scene2d.Action)params[4]));
      case 2673: return m2673(((com.badlogic.gdx.scenes.scene2d.Action[])params[0]));
      case 2674: return m2674();
      case 2675: return m2675(((Number)params[0]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2676: return m2676(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2677: return m2677(((java.lang.Runnable)params[0]));
      case 2678: return m2678(((Boolean)params[0]).booleanValue());
      case 2679: return m2679(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2680: return m2680(((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((Boolean)params[1]).booleanValue());
      case 2681: return m2681(((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((Boolean)params[1]).booleanValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[2]));
      case 2682: return m2682(((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((Boolean)params[1]).booleanValue());
      case 2683: return m2683(((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]), ((Boolean)params[1]).booleanValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[2]));
      case 2684: return m2684();
      case 2690: return m2690((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj,((Number)params[0]).floatValue());
      case 2691: return m2691((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj);
      case 2692: return m2692((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2693: return m2693((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj);
      case 2694: return m2694((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2695: return m2695((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj);
      case 2696: return m2696((com.badlogic.gdx.scenes.scene2d.actions.AddAction)obj);
      case 2697: return m2697();
      case 2705: return m2705((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj,((Number)params[0]).floatValue());
      case 2706: return m2706((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj);
      case 2707: return m2707((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2708: return m2708((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj);
      case 2709: return m2709((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2710: return m2710((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj);
      case 2711: return m2711((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj,((Boolean)params[0]).booleanValue());
      case 2712: return m2712((com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction)obj);
      case 2713: return m2713();
      case 2717: return m2717((com.badlogic.gdx.scenes.scene2d.actions.AfterAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2718: return m2718((com.badlogic.gdx.scenes.scene2d.actions.AfterAction)obj);
      case 2719: return m2719((com.badlogic.gdx.scenes.scene2d.actions.AfterAction)obj,((Number)params[0]).floatValue());
      case 2720: return m2720();
      case 2728: return m2728((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj);
      case 2729: return m2729((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj,((Number)params[0]).floatValue());
      case 2730: return m2730((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj);
      case 2731: return m2731((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj);
      case 2732: return m2732((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 2733: return m2733((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj);
      case 2734: return m2734((com.badlogic.gdx.scenes.scene2d.actions.AlphaAction)obj,((Number)params[0]).floatValue());
      case 2735: return m2735();
      case 2749: return m2749((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj);
      case 2750: return m2750((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj,((Number)params[0]).floatValue());
      case 2751: return m2751((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj);
      case 2752: return m2752((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj);
      case 2753: return m2753((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 2754: return m2754((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj);
      case 2755: return m2755((com.badlogic.gdx.scenes.scene2d.actions.ColorAction)obj,((com.badlogic.gdx.graphics.Color)params[0]));
      case 2756: return m2756();
      case 2762: return m2762((com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 2763: return m2763(((java.lang.Class)params[0]), ((Number)params[1]).intValue());
      case 2769: return m2769((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj,((Number)params[0]).floatValue());
      case 2770: return m2770((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj);
      case 2771: return m2771((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj);
      case 2772: return m2772((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj);
      case 2773: return m2773((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj,((Number)params[0]).floatValue());
      case 2774: return m2774((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj);
      case 2775: return m2775((com.badlogic.gdx.scenes.scene2d.actions.DelayAction)obj,((Number)params[0]).floatValue());
      case 2776: return m2776();
      case 2777: return m2777(((Number)params[0]).floatValue());
      case 2781: return m2781((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2782: return m2782((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj);
      case 2783: return m2783((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj,((Number)params[0]).floatValue());
      case 2784: return m2784((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj,((Number)params[0]).floatValue());
      case 2785: return m2785((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj);
      case 2786: return m2786((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj);
      case 2787: return m2787((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2788: return m2788((com.badlogic.gdx.scenes.scene2d.actions.DelegateAction)obj);
      case 2796: return m2796((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj);
      case 2797: return m2797((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2798: return m2798((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 2799: return m2799((com.badlogic.gdx.scenes.scene2d.actions.EventAction)obj,((Number)params[0]).floatValue());
      case 2807: return m2807((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj);
      case 2808: return m2808((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj,((Number)params[0]).floatValue());
      case 2809: return m2809((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj);
      case 2810: return m2810((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj,((Number)params[0]).floatValue());
      case 2811: return m2811((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj);
      case 2812: return m2812((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj,((Number)params[0]).floatValue());
      case 2813: return m2813((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj);
      case 2814: return m2814((com.badlogic.gdx.scenes.scene2d.actions.FloatAction)obj,((Number)params[0]).floatValue());
      case 2815: return m2815();
      case 2816: return m2816(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2824: return m2824((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj);
      case 2825: return m2825((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj,((Number)params[0]).floatValue());
      case 2826: return m2826((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj);
      case 2827: return m2827((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj,((Number)params[0]).intValue());
      case 2828: return m2828((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj);
      case 2829: return m2829((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj,((Number)params[0]).intValue());
      case 2830: return m2830((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj);
      case 2831: return m2831((com.badlogic.gdx.scenes.scene2d.actions.IntAction)obj,((Number)params[0]).intValue());
      case 2832: return m2832();
      case 2833: return m2833(((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 2837: return m2837((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2838: return m2838((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj,((Number)params[0]).floatValue());
      case 2839: return m2839((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj);
      case 2840: return m2840((com.badlogic.gdx.scenes.scene2d.actions.LayoutAction)obj,((Boolean)params[0]).booleanValue());
      case 2841: return m2841();
      case 2847: return m2847((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj,((Number)params[0]).floatValue());
      case 2848: return m2848((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2849: return m2849((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj);
      case 2850: return m2850((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj,((Number)params[0]).floatValue());
      case 2851: return m2851((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj);
      case 2852: return m2852((com.badlogic.gdx.scenes.scene2d.actions.MoveByAction)obj,((Number)params[0]).floatValue());
      case 2853: return m2853();
      case 2863: return m2863((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj);
      case 2864: return m2864((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj,((Number)params[0]).floatValue());
      case 2865: return m2865((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2866: return m2866((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj);
      case 2867: return m2867((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj,((Number)params[0]).floatValue());
      case 2868: return m2868((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj);
      case 2869: return m2869((com.badlogic.gdx.scenes.scene2d.actions.MoveToAction)obj,((Number)params[0]).floatValue());
      case 2870: return m2870();
      case 2876: return m2876((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj,((Number)params[0]).floatValue());
      case 2877: return m2877((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj);
      case 2878: return m2878((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj);
      case 2879: return m2879((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2880: return m2880((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2881: return m2881((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj);
      case 2882: return m2882((com.badlogic.gdx.scenes.scene2d.actions.ParallelAction)obj);
      case 2883: return m2883();
      case 2884: return m2884(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2885: return m2885(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 2886: return m2886(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]));
      case 2887: return m2887(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]));
      case 2888: return m2888(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]), ((com.badlogic.gdx.scenes.scene2d.Action)params[4]));
      case 2892: return m2892((com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction)obj);
      case 2893: return m2893((com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction)obj,((Number)params[0]).floatValue());
      case 2894: return m2894((com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction)obj,((Number)params[0]).floatValue());
      case 2900: return m2900((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj,((Number)params[0]).floatValue());
      case 2901: return m2901((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj);
      case 2902: return m2902((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2903: return m2903((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj);
      case 2904: return m2904((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj,((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 2905: return m2905((com.badlogic.gdx.scenes.scene2d.actions.RemoveAction)obj);
      case 2906: return m2906();
      case 2912: return m2912((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj,((Number)params[0]).floatValue());
      case 2913: return m2913((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj);
      case 2914: return m2914((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj);
      case 2915: return m2915((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj);
      case 2916: return m2916((com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2917: return m2917();
      case 2925: return m2925((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj,((Number)params[0]).floatValue());
      case 2926: return m2926((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj);
      case 2927: return m2927((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 2928: return m2928((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj);
      case 2929: return m2929((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj,((com.badlogic.gdx.scenes.scene2d.EventListener)params[0]));
      case 2930: return m2930((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj);
      case 2931: return m2931((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj,((Boolean)params[0]).booleanValue());
      case 2932: return m2932((com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction)obj);
      case 2933: return m2933();
      case 2943: return m2943((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj,((Number)params[0]).floatValue());
      case 2944: return m2944((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj);
      case 2945: return m2945((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj);
      case 2946: return m2946((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj,((Number)params[0]).intValue());
      case 2947: return m2947((com.badlogic.gdx.scenes.scene2d.actions.RepeatAction)obj);
      case 2948: return m2948();
      case 2952: return m2952((com.badlogic.gdx.scenes.scene2d.actions.RotateByAction)obj,((Number)params[0]).floatValue());
      case 2953: return m2953((com.badlogic.gdx.scenes.scene2d.actions.RotateByAction)obj);
      case 2954: return m2954((com.badlogic.gdx.scenes.scene2d.actions.RotateByAction)obj,((Number)params[0]).floatValue());
      case 2955: return m2955();
      case 2961: return m2961((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj);
      case 2962: return m2962((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj,((Number)params[0]).floatValue());
      case 2963: return m2963((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj);
      case 2964: return m2964((com.badlogic.gdx.scenes.scene2d.actions.RotateToAction)obj,((Number)params[0]).floatValue());
      case 2965: return m2965();
      case 2971: return m2971((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj,((Number)params[0]).floatValue());
      case 2972: return m2972((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj);
      case 2973: return m2973((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj);
      case 2974: return m2974((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj);
      case 2975: return m2975((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj);
      case 2976: return m2976((com.badlogic.gdx.scenes.scene2d.actions.RunnableAction)obj,((java.lang.Runnable)params[0]));
      case 2977: return m2977();
      case 2983: return m2983((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj,((Number)params[0]).floatValue());
      case 2984: return m2984((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 2985: return m2985((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj,((Number)params[0]).floatValue());
      case 2986: return m2986((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj);
      case 2987: return m2987((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj,((Number)params[0]).floatValue());
      case 2988: return m2988((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj);
      case 2989: return m2989((com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction)obj,((Number)params[0]).floatValue());
      case 2990: return m2990();
      case 3000: return m3000((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj);
      case 3001: return m3001((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj,((Number)params[0]).floatValue());
      case 3002: return m3002((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3003: return m3003((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj,((Number)params[0]).floatValue());
      case 3004: return m3004((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj);
      case 3005: return m3005((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj,((Number)params[0]).floatValue());
      case 3006: return m3006((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj);
      case 3007: return m3007((com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction)obj,((Number)params[0]).floatValue());
      case 3008: return m3008();
      case 3012: return m3012((com.badlogic.gdx.scenes.scene2d.actions.SequenceAction)obj,((Number)params[0]).floatValue());
      case 3013: return m3013((com.badlogic.gdx.scenes.scene2d.actions.SequenceAction)obj);
      case 3014: return m3014();
      case 3015: return m3015(((com.badlogic.gdx.scenes.scene2d.Action)params[0]));
      case 3016: return m3016(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]));
      case 3017: return m3017(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]));
      case 3018: return m3018(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]));
      case 3019: return m3019(((com.badlogic.gdx.scenes.scene2d.Action)params[0]), ((com.badlogic.gdx.scenes.scene2d.Action)params[1]), ((com.badlogic.gdx.scenes.scene2d.Action)params[2]), ((com.badlogic.gdx.scenes.scene2d.Action)params[3]), ((com.badlogic.gdx.scenes.scene2d.Action)params[4]));
      case 3025: return m3025((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj,((Number)params[0]).floatValue());
      case 3026: return m3026((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3027: return m3027((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj);
      case 3028: return m3028((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj,((Number)params[0]).floatValue());
      case 3029: return m3029((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj);
      case 3030: return m3030((com.badlogic.gdx.scenes.scene2d.actions.SizeByAction)obj,((Number)params[0]).floatValue());
      case 3031: return m3031();
      case 3041: return m3041((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj);
      case 3042: return m3042((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj,((Number)params[0]).floatValue());
      case 3043: return m3043((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3044: return m3044((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj);
      case 3045: return m3045((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj,((Number)params[0]).floatValue());
      case 3046: return m3046((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj);
      case 3047: return m3047((com.badlogic.gdx.scenes.scene2d.actions.SizeToAction)obj,((Number)params[0]).floatValue());
      case 3048: return m3048();
      case 3062: return m3062((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((Number)params[0]).floatValue());
      case 3063: return m3063((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3064: return m3064((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3065: return m3065((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((Number)params[0]).floatValue());
      case 3066: return m3066((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3067: return m3067((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3068: return m3068((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3069: return m3069((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3070: return m3070((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((Number)params[0]).floatValue());
      case 3071: return m3071((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3072: return m3072((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((Number)params[0]).floatValue());
      case 3073: return m3073((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3074: return m3074((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((com.badlogic.gdx.math.Interpolation)params[0]));
      case 3075: return m3075((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj);
      case 3076: return m3076((com.badlogic.gdx.scenes.scene2d.actions.TemporalAction)obj,((Boolean)params[0]).booleanValue());
      case 3080: return m3080((com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction)obj,((Number)params[0]).floatValue());
      case 3081: return m3081((com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction)obj);
      case 3082: return m3082((com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction)obj,((Number)params[0]).floatValue());
      case 3083: return m3083();
      case 3087: return m3087((com.badlogic.gdx.scenes.scene2d.actions.TouchableAction)obj,((Number)params[0]).floatValue());
      case 3088: return m3088((com.badlogic.gdx.scenes.scene2d.actions.TouchableAction)obj);
      case 3089: return m3089((com.badlogic.gdx.scenes.scene2d.actions.TouchableAction)obj,((com.badlogic.gdx.scenes.scene2d.Touchable)params[0]));
      case 3090: return m3090();
      case 3094: return m3094((com.badlogic.gdx.scenes.scene2d.actions.VisibleAction)obj,((Number)params[0]).floatValue());
      case 3095: return m3095((com.badlogic.gdx.scenes.scene2d.actions.VisibleAction)obj);
      case 3096: return m3096((com.badlogic.gdx.scenes.scene2d.actions.VisibleAction)obj,((Boolean)params[0]).booleanValue());
      case 3097: return m3097();
      case 3113: return m3113((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj,((Number)params[0]).intValue());
      case 3114: return m3114((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj,((Boolean)params[0]).booleanValue());
      case 3115: return m3115((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj);
      case 3116: return m3116((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj);
      case 3117: return m3117((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj);
      case 3118: return m3118((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj);
      case 3119: return m3119((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj);
      case 3120: return m3120((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj,((Number)params[0]).floatValue());
      case 3121: return m3121((com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup)obj,((Boolean)params[0]).booleanValue());
      case 3122: return m3122();
      case 3138: return m3138((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3139: return m3139((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3140: return m3140((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 3141: return m3141((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3142: return m3142((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3143: return m3143((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3144: return m3144((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3145: return m3145((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3146: return m3146((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3147: return m3147((com.badlogic.gdx.scenes.scene2d.ui.Stack)obj);
      case 3148: return m3148();
      case 3164: return m3164((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj,((Number)params[0]).intValue());
      case 3165: return m3165((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj,((Boolean)params[0]).booleanValue());
      case 3166: return m3166((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj);
      case 3167: return m3167((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj);
      case 3168: return m3168((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj);
      case 3169: return m3169((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj);
      case 3170: return m3170((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj);
      case 3171: return m3171((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj,((Number)params[0]).floatValue());
      case 3172: return m3172((com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup)obj,((Boolean)params[0]).booleanValue());
      case 3173: return m3173();
      case 3181: return m3181((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3182: return m3182((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3183: return m3183((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3184: return m3184((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3185: return m3185((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3186: return m3186((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3187: return m3187((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj,((Boolean)params[0]).booleanValue());
      case 3188: return m3188((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3189: return m3189((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3190: return m3190((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3191: return m3191((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3192: return m3192((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3193: return m3193((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3194: return m3194((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj,((Boolean)params[0]).booleanValue());
      case 3195: return m3195((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 3196: return m3196((com.badlogic.gdx.scenes.scene2d.ui.Widget)obj);
      case 3197: return m3197();
      case 3205: return m3205((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3206: return m3206((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3207: return m3207((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3208: return m3208((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3209: return m3209((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3210: return m3210((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3211: return m3211((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj,((Boolean)params[0]).booleanValue());
      case 3212: return m3212((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj,((com.badlogic.gdx.scenes.scene2d.Group)params[0]), ((Boolean)params[1]).booleanValue());
      case 3213: return m3213((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3214: return m3214((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3215: return m3215((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3216: return m3216((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3217: return m3217((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3218: return m3218((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3219: return m3219((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3220: return m3220((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj,((Boolean)params[0]).booleanValue());
      case 3221: return m3221((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj);
      case 3222: return m3222((com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue());
      case 3223: return m3223();
      case 3235: return m3235((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 3236: return m3236((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3237: return m3237((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3238: return m3238((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3239: return m3239((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 3240: return m3240((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3241: return m3241((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 3242: return m3242((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 3243: return m3243((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((com.badlogic.gdx.math.Vector2)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]), ((com.badlogic.gdx.math.Vector2)params[3]), ((com.badlogic.gdx.math.Vector2)params[4]));
      case 3244: return m3244((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj);
      case 3245: return m3245((com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)obj);
      case 3246: return m3246();
      case 3247: return m3247(((Number)params[0]).floatValue(), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue());
      case 3259: return m3259();
      case 3273: return m3273((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 3274: return m3274((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3275: return m3275((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3276: return m3276((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3277: return m3277((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3278: return m3278((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3279: return m3279((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3280: return m3280((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3281: return m3281((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3282: return m3282((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3283: return m3283((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3284: return m3284((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj);
      case 3285: return m3285((com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable)obj,((Number)params[0]).floatValue());
      case 3286: return m3286();
      case 3287: return m3287(((com.badlogic.gdx.scenes.scene2d.utils.Drawable)params[0]));
      case 3289: return m3289((com.badlogic.gdx.scenes.scene2d.utils.ChangeListener)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 3290: return m3290((com.badlogic.gdx.scenes.scene2d.utils.ChangeListener)obj,((com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]));
      case 3292: return m3292();
      case 3318: return m3318((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3319: return m3319((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3320: return m3320((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3321: return m3321((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[4]));
      case 3322: return m3322((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.scenes.scene2d.Actor)params[4]));
      case 3323: return m3323((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3324: return m3324((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 3325: return m3325((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue());
      case 3326: return m3326((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3327: return m3327((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3328: return m3328((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3329: return m3329((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3330: return m3330((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3331: return m3331((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((Number)params[0]).floatValue());
      case 3332: return m3332((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3333: return m3333((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((Number)params[0]).floatValue());
      case 3334: return m3334((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3335: return m3335((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3336: return m3336((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3337: return m3337((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3338: return m3338((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3339: return m3339((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj);
      case 3340: return m3340((com.badlogic.gdx.scenes.scene2d.utils.ClickListener)obj,((Number)params[0]).intValue());
      case 3341: return m3341();
      case 3342: return m3342(((Number)params[0]).intValue());
      case 3378: return m3378((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)params[0]));
      case 3379: return m3379((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)params[0]));
      case 3380: return m3380((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)params[0]));
      case 3381: return m3381((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)params[0]));
      case 3382: return m3382((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj);
      case 3383: return m3383((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((Number)params[0]).floatValue());
      case 3384: return m3384((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((Number)params[0]).intValue());
      case 3385: return m3385((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3386: return m3386((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((Number)params[0]).floatValue(), ((Number)params[1]).floatValue());
      case 3387: return m3387((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj);
      case 3388: return m3388((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj);
      case 3389: return m3389((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop)obj,((Number)params[0]).intValue());
      case 3390: return m3390();
      case 3400: return m3400((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 3401: return m3401((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj);
      case 3402: return m3402((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 3403: return m3403((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj);
      case 3404: return m3404((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 3405: return m3405((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj);
      case 3406: return m3406((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj);
      case 3407: return m3407((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)obj,((java.lang.Object)params[0]));
      case 3408: return m3408();
      case 3412: return m3412((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3413: return m3413((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)params[4]));
      case 3414: return m3414((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)obj);
      case 3418: return m3418((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)params[0]), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).intValue());
      case 3419: return m3419((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)params[0]), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)params[1]));
      case 3420: return m3420((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)obj,((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source)params[0]), ((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload)params[1]), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).intValue());
      case 3421: return m3421((com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)obj);
      case 3439: return m3439((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3440: return m3440((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3441: return m3441((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue(), ((Number)params[4]).intValue());
      case 3442: return m3442((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3443: return m3443((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3444: return m3444((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((com.badlogic.gdx.scenes.scene2d.InputEvent)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).intValue());
      case 3445: return m3445((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3446: return m3446((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3447: return m3447((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((Number)params[0]).floatValue());
      case 3448: return m3448((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3449: return m3449((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3450: return m3450((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3451: return m3451((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3452: return m3452((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3453: return m3453((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj);
      case 3454: return m3454((com.badlogic.gdx.scenes.scene2d.utils.DragListener)obj,((Number)params[0]).intValue());
      case 3455: return m3455();
      case 3458: return m3458((com.badlogic.gdx.scenes.scene2d.utils.FocusListener)obj,((com.badlogic.gdx.scenes.scene2d.Event)params[0]));
      case 3459: return m3459((com.badlogic.gdx.scenes.scene2d.utils.FocusListener)obj,((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]), ((Boolean)params[2]).booleanValue());
      case 3460: return m3460((com.badlogic.gdx.scenes.scene2d.utils.FocusListener)obj,((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)params[0]), ((com.badlogic.gdx.scenes.scene2d.Actor)params[1]), ((Boolean)params[2]).booleanValue());
      case 3468: return m3468((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj);
      case 3469: return m3469((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj);
      case 3470: return m3470((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj,((Boolean)params[0]).booleanValue());
      case 3471: return m3471((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj);
      case 3472: return m3472((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj,((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type)params[0]));
      case 3473: return m3473((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj);
      case 3474: return m3474((com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent)obj,((com.badlogic.gdx.scenes.scene2d.Actor)params[0]));
      case 3475: return m3475();
      case 3481: return m3481();
      case 3482: return m3482(((java.lang.String)params[0]));
      case 3488: return m3488((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)obj,((com.badlogic.gdx.graphics.g2d.Batch)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue());
      case 3489: return m3489((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)obj,((com.badlogic.gdx.graphics.g2d.NinePatch)params[0]));
      case 3490: return m3490((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)obj);
      case 3491: return m3491();
      case 3492: return m3492(((com.badlogic.gdx.graphics.g2d.NinePatch)params[0]));
      case 3493: return m3493(((com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)params[0]));
      case 3501: return m3501(((com.badlogic.gdx.math.Rectangle)params[0]));
      case 3502: return m3502();
      case 3503: return m3503(((com.badlogic.gdx.math.Rectangle)params[0]));
      case 3504: return m3504(((com.badlogic.gdx.graphics.Camera)params[0]), ((Number)params[1]).floatValue(), ((Number)params[2]).floatValue(), ((Number)params[3]).floatValue(), ((Number)params[4]).floatValue(), ((com.badlogic.gdx.math.Matrix4)params[5]), ((com.badlogic.gdx.math.Rectangle)params[6]), ((com.badlogic.gdx.math.Rectangle)params[7]));
      case 3505: return m3505();
      case 3506: return m3506(((com.badlogic.gdx.graphics.Camera)params[0]), ((com.badlogic.gdx.math.Matrix4)params[1]), ((com.badlogic.gdx.math.Vector2)params[2]));
      case 3507: return m3507();
      case 3519: return m3519((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]));
      case 3520: return m3520((com.badlogic.gdx.utils.Array)obj,((com.badlogic.gdx.utils.Array)params[0]));
      case 3521: return m3521((com.badlogic.gdx.utils.Array)obj,((com.badlogic.gdx.utils.Array)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 3522: return m3522((com.badlogic.gdx.utils.Array)obj,((java.lang.Object[])params[0]));
      case 3523: return m3523((com.badlogic.gdx.utils.Array)obj,((java.lang.Object[])params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 3524: return m3524((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue());
      case 3525: return m3525((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue(), ((java.lang.Object)params[1]));
      case 3526: return m3526((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue(), ((java.lang.Object)params[1]));
      case 3527: return m3527((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue(), ((Number)params[1]).intValue());
      case 3528: return m3528((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3529: return m3529((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3530: return m3530((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3531: return m3531((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3532: return m3532((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue());
      case 3533: return m3533((com.badlogic.gdx.utils.Array)obj,((com.badlogic.gdx.utils.Array)params[0]), ((Boolean)params[1]).booleanValue());
      case 3534: return m3534((com.badlogic.gdx.utils.Array)obj);
      case 3535: return m3535((com.badlogic.gdx.utils.Array)obj);
      case 3536: return m3536((com.badlogic.gdx.utils.Array)obj);
      case 3537: return m3537((com.badlogic.gdx.utils.Array)obj);
      case 3538: return m3538((com.badlogic.gdx.utils.Array)obj);
      case 3539: return m3539((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue());
      case 3540: return m3540((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue());
      case 3541: return m3541((com.badlogic.gdx.utils.Array)obj);
      case 3542: return m3542((com.badlogic.gdx.utils.Array)obj,((java.util.Comparator)params[0]));
      case 3543: return m3543((com.badlogic.gdx.utils.Array)obj,((java.util.Comparator)params[0]), ((Number)params[1]).intValue());
      case 3544: return m3544((com.badlogic.gdx.utils.Array)obj,((java.util.Comparator)params[0]), ((Number)params[1]).intValue());
      case 3545: return m3545((com.badlogic.gdx.utils.Array)obj);
      case 3546: return m3546((com.badlogic.gdx.utils.Array)obj);
      case 3547: return m3547((com.badlogic.gdx.utils.Array)obj);
      case 3548: return m3548((com.badlogic.gdx.utils.Array)obj,((com.badlogic.gdx.utils.Predicate)params[0]));
      case 3549: return m3549((com.badlogic.gdx.utils.Array)obj,((Number)params[0]).intValue());
      case 3550: return m3550((com.badlogic.gdx.utils.Array)obj);
      case 3551: return m3551((com.badlogic.gdx.utils.Array)obj);
      case 3552: return m3552((com.badlogic.gdx.utils.Array)obj,((java.lang.Class)params[0]));
      case 3553: return m3553((com.badlogic.gdx.utils.Array)obj,((java.lang.Object)params[0]));
      case 3554: return m3554((com.badlogic.gdx.utils.Array)obj);
      case 3555: return m3555((com.badlogic.gdx.utils.Array)obj,((java.lang.String)params[0]));
      case 3556: return m3556(((java.lang.Class)params[0]));
      case 3557: return m3557(((Boolean)params[0]).booleanValue(), ((Number)params[1]).intValue(), ((java.lang.Class)params[2]));
      case 3558: return m3558();
      case 3559: return m3559(((Number)params[0]).intValue());
      case 3560: return m3560(((Boolean)params[0]).booleanValue(), ((Number)params[1]).intValue());
      case 3561: return m3561(((Boolean)params[0]).booleanValue(), ((Number)params[1]).intValue(), ((java.lang.Class)params[2]));
      case 3562: return m3562(((java.lang.Class)params[0]));
      case 3563: return m3563(((com.badlogic.gdx.utils.Array)params[0]));
      case 3564: return m3564(((java.lang.Object[])params[0]));
      case 3565: return m3565(((Boolean)params[0]).booleanValue(), ((java.lang.Object[])params[1]), ((Number)params[2]).intValue(), ((Number)params[3]).intValue());
      case 3575: return m3575((com.badlogic.gdx.utils.Array.ArrayIterable)obj);
      case 3576: return m3576(((com.badlogic.gdx.utils.Array)params[0]));
      case 3577: return m3577(((com.badlogic.gdx.utils.Array)params[0]), ((Boolean)params[1]).booleanValue());
      case 3587: return m3587((com.badlogic.gdx.utils.Array.ArrayIterator)obj);
      case 3588: return m3588((com.badlogic.gdx.utils.Array.ArrayIterator)obj);
      case 3589: return m3589((com.badlogic.gdx.utils.Array.ArrayIterator)obj);
      case 3590: return m3590((com.badlogic.gdx.utils.Array.ArrayIterator)obj);
      case 3591: return m3591((com.badlogic.gdx.utils.Array.ArrayIterator)obj);
      case 3592: return m3592(((com.badlogic.gdx.utils.Array)params[0]));
      case 3593: return m3593(((com.badlogic.gdx.utils.Array)params[0]), ((Boolean)params[1]).booleanValue());
      case 3615: return m3615((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3616: return m3616((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]), ((Number)params[2]).intValue());
      case 3617: return m3617((com.badlogic.gdx.utils.ArrayMap)obj,((com.badlogic.gdx.utils.ArrayMap)params[0]));
      case 3618: return m3618((com.badlogic.gdx.utils.ArrayMap)obj,((com.badlogic.gdx.utils.ArrayMap)params[0]), ((Number)params[1]).intValue(), ((Number)params[2]).intValue());
      case 3619: return m3619((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]));
      case 3620: return m3620((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3621: return m3621((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3622: return m3622((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3623: return m3623((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3624: return m3624((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3625: return m3625((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue(), ((java.lang.Object)params[1]));
      case 3626: return m3626((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue(), ((java.lang.Object)params[1]));
      case 3627: return m3627((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue(), ((java.lang.Object)params[1]), ((java.lang.Object)params[2]));
      case 3628: return m3628((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]));
      case 3629: return m3629((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3630: return m3630((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]));
      case 3631: return m3631((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3632: return m3632((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]));
      case 3633: return m3633((com.badlogic.gdx.utils.ArrayMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3634: return m3634((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3635: return m3635((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3636: return m3636((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3637: return m3637((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3638: return m3638((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3639: return m3639((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3640: return m3640((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3641: return m3641((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3642: return m3642((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3643: return m3643((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3644: return m3644((com.badlogic.gdx.utils.ArrayMap)obj,((Number)params[0]).intValue());
      case 3645: return m3645((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3646: return m3646((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3647: return m3647((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3648: return m3648((com.badlogic.gdx.utils.ArrayMap)obj);
      case 3649: return m3649();
      case 3650: return m3650(((Number)params[0]).intValue());
      case 3651: return m3651(((Boolean)params[0]).booleanValue(), ((Number)params[1]).intValue());
      case 3652: return m3652(((Boolean)params[0]).booleanValue(), ((Number)params[1]).intValue(), ((java.lang.Class)params[2]), ((java.lang.Class)params[3]));
      case 3653: return m3653(((java.lang.Class)params[0]), ((java.lang.Class)params[1]));
      case 3654: return m3654(((com.badlogic.gdx.utils.ArrayMap)params[0]));
      case 3664: return m3664((com.badlogic.gdx.utils.ArrayMap.Entries)obj);
      case 3665: return m3665((com.badlogic.gdx.utils.ArrayMap.Entries)obj);
      case 3666: return m3666((com.badlogic.gdx.utils.ArrayMap.Entries)obj);
      case 3667: return m3667((com.badlogic.gdx.utils.ArrayMap.Entries)obj);
      case 3668: return m3668((com.badlogic.gdx.utils.ArrayMap.Entries)obj);
      case 3669: return m3669(((com.badlogic.gdx.utils.ArrayMap)params[0]));
      case 3677: return m3677((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3678: return m3678((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3679: return m3679((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3680: return m3680((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3681: return m3681((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3682: return m3682((com.badlogic.gdx.utils.ArrayMap.Keys)obj);
      case 3683: return m3683(((com.badlogic.gdx.utils.ArrayMap)params[0]));
      case 3691: return m3691((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3692: return m3692((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3693: return m3693((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3694: return m3694((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3695: return m3695((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3696: return m3696((com.badlogic.gdx.utils.ArrayMap.Values)obj);
      case 3697: return m3697(((com.badlogic.gdx.utils.ArrayMap)params[0]));
      case 3740: return m3740((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3741: return m3741((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3742: return m3742((com.badlogic.gdx.utils.ObjectMap)obj,((com.badlogic.gdx.utils.ObjectMap)params[0]));
      case 3743: return m3743((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3744: return m3744((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]), ((Number)params[2]).intValue(), ((java.lang.Object)params[3]), ((Number)params[4]).intValue(), ((java.lang.Object)params[5]), ((Number)params[6]).intValue(), ((java.lang.Object)params[7]));
      case 3745: return m3745((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3746: return m3746((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3747: return m3747((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3748: return m3748((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3749: return m3749((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3750: return m3750((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3751: return m3751((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3752: return m3752((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3753: return m3753((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3754: return m3754((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3755: return m3755((com.badlogic.gdx.utils.ObjectMap)obj);
      case 3756: return m3756((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3757: return m3757((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3758: return m3758((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]));
      case 3759: return m3759((com.badlogic.gdx.utils.ObjectMap)obj,((java.lang.Object)params[0]), ((Boolean)params[1]).booleanValue());
      case 3760: return m3760((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3761: return m3761((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3762: return m3762((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3763: return m3763((com.badlogic.gdx.utils.ObjectMap)obj,((Number)params[0]).intValue());
      case 3764: return m3764((com.badlogic.gdx.utils.ObjectMap)obj);
      case 3765: return m3765((com.badlogic.gdx.utils.ObjectMap)obj);
      case 3766: return m3766((com.badlogic.gdx.utils.ObjectMap)obj);
      case 3767: return m3767((com.badlogic.gdx.utils.ObjectMap)obj);
      case 3768: return m3768();
      case 3769: return m3769(((Number)params[0]).intValue());
      case 3770: return m3770(((Number)params[0]).intValue(), ((Number)params[1]).floatValue());
      case 3771: return m3771(((com.badlogic.gdx.utils.ObjectMap)params[0]));
      case 3775: return m3775((com.badlogic.gdx.utils.ObjectMap.Entries)obj);
      case 3776: return m3776((com.badlogic.gdx.utils.ObjectMap.Entries)obj);
      case 3777: return m3777((com.badlogic.gdx.utils.ObjectMap.Entries)obj);
      case 3778: return m3778(((com.badlogic.gdx.utils.ObjectMap)params[0]));
      case 3784: return m3784((com.badlogic.gdx.utils.ObjectMap.Entry)obj);
      case 3785: return m3785();
      case 3787: return m3787((com.badlogic.gdx.utils.ObjectMap.Keys)obj);
      case 3788: return m3788((com.badlogic.gdx.utils.ObjectMap.Keys)obj);
      case 3789: return m3789((com.badlogic.gdx.utils.ObjectMap.Keys)obj);
      case 3790: return m3790((com.badlogic.gdx.utils.ObjectMap.Keys)obj);
      case 3791: return m3791(((com.badlogic.gdx.utils.ObjectMap)params[0]));
      case 3793: return m3793((com.badlogic.gdx.utils.ObjectMap.Values)obj);
      case 3794: return m3794((com.badlogic.gdx.utils.ObjectMap.Values)obj);
      case 3795: return m3795((com.badlogic.gdx.utils.ObjectMap.Values)obj);
      case 3796: return m3796((com.badlogic.gdx.utils.ObjectMap.Values)obj);
      case 3797: return m3797((com.badlogic.gdx.utils.ObjectMap.Values)obj,((com.badlogic.gdx.utils.Array)params[0]));
      case 3798: return m3798(((com.badlogic.gdx.utils.ObjectMap)params[0]));
      case 3802: return m3802((com.badlogic.gdx.utils.OrderedMap)obj,((java.lang.Object)params[0]), ((java.lang.Object)params[1]));
      case 3803: return m3803((com.badlogic.gdx.utils.OrderedMap)obj,((java.lang.Object)params[0]));
      case 3804: return m3804((com.badlogic.gdx.utils.OrderedMap)obj,((Number)params[0]).intValue());
      case 3805: return m3805((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3806: return m3806((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3807: return m3807((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3808: return m3808((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3809: return m3809((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3810: return m3810((com.badlogic.gdx.utils.OrderedMap)obj);
      case 3811: return m3811();
      case 3812: return m3812(((Number)params[0]).intValue());
      case 3813: return m3813(((Number)params[0]).intValue(), ((Number)params[1]).floatValue());
      case 3814: return m3814(((com.badlogic.gdx.utils.ObjectMap)params[0]));
  }
     throw new IllegalArgumentException("Missing method-stub " + m.methodId + " for method " + m.name);
  }
}
